container SourceData :  using = "units;geography;classifications"
{
	#include <bag.dms>
	#include <bbg.dms>
	#include <begrbebgeb.dms>
	// #include <brk.dms>
	#include <brt.dms>
	// #include <nvm.dms>
	// #include <overig.dms>
	#include <regios.dms>
	#include <spatial_data.dms>
	// #include <woz.dms>
	#include <vierkanten.dms>
	
	container overig
	{
		unit<uint32> Natura2000:
			StorageName     = "%Redev_DataDir%/Beleid/EU/Natura2000_20200524_RD_reproject.gdb"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	Source          = "Nationaal georegister download shp-formaat op 20201013, conversie in ArcGIS met project fuunctie (niet via dataframe) naar gdb-formaat ivm grootte"
							  "check op 20220117 (van het bestand met als datum 2020-05-24) met nieuwer bestand, inhoudelijk niet gewijzigd"
		,	url             = "http://geodata.nationaalgeoregister.nl/natura2000/atom/natura2000.xml PS_Natura2000_as_is"
							  "https://www.nationaalgeoregister.nl/geonetwork/srv/api/records/8829e5dd-c861-4639-a6c8-fdbb6e3440d2"
		,	SyncMode        = "Attr"
		,	SqlString       = "SELECT * FROM Natura2000_20200524_RD_reproject WHERE KADASTER <> 'niet van toepassing'" 	//skip gebieden ver de Noordzee op op basis van Kadaster-filter
		{
			attribute<rdc> geometry (poly);
			attribute<string>    name := AsItemName(naam_n2k);
			attribute<string>    label := name;
			attribute<bool> per_100m (rdc_100m) := IsDefined(poly2grid(geometry, rdc_100m));
			unit<uint32> PointSet := sequence2points(geometry);
			
			// attribute<.>    per_25m            (NL_grid/domain_25m) := poly2grid(Geometry, NL_grid/domain_25m);
			// attribute<.>    per_100m               (NL_grid/domain) := modus(per_25m, NL_grid/domain_25m/domain_rel);
			// attribute<bool> Result_AdminDomain (NL_grid/domain_25m) := per_25m >= 0;
			// attribute<bool> Result_AllocDomain     (NL_grid/domain) := per_100m >= 0;
		}
	
	
		unit<uint32> landprice_pc4_2007
		:  StorageName = "%SourceDataDir%/Overig/Weighted_avg_landprice_pc4_1985-2007.csv"
		,  StorageType = "gdal.vect"
		,  StorageReadOnly = "True" 
		{
			attribute<string> gemeente;
			attribute<string> PC4Code;
			attribute<string> p_m2_FE;
			
			attribute<float32> landprice  := p_m2_FE[float32];
		}
		
		unit<uint32> StadsDorpsGezichten_src
		:  StorageName = "%SourceDataDir%/Overig/Stads_en_Dorpsgezichten_2020.gdb"
		,  StorageType = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode = "AllTables"
		{
			attribute<rdc>              geometry (poly);
			attribute<string>           naam : DialogType = "LabelText";
			attribute<string>           JURSTATUS;
			
		}
		
		unit<uint32> StadsDorpsGezichten := select_with_org_rel(StadsDorpsGezichten_src/JURSTATUS == 'rijksmonument')
		{
			attribute<rdc>              geometry (poly) := org_rel -> geometry;
			attribute<string>           label           := org_rel -> naam;
		}
	}
	
	container Kerncijfer_WijkBuurt
	{
		unit<uint32> jaren := range(uint32, 2012, 2025)
		{
			attribute<uint32> jaar            := id(.);
			attribute<string> name            := 'Y'+string(jaar);
			attribute<string> code_veld       := jaar >= 2019 ? 'gwb_code' : 'wkcode';
		}
		
		container Read :=
			for_each_ne(
				jaren/name
				, 'Read_xlsx_T('+quote(string(jaren/jaar))+','+quote(jaren/code_veld)+')'
			)
		{
			container Last := =last(jaren/name);
		}

		Template Read_xlsx_T
		{
			parameter<string> jaar;
			parameter<string> code_veld;
			//
	
			unit<uint32> XLSX 
			:   StorageName     = "='%SourceDataDir%/Overig/CBS_Kerncijfers_WijkBuurt/kwb-'+jaar+'.xlsx'"
			,   StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> WKCODE := IsNUll(BU_CODE) ? 'WK'+GM_CODE+WK_CODE : Null_str; 
				attribute<string> CODE   := =code_veld; 
			}
		}
	}
	
 	container EigendomStaat
	{
		unit<uint32> Corporatiebezit_data
		:   StorageName     = "%Redev_DataDir%/Vastgoed/EigendomStaat/CorporatieBezit.shp"
		,   StorageType     = "gdal.vect"
		// ,	DialogType      = "Map"
		,	StorageReadOnly = "True"
		,	Source          = "https://pbl.sliksvn.com/vesta/SD51/EigendomStaat revision 640"
		{
			attribute<string> Label := 'C_'+string(OBJECTID), DialogType = "LabelText";
			attribute<rdc> geometry;
			attribute<classifications/Eigendom> Eigendom_rel := const(classifications/Eigendom/V/WoonCorp,.); //eigendomstatus als attribuut
		}
		
		// inlezen puntenbestand particuliere huur
		unit<uint32> Particulierehuur_data
		:   StorageName     = "%Redev_DataDir%/Vastgoed/EigendomStaat/ParticuliereHuur.shp"
		,   StorageType     = "gdal.vect"
		,	DialogType      = "Map"
		,	StorageReadOnly = "True"
		,	Source          = "https://pbl.sliksvn.com/vesta/SD51/EigendomStaat revision 640"
		{
			attribute<string> Label := 'H_'+string(OBJECTID);
			attribute<rdc> geometry;
			attribute<classifications/Eigendom> Eigendom_rel := const(classifications/Eigendom/V/PartHuur,.); //eigendomstatus als attribuut
		}
		
		//samenvoegen bovenstaande puntenbestanden tot gezamenlijke entiteit
		unit<uint32> EigendomStaat_data := union_unit(Corporatiebezit_data, Particulierehuur_data)
		{
			attribute<string> Label := union_data(., Corporatiebezit_data/Label, Particulierehuur_data/Label);
			attribute<rdc> geometry := union_data(., Corporatiebezit_data/geometry, Particulierehuur_data/geometry);
			attribute<classifications/Eigendom> Eigendom_rel := union_data(., Corporatiebezit_data/Eigendom_rel, Particulierehuur_data/Eigendom_rel);
			
			// ruimtelijke matching om bijbehorend BAG pand per punt te bepalen
			attribute<pand> Pand_rel := point_in_polygon(geometry, pand/Geometry);
		}
		
		//afgeleide attributen vastgesteld per BAG pand
		// unit<uint32> pand := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand'
		// {
			// attribute<rdc> Geometry (poly) := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/Geometry';
			
			//eigendomstatus wordt afgeleid van gekoppelde puntattributen, uitgaande van meest voorkomende status. Indien onbekend wordt koop verondersteld.
			// attribute<classifications/Eigendom> Eigendom_rel := makedefined(modus(EigendomStaat_data/Eigendom_rel, EigendomStaat_data/Pand_rel), classifications/Eigendom/V/Koop);
		// }
	}
 
 
 	container Zones : using = "/classifications/BBG"
	{
		container gg_zones_bbg2000_begr2000
		{
			container gg_3K_in_bbg := 
				for_each_nedv( 
					gg_3K/name
					,'begenzing_bebouwd_gebied/BBG_2000/is_bbg && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2000_augm_100m_3k == gg_3K/V/' + gg_3K/name
					,NL_grid/domain
					,bool
				);
			container gg_3K_buiten_bbg := 
				for_each_nedv(
					gg_3K/name
					,'!begenzing_bebouwd_gebied/BBG_2000/is_bbg && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2000_augm_100m_3k == gg_3K/V/' + gg_3K/name
					,NL_grid/domain
					,bool
				);
			// container gg_10K_in_bbg := 
				// for_each_nedv(
					// gg_10K/name
					// ,'begenzing_bebouwd_gebied/BBG_2000/is_bbg && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2000_100m_10k == gg_10K/V/' + gg_10K/name
					// ,NL_grid/domain
					// ,bool
				// );
			// container gg_10K_buiten_bbg := 
				// for_each_nedv(
					// gg_10K/name
					// ,'!begenzing_bebouwd_gebied/BBG_2000/is_bbg && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2000_100m_10k == gg_10K/V/' + gg_10K/name
					// ,NL_grid/domain
					// ,bool
				// );
		} 
		container gg_zones_bbg2012_begr2011
		{
			container gg_3K_in_bbg := 
				for_each_nedv( 
					gg_3K/name
					,'begenzing_bebouwd_gebied/Bevolkingskern_2011/is_bbg_augmBegr2000 && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2012_augm_100m_3k == gg_3K/V/' + gg_3K/name
					,NL_grid/domain
					,bool
				);
			container gg_3K_buiten_bbg := 
				for_each_nedv(
					gg_3K/name
					,'!begenzing_bebouwd_gebied/Bevolkingskern_2011/is_bbg_augmBegr2000 && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2012_augm_100m_3k == gg_3K/V/' + gg_3K/name
					,NL_grid/domain
					,bool
				);
			// container gg_10K_in_bbg := 
				// for_each_nedv(
					// gg_10K/name
					// ,'begenzing_bebouwd_gebied/Bevolkingskern_2011/is_bbg_augmBegr2000 && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2012_100m_10k == gg_10K/V/' + gg_10K/name
					// ,NL_grid/domain
					// ,bool
				// );
			// container gg_10K_buiten_bbg := 
				// for_each_nedv(
					// gg_10K/name
					// ,'!begenzing_bebouwd_gebied/Bevolkingskern_2011/is_bbg_augmBegr2000 && /SourceData/bestand_bodem_gebruik/bbg/dominant/bbg2012_100m_10k == gg_10K/V/' + gg_10K/name
					// ,NL_grid/domain
					// ,bool
				// );
		} 
	}
}
