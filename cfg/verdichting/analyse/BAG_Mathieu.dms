container BAG_Mathieu:  using = "eenheden;geometries"
{ 
	unit<uint32>      RegioUnit_Gem       := Brondata/RegioIndelingen/gemeenten/j2021;
	unit<uint32>      RegioUnit_Aggl      := Brondata/RegioIndelingen/gemeenten/j2021/Agglomeration_uq;
	unit<uint8>       WP2                 := typeringen/bag/type_woonpand_2;
	unit<uint8>       WP4                 := typeringen/bag/type_woonpand_4;
	unit<uint8>       WP5                 := typeringen/bag/type_woonpand;
	
	
	container y2019 := PerYear_T('y2019');
	container y2022 := PerYear_T('y2022');
	
	Template PerYear_T
	{
		parameter<string> year;
		///
		unit<uint32>      vbo                 := ='Brondata/BAG/Snapshots/VBOs/'+year+'01/vbo';
		unit<uint32>      pand                := ='Brondata/BAG/Snapshots/Panden/'+year+'01/pand';
		
		unit<uint32>      panden              := pand/Voorraad
		{
			attribute<vbos_bijeenkomst> vbos_bijeenkomst_rel    := invert(vbos_bijeenkomst/pand_rel);
			attribute<uint32>           count_bijeenkomst_vbos  := pcount(vbos_bijeenkomst/pand_rel);
			attribute<int32>            sum_bijeenkomst_m2      := sum(vbos_bijeenkomst/oppervlakte_trunc, vbos_bijeenkomst/pand_rel);
		}
		unit<uint32>      vbos_bijeenkomst    := vbo/GebruiksdoelSets/bijeenkomst/GebruiksdoelSet/Voorraad
		{
			attribute<panden> pand_rel := point_in_polygon(vbos_bijeenkomst/geometry,panden/geometry);
		}
		
		unit<uint32>      panden_bijeenkomst  := subset(IsDefined(panden/vbos_bijeenkomst_rel))
		, StorageName = "='%LocalDataProjDir%/Output/BAG_Panden_Bijeenkomst_'+year+'.gpkg'"
		, StorageType = "gdalwrite.vect"
		{ 
			attribute<rdc>    geometry         (poly) := panden/geometry[nr_OrgEntity];
			attribute<uint32> count_bijeenkomst_vbos  := panden/count_bijeenkomst_vbos[nr_OrgEntity];
			attribute<int32>  sum_bijeenkomst_m2      := panden/sum_bijeenkomst_m2[nr_OrgEntity];
		}
	}
}
