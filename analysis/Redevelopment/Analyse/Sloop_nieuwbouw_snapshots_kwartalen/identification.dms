container Identification
{ 
	container MakeRedevTypes :=
		for_each_ne(
			RedevSub_Types/Sub_Types
			, 'MakeRedevTypes_T('+quote(RedevSub_Types/Sub_Types)+','+quote(RedevSub_Types/MainTypes)+','+quote(RedevSub_Types/WoonNietWoon)+')'
		);
		
	container MakeRedevTypes_Mixed :=
		for_each_ne(
			RedevSubMixed_Types/name
			, 'MakeRedevTypes_Mixed_T('+quote(RedevSubMixed_Types/name)+','+quote(RedevSubMixed_Types/main)+')'
		);

	Template MakeRedevTypes_T
	{
		parameter<string> SubType_str;
		parameter<string> MainType_str;
		parameter<string> WoonNietWoon_str;
		
	
		unit<uint32> Subtype := ='select_with_org_rel(Prep/VBOs/uq_identificatie/'+SubType_str+')'
		, DialogData = "point"
		, DialogType = "map"
		{
			attribute<geography/rdc>        point                      := org_rel -> geometry;
			attribute<uint64>                vbo_id_nr                  := org_rel -> bag_nr;
			attribute<uint64>                pand_id_nr                 := org_rel -> pand_id_nr;
			attribute<Periods>               RelevantJaar_src           := ='org_rel -> '+MainType_str+'/PerPeriod_'+WoonNietWoon_str+'/Period';
			attribute<Periods>               RelevantJaar               := MainType_str == 'Nieuwbouw' || MainType_str == 'Toevoeging'   || MainType_str == 'Transformatie'  
																				? RelevantJaar_src + 1 
																				: MainType_str == 'Sloop' || MainType_str == 'Onttrekking' 
																					? RelevantJaar_src  
																					: RelevantJaar_src;
			attribute<uq_pand>               uq_rel                     := rlookup(pand_id_nr, uq_pand/bag_nr);
			
			attribute<bool>                  O_vbo_IsVoorraad           := vbo_status/IsVoorraad[O_status_rel];
			attribute<bool>                  N_vbo_IsVoorraad           := vbo_status/IsVoorraad[N_status_rel];
			
			attribute<vbo_status>            O_status_rel               := =  	'Switch(
																					  case(MainType_str == ''Onttrekking'' || MainType_str == ''Sloop''    ,switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(vbo_id_nr, vbo_domains/'+Periods/name+'/bag_nr, vbo_domains/'+Periods/name+'/status_rel))',',')+', (0b/0b)[vbo_status]))
																					, case(MainType_str == ''Toevoeging'' || MainType_str == ''Nieuwbouw'' || MainType_str == ''Transformatie'' || MainType_str == ''Onveranderd'' ,switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(vbo_id_nr, vbo_domains/'+Periods/prev_name+'/bag_nr, vbo_domains/'+Periods/prev_name+'/status_rel))',',')+', (0b/0b)[vbo_status]))
																					, (0/0)[vbo_status]
																				)';
			
			attribute<vbo_status>            N_status_rel               := =  	'Switch(
																					  case(MainType_str == ''Onttrekking'' || MainType_str == ''Sloop''    ,switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(vbo_id_nr, vbo_domains/'+Periods/next_name+'/bag_nr, vbo_domains/'+Periods/next_name+'/status_rel))',',')+', (0b/0b)[vbo_status]))
																					, case(MainType_str == ''Toevoeging'' || MainType_str == ''Nieuwbouw'' || MainType_str == ''Transformatie'' || MainType_str == ''Onveranderd'' ,switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(vbo_id_nr, vbo_domains/'+Periods/name+'/bag_nr, vbo_domains/'+Periods/name+'/status_rel))',',')+', (0b/0b)[vbo_status]))
																					, (0/0)[vbo_status]
																				)';
			
			attribute<geography/rdc>        pand_geometry_src (poly)   := ='switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(pand_id_nr, pand_domains/'+Periods/name+'/bag_nr, pand_domains/'+Periods/name+'/geometry))',',')+', points2polygon(point(0f,0f,geography/rdc)))';
			attribute<geography/rdc>        pand_geometry_next (poly)  := ='switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(pand_id_nr, pand_domains/'+Periods/next4_name+'/bag_nr, pand_domains/'+Periods/next4_name+'/geometry))',',')+', points2polygon(point(0f,0f,geography/rdc)))';
			attribute<geography/rdc>        pand_geometry (poly)       := IsDefined(pand_geometry_src) 
																				? pand_geometry_src
																				: pand_geometry_next;
																				
			attribute<jaar>                  pand_bouwjaar              := ='switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(pand_id_nr, pand_domains/'+Periods/name+'/bag_nr, pand_domains/'+Periods/name+'/bouwjaar_trunc))',',')+', (0/0)[jaar])';
			attribute<WP5>                   pand_type                  := ='switch('+AsList('case(RelevantJaar==Periods/v/'+Periods/name+'[Periods], rjoin(pand_id_nr, pand_domains/'+Periods/name+'/bag_nr, pand_domains/'+Periods/name+'/WP5_rel))',',')+', (0/0)[WP5])';
			attribute<uint16>                pand_hoogte                := org_rel -> pand_hoogte;

			unit<uint32> uq_pand := unique(pand_id_nr)
			, DialogData = "geometry_rd"
			, DialogType = "map"
			{
				attribute<geography/rdc>       geometry_rd (poly)                  := rjoin(bag_nr, ../pand_id_nr, ../pand_geometry);
				attribute<uint64>               bag_nr                              := values;
				attribute<Periods>              RelevantJaar                        := rjoin(bag_nr, ../pand_id_nr, ../RelevantJaar);
				parameter<bool>                 IsTransformatie                     := MainType_str == 'Transformatie';
				attribute<bool>                 IsMixed                             := = IsTransformatie
																							? 'const(FALSE,.)'
																							: 'rjoin(bag_nr, MakeRedevTypes_Mixed/'+MainType_str+'_Mixed/Subtype/uq_pand/bag_nr, MakeRedevTypes_Mixed/'+MainType_str+'_Mixed/Subtype/uq_pand/IsMixed)';
				
				unit<uint32> sub := select_with_org_rel(!IsMixed)
				{
					attribute<geography/rdc>       geometry (poly)                     := org_rel -> geometry_rd;
					attribute<uint64>               bag_nr                              := org_rel -> bag_nr;
					attribute<Periods>              RelevantJaar                        := org_rel -> RelevantJaar;
				}
			}
		}
	}
	
	Template MakeRedevTypes_Mixed_T
	{
		parameter<string> SubType_str;
		parameter<string> MainType_str;
		
		unit<uint32> Subtype := ='union_unit(MakeRedevTypes/'+MainType_str+'_Woon/Subtype/uq_pand, MakeRedevTypes/'+MainType_str+'_NietWoon/Subtype/uq_pand)'
		{
			attribute<geography/rdc>       geometry_rd (poly)                  := ='union_data(., MakeRedevTypes/'+MainType_str+'_Woon/Subtype/uq_pand/geometry_rd, MakeRedevTypes/'+MainType_str+'_NietWoon/Subtype/uq_pand/geometry_rd)';
			attribute<uint64>               bag_nr                       := ='union_data(., MakeRedevTypes/'+MainType_str+'_Woon/Subtype/uq_pand/bag_nr, MakeRedevTypes/'+MainType_str+'_NietWoon/Subtype/uq_pand/bag_nr)';
			attribute<Periods>       RelevantJaar                        := ='union_data(., MakeRedevTypes/'+MainType_str+'_Woon/Subtype/uq_pand/RelevantJaar, MakeRedevTypes/'+MainType_str+'_NietWoon/Subtype/uq_pand/RelevantJaar)'; 
			attribute<uq_pand>              uq_rel                              := rlookup(bag_nr, uq_pand/bag_nr);
			attribute<bool>                 IsMixed                             := rjoin(bag_nr, uq_pand/bag_nr, uq_pand/IsMixed);
			
			unit<uint32> uq_pand := unique(bag_nr)
			{
				attribute<uint32>          count         := count(../uq_rel, ../uq_rel);
				attribute<bool>            IsMixed       := count == 2;
				attribute<uint64>          bag_nr        := values;
				attribute<Periods>  RelevantJaar  := rjoin(bag_nr, ../bag_nr, ../RelevantJaar);
				
				unit<uint32> sub := select_with_org_rel(../IsMixed)
				, DialogType = "map"
				, DialogData = "geometry_rd"
				{
					attribute<geography/rdc>       geometry_rd (poly)                  := org_rel -> geometry_rd;
					attribute<geography/rdc_mm>    geometry_mm (poly)                  := geometry_rd[geography/rdc_mm];
					attribute<geography/rdc>       centroid                            := centroid_or_mid(geometry_rd);
					attribute<uint64>               bag_nr                              := org_rel -> bag_nr;
					attribute<Periods>       RelevantJaar                        := org_rel -> RelevantJaar;
				}
			}
		}
	}
}