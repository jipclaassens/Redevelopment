container RegioIndelingen : using = "geometries"
{ 
	container impl
	{
		container Gebiedsindelingen_2022
		:	StorageName     = "%SourceDataDir%/CBS/cbsgebiedsindelingen2022.gpkg"
		, 	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode        = "alltables"
		,	DialogData      = "rdc";
		
		unit<uint32>  Buurt := Gebiedsindelingen_2022/buurt_niet_gegeneraliseerd 
		{
			attribute<rdc>       geometry (poly) := Gebiedsindelingen_2022/buurt_niet_gegeneraliseerd/geometry;
			attribute<string>    statcode        := Gebiedsindelingen_2022/buurt_niet_gegeneraliseerd/statcode;
			attribute<string>    statnaam        := Gebiedsindelingen_2022/buurt_niet_gegeneraliseerd/statnaam;
			attribute<string>    name            := AsItemName(statnaam);
		}
		
		unit<uint32>  Wijk := Gebiedsindelingen_2022/wijk_niet_gegeneraliseerd 
		{
			attribute<rdc>       geometry (poly)     := Gebiedsindelingen_2022/wijk_niet_gegeneraliseerd/geometry;
			attribute<string>    statcode            := Gebiedsindelingen_2022/wijk_niet_gegeneraliseerd/statcode;
			attribute<string>    statnaam            := Gebiedsindelingen_2022/wijk_niet_gegeneraliseerd/statnaam;
			attribute<string>    name                := AsItemName(statnaam);
		}
		
		unit<uint32>  Gemeente := Gebiedsindelingen_2022/gemeente_niet_gegeneraliseerd 
		{
			attribute<rdc>       geometry (poly) := Gebiedsindelingen_2022/gemeente_niet_gegeneraliseerd/geometry;
			attribute<string>    statcode        := Gebiedsindelingen_2022/gemeente_niet_gegeneraliseerd/statcode;
			attribute<string>    statnaam        := Gebiedsindelingen_2022/gemeente_niet_gegeneraliseerd/statnaam;
			attribute<string>    GM_NAAM         := Gebiedsindelingen_2022/gemeente_niet_gegeneraliseerd/statnaam;
			attribute<string>    name            := AsItemName(statnaam);
		}
		
		unit<uint32>  Arbeidsregio := Gebiedsindelingen_2022/arbeidsmarktregio_gegeneraliseerd
		{
			attribute<rdc>       geometry (poly) := Gebiedsindelingen_2022/arbeidsmarktregio_gegeneraliseerd/geometry;
			attribute<string>    statcode        := Gebiedsindelingen_2022/arbeidsmarktregio_gegeneraliseerd/statcode;
			attribute<string>    statnaam        := Gebiedsindelingen_2022/arbeidsmarktregio_gegeneraliseerd/statnaam;
			attribute<string>    name            := AsItemName(statnaam);
		}
		
		unit<uint32>  Corop := Gebiedsindelingen_2022/coropgebied_gegeneraliseerd
		{
			attribute<rdc>       geometry (poly) := Gebiedsindelingen_2022/coropgebied_gegeneraliseerd/geometry;
			attribute<string>    statcode        := Gebiedsindelingen_2022/coropgebied_gegeneraliseerd/statcode;
			attribute<string>    statnaam        := Gebiedsindelingen_2022/coropgebied_gegeneraliseerd/statnaam;
			attribute<string>    name            := AsItemName(statnaam);
		}
		
		unit<uint32>  Provincie := Gebiedsindelingen_2022/provincie_gegeneraliseerd
		{
			attribute<rdc>       geometry (poly) := Gebiedsindelingen_2022/provincie_gegeneraliseerd/geometry;
			attribute<string>    statcode        := Gebiedsindelingen_2022/provincie_gegeneraliseerd/statcode;
			attribute<string>    statnaam        := Gebiedsindelingen_2022/provincie_gegeneraliseerd/statnaam;
			attribute<uint32>    prvnr           := Gebiedsindelingen_2022/provincie_gegeneraliseerd/id[uint32];
			attribute<string>    prvnm           := statnaam;
		}
		
		unit<uint32> Read_PC4_areas_shape // CBS_pc4_2020_v1
		:	StorageName     = "%SourceDataDir%/CBS/pc6_tm2019_shp/CBS_pc4_2020_v1.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc>                  geometry (poly);
			attribute<int32>                PC4;
		}
		
		
		unit<uint32> Read_PC6_areas_shape
		:	StorageName     = "%SourceDataDir%/CBS/pc6_tm2019_shp/pc6_xy_tm2020_areas.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc>                  geometry (poly);
			attribute<string>               PC6;
		}
		
		unit<uint32> Make_PC4_areas_FSS := Read_PC4_areas_shape
		,	StorageName     = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/pc4_2020_areas.fss"
		{
			attribute<rdc>                  geometry (poly) := Read_PC4_areas_shape/geometry;
			attribute<string>               PC4             := string(Read_PC4_areas_shape/PC4);
			attribute<string>               label         := PC4, DialogType = "LabelText";
		}
		
		unit<uint32> Make_PC6_areas_FSS := Read_PC6_areas_shape
		,	StorageName     = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/pc6_2020_areas.fss"
		{
			attribute<rdc>                  geometry (poly) := Read_PC6_areas_shape/geometry;
			attribute<string>               PC6             := Read_PC6_areas_shape/PC6;
			attribute<string>               label         := PC6, DialogType = "LabelText";
		}
		
		unit<uint32> Make_Buurt_fss := Buurt
		, StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/buurt.fss"
		{
			attribute<geometries/rdc>       geometry  (poly) := Buurt/geometry;
			attribute<string>               BU_CODE          := Buurt/statcode;
			attribute<string>               BU_NAAM          := Buurt/statnaam;
			// attribute<string>               WK_CODE          := Buurt/WK_CODE;
			attribute<string>               GM_CODE          := Buurt/GM_CODE;
			// attribute<string>               GM_NAAM          := Buurt/GM_NAAM;
		}
		
		unit<uint32>  Make_Wijk_fss := Wijk
		, StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/wijk.fss"
		{
			attribute<rdc>       geometry (poly) := Wijk/geometry;
			attribute<string>    GM_CODE         := Wijk/GM_CODE;
			attribute<string>    WK_NAAM         := Wijk/statnaam;
			attribute<string>    WK_CODE         := Wijk/statcode;
		}
		
		unit<uint32>  Make_Gemeente_fss := Gemeente
		, StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/gemeente.fss"
		{
			attribute<rdc>       geometry (poly) := Gemeente/geometry;
			attribute<string>    GM_CODE         := Gemeente/statcode;
			attribute<string>    GM_NAAM         := Gemeente/statnaam;
		}
		
		unit<uint32>  Make_COROP_fss := COROP
		, StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/corop.fss"
		{
			attribute<rdc>       geometry (poly) := COROP/geometry;
			attribute<string>    name            := COROP/name;
		}
		
		unit<uint32>  Make_Provincie_fss := provincie
		, StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/provincie.fss"
		{
			attribute<rdc>       geometry (poly) := provincie/geometry;
			attribute<string>    prvnm           := provincie/statnaam;
			attribute<string>    PROV_CODE       := provincie/statcode;
			attribute<uint32>    prvnr           := provincie/id[uint32];
		}
		
	}
	
	
	unit<uint32> Buurt
	: 	StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/buurt.fss"
	,	StorageReadOnly = "True"
	{
		attribute<geometries/rdc>   geometry  (poly);
		attribute<string>           BU_CODE;
		attribute<string>           BU_NAAM;
		attribute<string>           GM_CODE;
		
		attribute<Wijk>             wijk_rel := point_in_polygon(centroid_or_mid(geometry), wijk/geometry);
		attribute<.>                per_grid   (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
	}
	unit<uint32> Wijk
	: 	StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/wijk.fss"
	,	StorageReadOnly = "True"
	{
		attribute<geometries/rdc>   geometry  (poly);
		attribute<string>           GM_CODE;
		attribute<string>           WK_NAAM;
		attribute<string>           WK_CODE;
		
		attribute<geometries/rdc>   centroid                   := centroid_or_mid(geometry);
		attribute<string>           label                      := WK_NAAM ;
		attribute<.>                per_grid      (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
		attribute<uint32>           aggl_rel                   := point_in_polygon(centroid, gemeente/Agglomeration_uq/Geometry);
		
		attribute<uint32>            Kerncijfers_rel := rlookup(WK_CODE, CBS_kerncijfers/gwb_code_10);
		
		attribute<int32>             P_LEEGSW        := CBS_kerncijfers/P_LEEGSW[int32][Kerncijfers_rel];
		attribute<int32>             p_koopw         := CBS_kerncijfers/p_koopw[int32][Kerncijfers_rel];
		attribute<int32>             p_huurw         := CBS_kerncijfers/p_huurw[int32][Kerncijfers_rel];
		attribute<int32>             p_wcorpw        := CBS_kerncijfers/p_wcorpw[int32][Kerncijfers_rel];
		attribute<int32>             g_ink_po        := CBS_kerncijfers/g_ink_po[int32][Kerncijfers_rel];// Gemiddeld inkomen per inkomensontvanger 
		attribute<int32>             g_woz           := CBS_kerncijfers/g_woz[int32][Kerncijfers_rel];
		
		unit<uint32> CBS_kerncijfers 
		:	StorageName     = "%SourceDataDir%/CBS/2018/kerncijfers-wijken-2018.csv"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode = "all"
		{
		}
	}
	
	
	unit<uint32> Gemeente
	: StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/gemeente.fss"
	, StorageReadOnly = "true"
	{
		attribute<geometries/rdc> geometry (poly);
		attribute<string>         GM_NAAM;
		attribute<string>         GM_CODE : DialogType = "LabelText";
		attribute<string>         label     := GM_NAAM, DialogType = "LabelText";
		attribute<string>         name                              := AsItemName(GM_NAAM); //replace(label, '/', '_', '-', '_', ' ', '_','(','',')','','â','a','ú','','''','',',','');
		attribute<.>              per_grid (NL_grid/domain)         := poly2grid(geometry, NL_grid/domain);
		attribute<bool>           IsUrbanCore                       := IsDefined(rlookup(GM_CODE, UrbanCores/GM_CODE));
		attribute<bool>           IsUrbanCore_grid (NL_grid/domain) := IsUrbanCore[per_grid];
		attribute<uq>             uq_rel                            := rlookup(GM_CODE, uq/GM_CODE);

		unit<uint32> uq := unique(GM_CODE)
		{
			attribute<string>         GM_NAAM         := last(../GM_NAAM, ../uq_rel);
			attribute<string>         GM_CODE         := values;
			attribute<string>         label     := GM_NAAM, DialogType = "LabelText";
			attribute<string>         name                              := replace(label, '/', '_', '-', '_', ' ', '_','(','',')','','â','a','ú','','''','',',','');
		}
		
		unit<uint32> UrbanCores_list := Typeringen/Redev/UrbanCores_list;
		unit<uint32> UrbanCores  := ='subset('+AsList('GM_CODE == '+quote(UrbanCores_list/GM_CODE)+' ','||')+')'
		, 	Descr = "Op basis van CBS Grootstedelijke Agglomeraties 2015"
		{    
			attribute<geometries/rdc>    geometry (poly)                      := ../geometry[nr_OrgEntity];
			attribute<geometries/rdc_mm> geometry_mm (poly)                := geometry[geometries/rdc_mm];
			attribute<string>         GM_CODE                              := ../GM_CODE[nr_OrgEntity];
			attribute<string>         label                                := ../label[nr_OrgEntity]; //, DialogType = "LabelText";
			attribute<UrbanCores_list/Region_uq>         Region_rel        := rjoin(GM_CODE, UrbanCores_list/GM_CODE, UrbanCores_list/Region_rel);
			attribute<../Agglomeration_uq>  Agglomeration_rel := rjoin(GM_CODE, UrbanCores_list/GM_CODE, UrbanCores_list/Agglomeration_rel);
			attribute<string>                            Region            := UrbanCores_list/Region_uq/values[Region_rel];
			attribute<string>                            Agglomeration     := ../Agglomeration_uq/values[Agglomeration_rel];
		}
		
		unit<uint32> Agglomeration_uq := UrbanCores_list/Agglomeration_uq
		{
			attribute<geometries/rdc_mm> Geometry_mm  (poly) := partitioned_union_polygon(UrbanCores/geometry_mm, UrbanCores/Agglomeration_rel);
			attribute<geometries/rdc>    Geometry     (poly) := geometry_mm[geometries/rdc];
			attribute<km2>               Opp                 := value(area(geometry,m2),km2);
		}
		
		unit<uint32> Amsterdam := subset(GM_CODE == 'GM0363')
		{
			attribute<geometries/rdc>    geometry (poly)                   := ../geometry[nr_OrgEntity];
			attribute<geometries/rdc_mm> geometry_mm (poly)                := geometry[geometries/rdc_mm];
			attribute<string>            GM_CODE                           := ../GM_CODE[nr_OrgEntity];
			attribute<string>            label                             := ../label[nr_OrgEntity]; //, DialogType = "LabelText";
		}
		unit<uint32> Utrecht := subset(GM_CODE == 'GM0344')
		{
			attribute<geometries/rdc>    geometry (poly)                   := ../geometry[nr_OrgEntity];
			attribute<geometries/rdc_mm> geometry_mm (poly)                := geometry[geometries/rdc_mm];
			attribute<string>            GM_CODE                           := ../GM_CODE[nr_OrgEntity];
			attribute<string>            label                             := ../label[nr_OrgEntity]; //, DialogType = "LabelText";
		}
	}
	
	
	
	unit<uint32>  COROP
	: StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/corop.fss"
	, StorageReadOnly = "true"
	{
		attribute<rdc>       geometry (poly);
		attribute<string>    name;
		attribute<String>    Label           := name;
	}
	
	unit<uint32>  Provincie
	: StorageName = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/provincie.fss"
	, StorageReadOnly = "true"
	{
		attribute<rdc>       geometry (poly);
		attribute<string>    name;
		attribute<string>    PROV_CODE;
		attribute<uint32>    prvnr;
		attribute<string>    prvnm        := name;
		attribute<string>    label        := replace(AsItemName(prvnm), 'Fryslân', 'Friesland');
	}
	
	unit<uint32> Nederland := range(uint32, 0, 1) 
	{
		attribute<rdc>               geometry       (poly) := partitioned_union_polygon(Corop/geometry[rdc_mm], const(0[.],Corop))[rdc];
		attribute<string>            name                  : [ 'Nederland' ];
		attribute<.>                 per_domain   (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
		attribute<bool>              IsNederland  (NL_grid/domain) := IsDefined(per_domain);
	}
	
	container MRA
	{
		unit<uint32> GemMRA8
		: StorageName = "%SourceDataDir%/CBS/RegioindelingMRA2016.csv"
		, StorageType = "gdal.vect"
		, StorageReadOnly = "True"
		{
			attribute<string>  gem_name  := replace(gemeente, '/', '_', '-', '_', ' ', '_');
			attribute<string>  MRA8_name := replace(regio, '/', '_', '-', '_', ' ', '_');
			attribute<MRA8>    MRA8_rel  := rjoin(MRA8_name, MRA8/name, id(MRA8));
		}
		
		unit<uint32> MRA8 := unique(GemMRA8/MRA8_name)
		{
			attribute<ipoint>    geometry0 (poly) := partitioned_union_polygon(ipolygon(gemeenten/j2015/Geometry), gemeenten/j2015/MRA8_rel);
			attribute<rdc>       geometry (poly)  := geometry0[rdc];
			attribute<string>    name             := replace(values, '/', '_', '-', '_', ' ', '_');
			attribute<string>    Label            := name, DialogType = "LabelText";
			attribute<MRA1_src>  MRA1_rel         := const(0[MRA1_src], .);
		}
		
		unit<uint32> MRA1_src: NrOfRows = 1
		,	StorageName = "%SourceDataDir%/CBS/RegioindelingMRA2016.fss"
		{
			attribute<ipoint>    geometry0 (poly) := partitioned_union_polygon(ipolygon(MRA8/geometry0), MRA8/MRA1_rel), DisableStorage = "true";
			attribute<rdc>       geometry (poly)  := geometry0[rdc];
			attribute<string>    name             : ['MRA'];
			attribute<string>    Label            := name, DialogType = "LabelText";
			attribute<.>         MRA1_rel         := const(0[.], .), DisableStorage = "true";
		}
		
		unit<uint32> MRA1
		:	StorageName = "%SourceDataDir%/CBS/RegioindelingMRA2016.fss"
		,	StorageReadOnly = "true"
		{
			attribute<rdc>       geometry (poly);
			attribute<string>    Label : DialogType = "LabelText";
		}
	
	}
	
	unit<uint32> PC6_vlakken
	:	StorageName     = "%LocalDataProjDir%/UnlinkedData/RegioIndelingen/pc6_2020_areas.fss"
	,	StorageReadOnly = "True"
	{ 
		attribute<rdc>                  geometry (poly);
		attribute<string>               PC6;
		attribute<rdc>                  centroid            := centroid_or_mid(geometry);
		attribute<.>                    PC4_rel             := point_in_polygon(centroid, PC4_vlakken/geometry);
		attribute<m2>                   area                := abs(area(geometry, m2));
		attribute<string>               label               : DialogType = "LabelText";
	}
	
	// unit<uint32> BBG_2000
	// :	StorageName     = "%SourceDataDir%/CBS/Begrenzing_Bebouwd_Gebied/bg00.shp"
	// ,	StorageReadOnly = "true"
	// ,	StorageType     = "gdal.vect"
	// {
		// attribute<geometries/rdc> geometry (poly);
	// }
	
	unit<uint32> BBG_2003 
	:	StorageName     = "%SourceDataDir%/CBS/Begrenzing_Bebouwd_Gebied/BBG_2003.fss"
	,	StorageReadOnly = "true"
	{
		attribute<geometries/rdc> geometry (poly);
	}

	// unit<uint32> Randstad
	// :	StorageName     = "%SourceDataDir%/CBS/Randstad.shp"
	// ,	StorageType     = "gdal.vect"
	// ,	StorageReadOnly = "True"
	// {
		// attribute<geometries/rdc> geometry   (poly) ;
		// attribute<.>              per_grid   (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
		// attribute<bool>           IsRandstad (NL_grid/domain) := IsDefined(per_grid);
	// }
	
	container grootstedelijke_agglomeratie
	{
		unit<uint32> j2012 
		:	StorageName     = "%SourceDataDir%/CBS/2012/CBS_grootstedelijke_agglomeratie_2012.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<geometries/rdc>   geometry  (polygon) ;
			attribute<string>           label                      := statnaam ;
			attribute<src_2012>         grid      (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
		}
	}

	// unit<uint32> NVM
	// :	StorageName     = "%SourceDataDir%/CBS/NVMregios.shp"
	// ,	StorageType     = "gdal.vect"
	// ,	StorageReadOnly = "True"
	// {
		// attribute<geometries/rdc> geometry (poly) ;
		// attribute<string>         label := NVMREG_NAA ;
		// attribute<.>              per_grid   (NL_grid/domain) := poly2grid(geometry, NL_grid/domain);
	// }
	
	
	parameter<string> JaarVanOudeGebiedsIndelingen := '2000';
	container Gebiedsindelingen_oud
	:	StorageName     = "='%SourceDataDir%/CBS/cbsgebiedsindelingen'+JaarVanOudeGebiedsIndelingen+'.gpkg'"
	, 	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	,	SyncMode        = "alltables"
	,	DialogData      = "rdc";
	
	unit<uint32>  Gemeente_oud := ='Gebiedsindelingen_oud/cbs_gemeente_'+JaarVanOudeGebiedsIndelingen+'_gegeneraliseerd'
	{
		attribute<rdc>     geometry (poly) := ='Gebiedsindelingen_oud/cbs_gemeente_'+JaarVanOudeGebiedsIndelingen+'_gegeneraliseerd/geometry';
		attribute<string>  GM_NAAM         := ='Gebiedsindelingen_oud/cbs_gemeente_'+JaarVanOudeGebiedsIndelingen+'_gegeneraliseerd/statnaam';
		attribute<string>  GM_CODE         := ='Gebiedsindelingen_oud/cbs_gemeente_'+JaarVanOudeGebiedsIndelingen+'_gegeneraliseerd/statcode';
		
		attribute<string>  label            := GM_Naam;
		attribute<string>  name            := AsItemName(GM_Naam);
		
		container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
	}
	
}
