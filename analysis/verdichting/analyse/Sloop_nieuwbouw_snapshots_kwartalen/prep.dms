container Prep
{ 
	unit<uint32> panden := ='union_unit('+AsList('Pand_domains/'+Periods/name,',')+')'
	, FreeData = "false"
	{ 
		attribute<geometries/rdc>       geometry (poly)                            := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/geometry',',')+')';
		attribute<pand_status>          status_rel                                 := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/status_rel',',')+')';
		attribute<Periods>              BAG_Period                                 := ='union_data(.,'+AsList('const('+string(id(Periods))+'[Periods], Pand_domains/'+Periods/name+')',',')+')'; 
		attribute<uint64>               bag_nr                                     := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/bag_nr',',')+')';
		attribute<bool>                 HasOverigeGebruiks                         := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/HasOverigeGebruiks',',')+')';
		attribute<bool>                 HasVBO                                     := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/HasVBO',',')+')';
		attribute<Jaar>                 Bouwjaar                                   := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/Bouwjaar_trunc',',')+')';
		attribute<WP5>                  WP5_rel                                    := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/WP5_rel',',')+')';
		attribute<uint16>               pand_hoogte                                := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/pand_hoogte',',')+')';
		
		attribute<uint32>               count_vbo_pand_woon_voorraad               := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/count_vbo_pand_woon_voorraad',',')+')';
		attribute<uint32>               count_vbo_pand_niet_woon_voorraad          := ='union_data(.,'+AsList('Pand_domains/'+Periods/name+'/count_vbo_pand_niet_woon_voorraad',',')+')';
		
		attribute<uint64>               id_period_key                              := bag_nr + periods/value_short[BAG_Period];
		attribute<uq_identificatie>     uq_rel                                     := rlookup(bag_nr, uq_identificatie/bag_nr);

		unit<uint32> uq_identificatie := =Parameters/uq_identificatie_ontkoppeld ? 'Read_uq_identificatie' : 'Make_uq_identificatie';
		// identificatie
 		unit<uint32> Make_uq_identificatie := unique(bag_nr)
		, StorageName = "='%LocalDataProjDir%/Temp/uq_identificatie_pand_'+/Parameters/BAG_Selection_Area+'.fss'"
		{ 
			attribute<geometries/rdc>       geometry (poly)                  := rjoin(bag_nr, ../bag_nr, ../geometry);
			attribute<jaar>                 Bouwjaar                         := modus(../Bouwjaar, ../uq_rel);
			attribute<uint16>               pand_hoogte                      := modus(../pand_hoogte, ../uq_rel);
			attribute<uint64>               bag_nr                           := values;
			attribute<bool>                 HasOverigeGebruiks               := any(../HasOverigeGebruiks, ../uq_rel);
			attribute<bool>                 HasVBO                           := any(../HasVBO, ../uq_rel);
			
			container Generates 
			{
				parameter<string> src_items                                := 'Ready', ExplicitSuppliers = "geometry;Bouwjaar;pand_hoogte;bag_nr;HasOverigeGebruiks;HasVBO";
				parameter<string> pand_rel_PerPeriod                       := 'Ready', ExplicitSuppliers = "=AsList('../pand_rel_PerPeriod/'+Periods/name,';')";
				parameter<string> count_vbo_woon_PerPeriod                 := 'Ready', ExplicitSuppliers = "=AsList('../count_vbo_woon_PerPeriod/'+Periods/name,';')";
				parameter<string> count_vbo_woon_voorraad_PerPeriod        := 'Ready', ExplicitSuppliers = "=AsList('../count_vbo_woon_voorraad_PerPeriod/'+Periods/name,';')";
				parameter<string> count_vbo_niet_woon_PerPeriod            := 'Ready', ExplicitSuppliers = "=AsList('../count_vbo_niet_woon_PerPeriod/'+Periods/name,';')";
				parameter<string> count_vbo_niet_woon_voorraad_PerPeriod   := 'Ready', ExplicitSuppliers = "=AsList('../count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name,';')";
				parameter<string> sum_vbo_opp_woon_PerPeriod               := 'Ready', ExplicitSuppliers = "=AsList('../sum_vbo_opp_woon_PerPeriod/'+Periods/name,';')";
				parameter<string> sum_vbo_opp_niet_woon_PerPeriod          := 'Ready', ExplicitSuppliers = "=AsList('../sum_vbo_opp_niet_woon_PerPeriod/'+Periods/name,';')";
				parameter<string> sum_vbo_opp_woon_voorraad_PerPeriod      := 'Ready', ExplicitSuppliers = "=AsList('../sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name,';')";
				parameter<string> sum_vbo_opp_niet_woon_voorraad_PerPeriod := 'Ready', ExplicitSuppliers = "=AsList('../sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name,';')";
				parameter<string> woonpand_rel_PerPeriod                   := 'Ready', ExplicitSuppliers = "=AsList('../WP5_rel_PerPeriod/'+Periods/name,';')";
				parameter<string> avg_vbo_opp_woon_voorraad_PerPeriod      := 'Ready', ExplicitSuppliers = "=AsList('../avg_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name,';')";
				
				parameter<string> generate_all := 'Ready', ExplicitSuppliers = "src_items;pand_rel_PerPeriod;count_vbo_woon_PerPeriod;count_vbo_woon_voorraad_PerPeriod;count_vbo_niet_woon_PerPeriod;count_vbo_niet_woon_voorraad_PerPeriod;sum_vbo_opp_woon_PerPeriod;sum_vbo_opp_niet_woon_PerPeriod;sum_vbo_opp_woon_voorraad_PerPeriod;sum_vbo_opp_niet_woon_voorraad_PerPeriod;woonpand_rel_PerPeriod;avg_vbo_opp_woon_voorraad_PerPeriod";
			}
			
			container pand_rel_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'rlookup(bag_nr, pand_domains/'+Periods/name+'/bag_nr)'
					, uq_identificatie
					, uint32
				);
				
			container WP5_rel_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/WP5_rel[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, WP5
				);
				
			container count_vbo_woon_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/count_vbo_pand_woon[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_woon_voorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/count_vbo_pand_woon_voorraad[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_niet_woon_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/count_vbo_pand_niet_woon[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_niet_woon_voorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/count_vbo_pand_niet_woon_voorraad[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, uint32
				);
				
			container sum_vbo_opp_woon_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/sum_vbo_opp_woon[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
			container sum_vbo_opp_woon_voorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/sum_vbo_opp_woon_voorraad[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
			container sum_vbo_opp_niet_woon_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/sum_vbo_opp_niet_woon[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
			container sum_vbo_opp_niet_woon_voorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/sum_vbo_opp_niet_woon_voorraad[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
			container avg_vbo_opp_woon_voorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'pand_domains/'+Periods/name+'/avg_vbo_opp_woon_voorraad[pand_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
		}
		
 		unit<uint32> Read_uq_identificatie
		: StorageName = "='%LocalDataProjDir%/Temp/uq_identificatie_pand_'+/Parameters/BAG_Selection_Area+'.fss'"
		, StorageReadOnly = "true"
		{ 
			attribute<geometries/rdc>       geometry (poly);
			attribute<jaar>                 Bouwjaar;
			attribute<uint64>               bag_nr;
			attribute<bool>                 HasOverigeGebruiks;
			attribute<bool>                 HasVBO;
			attribute<uint16>               pand_hoogte;
			attribute<uint16>               pand_hoogte_edit := pand_hoogte < 400[uint16] ? (0/0)[uint16] : pand_hoogte;
			attribute<m2>                   footprint  := area(geometry, m2);

			unit<uint32> overlap_panden := polygon_connectivity(geometry[geometries/rdc_mm])
			{
				attribute<geometries/rdc_mm>    geometry_mm (poly) := ../geometry[geometries/rdc_mm][F1] * ../geometry[geometries/rdc_mm][F2];
				attribute<geometries/rdc>       geometry    (poly) := geometry_mm[geometries/rdc];
				attribute<m2>                   area               := area(geometry, m2);
			}

			container WP5_rel_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, WP5
				);
				
			container IsRedevTypes_WNW := 
				for_each_nedv(
					RedevSub_Types/Sub_Types
					, 'IsDefined(rlookup(bag_nr, Identification/MakeRedevTypes/'+RedevSub_Types/Sub_Types+'/Subtype/uq_pand/sub/bag_nr))'
					, uq_identificatie
					, bool
				);
			container IsRedevTypes_Mixed := 
				for_each_nedv(
					RedevSubMixed_Types/name
					, 'IsDefined(rlookup(bag_nr, Identification/MakeRedevTypes_Mixed/'+RedevSubMixed_Types/name+'/Subtype/uq_pand/sub/bag_nr))'
					, uq_identificatie
					, bool
				);
				
			container count_vbo_woon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_niet_woon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_woon_voorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, uint32
				);
				
			container count_vbo_niet_woon_voorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, uint32
				);
				
			container sum_vbo_opp_woon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
				
			container sum_vbo_opp_niet_woon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
				
			container sum_vbo_opp_woon_voorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
				
			container sum_vbo_opp_niet_woon_voorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
			container avg_vbo_opp_woon_voorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
				
			container avg_vbo_opp_woon_voorraad_PerPeriod_edit :=
				for_each_nedv(
					Periods/name
					, 'avg_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name+' == 0[m2] ? (0/0)[m2] : avg_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name
					, uq_identificatie
					, m2
				);
				
			container Perioden
			{ 
				container RedevYear := 
					for_each_nedv(
						RedevSub_Types/Sub_Types
						, 'rjoin(bag_nr, Identification/MakeRedevTypes/'+RedevSub_Types/Sub_Types+'/Subtype/uq_pand/sub/bag_nr, Identification/MakeRedevTypes/'+RedevSub_Types/Sub_Types+'/Subtype/uq_pand/sub/RelevantJaar)'
						, uq_identificatie
						, Periods
					);
				container RedevYear_Mixed := 
					for_each_nedv(
						RedevSubMixed_Types/name
						, 'rjoin(bag_nr, Identification/MakeRedevTypes_Mixed/'+RedevSubMixed_Types/name+'/Subtype/uq_pand/sub/bag_nr, Identification/MakeRedevTypes_Mixed/'+RedevSubMixed_Types/name+'/Subtype/uq_pand/sub/RelevantJaar)'
						, uq_identificatie
						, Periods
					);
					
				attribute<Periods>  IsSloop_Woon            (uq_identificatie) := RedevYear/Sloop_Woon;
				attribute<Periods>  IsNieuwbouw_Woon        (uq_identificatie) := RedevYear/Nieuwbouw_Woon;
				attribute<Periods>  IsToevoeging_Woon       (uq_identificatie) := RedevYear/Toevoeging_Woon;
				attribute<Periods>  IsOnttrekking_Woon      (uq_identificatie) := RedevYear/Onttrekking_Woon;
				attribute<Periods>  IsTransformatie_Woon    (uq_identificatie) := RedevYear/Transformatie_Woon;
				attribute<Periods>  IsOnveranderd_Woon      (uq_identificatie) := RedevYear/Onveranderd_Woon;
				attribute<Periods>  IsSloop_NietWoon        (uq_identificatie) := RedevYear/Sloop_NietWoon;
				attribute<Periods>  IsNieuwbouw_NietWoon    (uq_identificatie) := RedevYear/Nieuwbouw_NietWoon;
				attribute<Periods>  IsToevoeging_NietWoon   (uq_identificatie) := RedevYear/Toevoeging_NietWoon;
				attribute<Periods>  IsOnttrekking_NietWoon  (uq_identificatie) := RedevYear/Onttrekking_NietWoon;
				attribute<Periods>  IsTransformatie_NietWoon(uq_identificatie) := RedevYear/Transformatie_NietWoon;
				attribute<Periods>  IsOnveranderd_NietWoon  (uq_identificatie) := RedevYear/Onveranderd_NietWoon;
				attribute<Periods>  IsSloop_Mixed           (uq_identificatie) := RedevYear_Mixed/Sloop_Mixed;
				attribute<Periods>  IsNieuwbouw_Mixed       (uq_identificatie) := RedevYear_Mixed/Nieuwbouw_Mixed;
				attribute<Periods>  IsToevoeging_Mixed      (uq_identificatie) := RedevYear_Mixed/Toevoeging_Mixed;
				attribute<Periods>  IsOnttrekking_Mixed     (uq_identificatie) := RedevYear_Mixed/Onttrekking_Mixed;
				attribute<Periods>  IsOnveranderd_Mixed     (uq_identificatie) := RedevYear_Mixed/Onveranderd_Mixed;
				attribute<Periods>  IsGemengd               (uq_identificatie) := const(last(id(Periods))[Periods],..);
				attribute<Periods>  IsDubieus               (uq_identificatie) := const(last(id(Periods))[Periods],..);
				attribute<Periods>  IsUnclassified          (uq_identificatie) := const(last(id(Periods))[Periods],..);
			}
			
			
			attribute<uint32> count_classificatie     := = '('+AsList('Is'+RedevSub_Types_wMixed/name, '[uint32] + ') + '[uint32]) == 0 && (HasOverigeGebruiks || !HasVBO)  ? 1 :  '+AsList('Is'+RedevSub_Types_wMixed/name, '[uint32] + ') + '[uint32]';
			parameter<uint32> count_errors            := sum(count_classificatie > 1 ? 1 : 0);
			parameter<uint32> count_empty             := sum(count_classificatie == 0 ? 1 : 0);
			
			attribute<bool>  IsSloop_Woon             := IsRedevTypes_WNW/Sloop_Woon;
			attribute<bool>  IsNieuwbouw_Woon         := IsRedevTypes_WNW/Nieuwbouw_Woon;
			attribute<bool>  IsToevoeging_Woon        := IsRedevTypes_WNW/Toevoeging_Woon;
			attribute<bool>  IsOnttrekking_Woon       := IsRedevTypes_WNW/Onttrekking_Woon;
			attribute<bool>  IsTransformatie_Woon     := IsRedevTypes_WNW/Transformatie_Woon;
			attribute<bool>  IsOnveranderd_Woon       := IsRedevTypes_WNW/Onveranderd_Woon;
			attribute<bool>  IsSloop_NietWoon         := IsRedevTypes_WNW/Sloop_NietWoon;
			attribute<bool>  IsNieuwbouw_NietWoon     := IsRedevTypes_WNW/Nieuwbouw_NietWoon;
			attribute<bool>  IsToevoeging_NietWoon    := IsRedevTypes_WNW/Toevoeging_NietWoon;
			attribute<bool>  IsOnttrekking_NietWoon   := IsRedevTypes_WNW/Onttrekking_NietWoon;
			attribute<bool>  IsTransformatie_NietWoon := IsRedevTypes_WNW/Transformatie_NietWoon;
			attribute<bool>  IsOnveranderd_NietWoon   := IsRedevTypes_WNW/Onveranderd_NietWoon;
			attribute<bool>  IsSloop_Mixed            := IsRedevTypes_Mixed/Sloop_Mixed;
			attribute<bool>  IsNieuwbouw_Mixed        := IsRedevTypes_Mixed/Nieuwbouw_Mixed;
			attribute<bool>  IsToevoeging_Mixed       := IsRedevTypes_Mixed/Toevoeging_Mixed;
			attribute<bool>  IsOnttrekking_Mixed      := IsRedevTypes_Mixed/Onttrekking_Mixed;
			attribute<bool>  IsOnveranderd_Mixed      := IsRedevTypes_Mixed/Onveranderd_Mixed;
			
			attribute<bool>  IsNieuwbouw              := IsNieuwbouw_Woon || IsNieuwbouw_NietWoon || IsNieuwbouw_Mixed;
			attribute<bool>  IsSloop                  := IsSloop_Woon || IsSloop_NietWoon || IsSloop_Mixed;
			attribute<bool>  IsToevoeging             := IsToevoeging_Woon || IsToevoeging_NietWoon || IsToevoeging_Mixed;
			attribute<bool>  IsOnttrekking            := IsOnttrekking_Woon || IsOnttrekking_NietWoon || IsOnttrekking_Mixed;
			attribute<bool>  IsTransformatie          := IsTransformatie_Woon || IsTransformatie_NietWoon;
			attribute<bool>  IsOnveranderd            := IsOnveranderd_Woon || IsOnveranderd_NietWoon || IsOnveranderd_Mixed;
			
			container Correctie
			{
				container Initial
				{
					attribute<bool>  IsToevoeging_Woon00        (uq_identificatie) := switch(
																		case(IsTransformatie_Woon0 || IsTransformatie_NietWoon0 || IsToevoeging_Mixed0, FALSE)
																		, case(uq_identificatie/IsToevoeging_Woon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsToevoeging_Woon
																	);
					attribute<bool>  IsToevoeging_NietWoon00    (uq_identificatie) := switch(
																		case(IsTransformatie_NietWoon0 || IsTransformatie_Woon0 || IsToevoeging_Mixed0, FALSE)
																		, case(uq_identificatie/IsToevoeging_NietWoon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsToevoeging_NietWoon
																	);
					
					attribute<bool>  IsOnttrekking_Woon00       (uq_identificatie) := switch(
																		case(IsTransformatie_NietWoon0 || IsOnttrekking_Mixed0, FALSE)
																		, case(uq_identificatie/IsOnttrekking_Woon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsOnttrekking_Woon
																	);				
					attribute<bool>  IsOnttrekking_NietWoon00   (uq_identificatie) := switch(
																		case(IsTransformatie_Woon0 || IsOnttrekking_Mixed0, FALSE)
																		, case(uq_identificatie/IsOnttrekking_NietWoon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsOnttrekking_NietWoon
																	);		
																	
					attribute<bool>   IsTransformatie_Woon0     (uq_identificatie) := switch(
																		case(uq_identificatie/IsToevoeging_Woon && uq_identificatie/IsOnttrekking_NietWoon, TRUE)
																		, case(uq_identificatie/IsTransformatie_Woon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, case(uq_identificatie/IsTransformatie_Woon && uq_identificatie/IsTransformatie_NietWoon, FALSE)
																		, uq_identificatie/IsTransformatie_Woon
																	);
					attribute<bool>   IsTransformatie_NietWoon0 (uq_identificatie) := switch(
																		case(uq_identificatie/IsOnttrekking_Woon && uq_identificatie/IsToevoeging_NietWoon, TRUE)
																		, case(uq_identificatie/IsTransformatie_NietWoon && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, case(uq_identificatie/IsTransformatie_Woon && uq_identificatie/IsTransformatie_NietWoon, FALSE)
																		, uq_identificatie/IsTransformatie_NietWoon
																	);
																	
					attribute<bool>   IsToevoeging_Mixed0       (uq_identificatie) := switch(
																		case(IsTransformatie_Woon0 || IsTransformatie_NietWoon0, FALSE)
																		, case(uq_identificatie/IsToevoeging_Mixed && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsToevoeging_Mixed
																	);
					attribute<bool>   IsOnttrekking_Mixed0      (uq_identificatie) := switch(
																		case(IsTransformatie_Woon0 || IsTransformatie_NietWoon0, FALSE)
																		, case(uq_identificatie/IsOnttrekking_Mixed && (uq_identificatie/IsNieuwbouw || uq_identificatie/IsSloop), FALSE)
																		, uq_identificatie/IsOnttrekking_Mixed
																	);
																	
					attribute<bool>   IsDubieus0                (uq_identificatie) := switch(
																		case(uq_identificatie/IsSloop && uq_identificatie/IsNieuwbouw, TRUE)
																		,case(IsToevoeging_Woon00 && IsOnttrekking_Woon00, TRUE)
																		,case(IsToevoeging_NietWoon00 && IsOnttrekking_NietWoon00, TRUE)
																		, FALSE
																	);
																	
					attribute<bool>   IsOnttrekking_Woon0       (uq_identificatie) := IsOnttrekking_Woon00 && !IsDubieus0;
					attribute<bool>   IsOnttrekking_NietWoon0   (uq_identificatie) := IsOnttrekking_NietWoon00 && !IsDubieus0;
					attribute<bool>   IsToevoeging_Woon0        (uq_identificatie) := IsToevoeging_Woon00 && !IsDubieus0;
					attribute<bool>   IsToevoeging_NietWoon0    (uq_identificatie) := IsToevoeging_NietWoon00 && !IsDubieus0;
					
					attribute<bool>   IsSloop_Woon0             (uq_identificatie) := uq_identificatie/IsSloop_Woon && !IsDubieus0;
					attribute<bool>   IsSloop_NietWoon0         (uq_identificatie) := uq_identificatie/IsSloop_NietWoon && !IsDubieus0;
					attribute<bool>   IsSloop_Mixed0            (uq_identificatie) := uq_identificatie/IsSloop_Mixed && !IsDubieus0;
					attribute<bool>   IsNieuwbouw_Woon0         (uq_identificatie) := uq_identificatie/IsNieuwbouw_Woon && !IsDubieus0;
					attribute<bool>   IsNieuwbouw_NietWoon0     (uq_identificatie) := uq_identificatie/IsNieuwbouw_NietWoon && !IsDubieus0;
					attribute<bool>   IsNieuwbouw_Mixed0        (uq_identificatie) := uq_identificatie/IsNieuwbouw_Mixed && !IsDubieus0;
					
					attribute<bool>   IsOnveranderd_Woon0       (uq_identificatie) := uq_identificatie/IsOnveranderd_Woon;
					attribute<bool>   IsOnveranderd_NietWoon0   (uq_identificatie) := uq_identificatie/IsOnveranderd_NietWoon;
					attribute<bool>   IsOnveranderd_Mixed0      (uq_identificatie) := uq_identificatie/IsOnveranderd_Mixed;
					
					attribute<uint32> count_classificatie00     (uq_identificatie) := = AsList('Is'+RedevSub_Types_wMixed/name, '0[uint32] + ') + '0[uint32] + IsDubieus0[uint32]';
																	
					attribute<bool>   IsPandzonderVBO          (uq_identificatie) := !(uq_identificatie/HasVBO);
					attribute<bool>   IsPandmetoveriggebrVBO    (uq_identificatie) := uq_identificatie/HasOverigeGebruiks;
					attribute<bool>   GeenClassEnGeenVBO        (uq_identificatie) := count_classificatie00 == 0 && IsPandzonderVBO;
					attribute<bool>   GeenClassEnOvGebr         (uq_identificatie) := count_classificatie00 == 0 && IsPandmetoveriggebrVBO;
					
					attribute<uint32> count_classificatie0      (uq_identificatie) := GeenClassEnGeenVBO || GeenClassEnOvGebr ? 1 : count_classificatie00;
					attribute<bool>   IsGemengd0                (uq_identificatie) := count_classificatie0 > 1 && !IsDubieus0;
					// attribute<uint32> count_classificatie1      (uq_identificatie) := count_classificatie0 + IsGemengd0[uint32];
					
					// attribute<
					
					attribute<string> DubbelIdentificationTypesString (uq_identificatie) := =AsList('IdentifiedType_str/'+RedevSub_Types_wMixed/name, '+ '';'' +');
					
					container IdentifiedType_str := 
						for_each_nedv(
							RedevSub_Types_wMixed_wExtra/name
							, '../Is'+RedevSub_Types_wMixed_wExtra/name+'0 ? '+quote(RedevSub_Types_wMixed_wExtra/name)+' : '''''
							, uq_identificatie
							, string
						);
				}
				
				attribute<uint32> count_classificatie      (uq_identificatie) := = AsList('Is'+RedevSub_Types_wMixed/name, '[uint32] + ') + '[uint32] + IsDubieus[uint32] + IsGemengd[uint32]';
				parameter<uint32> count_errors                  := sum(count_classificatie > 1 ? 1 : 0);
				parameter<uint32> count_empty                   := sum(count_classificatie == 0 ? 1 : 0);
			
				attribute<bool>   IsSloop_Woon             (uq_identificatie) := Initial/IsSloop_Woon0 && !Initial/IsGemengd0;
				attribute<bool>   IsSloop_NietWoon         (uq_identificatie) := Initial/IsSloop_NietWoon0 && !Initial/IsGemengd0;
				attribute<bool>   IsSloop_Mixed            (uq_identificatie) := Initial/IsSloop_Mixed0 && !Initial/IsGemengd0;
				
				attribute<bool>   IsNieuwbouw_Woon         (uq_identificatie) := Initial/IsNieuwbouw_Woon0 && !Initial/IsGemengd0;
				attribute<bool>   IsNieuwbouw_NietWoon     (uq_identificatie) := Initial/IsNieuwbouw_NietWoon0 && !Initial/IsGemengd0;
				attribute<bool>   IsNieuwbouw_Mixed        (uq_identificatie) := Initial/IsNieuwbouw_Mixed0 && !Initial/IsGemengd0;
				
				attribute<bool>   IsOnttrekking_Woon       (uq_identificatie) := Initial/IsOnttrekking_Woon0 && !Initial/IsGemengd0;
				attribute<bool>   IsOnttrekking_NietWoon   (uq_identificatie) := Initial/IsOnttrekking_NietWoon0 && !Initial/IsGemengd0;
				attribute<bool>   IsOnttrekking_Mixed      (uq_identificatie) := Initial/IsOnttrekking_Mixed0 && !Initial/IsGemengd0;

				attribute<bool>   IsToevoeging_Woon        (uq_identificatie) := Initial/IsToevoeging_Woon0  && !Initial/IsGemengd0;
				attribute<bool>   IsToevoeging_NietWoon    (uq_identificatie) := Initial/IsToevoeging_NietWoon0 && !Initial/IsGemengd0;
				attribute<bool>   IsToevoeging_Mixed       (uq_identificatie) := Initial/IsToevoeging_Mixed0 && !Initial/IsGemengd0;
				
				attribute<bool>   IsTransformatie_Woon     (uq_identificatie) := Initial/IsTransformatie_Woon0 && !Initial/IsGemengd0;
				attribute<bool>   IsTransformatie_NietWoon (uq_identificatie) := Initial/IsTransformatie_NietWoon0 && !Initial/IsGemengd0;
				
				attribute<bool>   IsOnveranderd_Woon       (uq_identificatie) := =AsList('Is'+RedevSub_Types_wMixed_zOnv/name, ' || ')+ ' || IsGemengd || IsDubieus ? FALSE : Initial/IsOnveranderd_Woon0';
				attribute<bool>   IsOnveranderd_NietWoon   (uq_identificatie) := =AsList('Is'+RedevSub_Types_wMixed_zOnv/name, ' || ')+ ' || IsGemengd || IsDubieus ? FALSE : Initial/IsOnveranderd_NietWoon0';
				attribute<bool>   IsOnveranderd_Mixed      (uq_identificatie) := =AsList('Is'+RedevSub_Types_wMixed_zOnv/name, ' || ')+ ' || IsGemengd || IsDubieus ? FALSE : Initial/IsOnveranderd_Mixed0';
				
				attribute<bool>   IsGemengd                (uq_identificatie) := Initial/IsGemengd0;
				attribute<bool>   IsDubieus                (uq_identificatie) := Initial/IsDubieus0;
				
				//gevormd/bouw in laatste periode, is nog geen voorraad, dus unclassified
				attribute<bool>   IsUnclassified           (uq_identificatie) := count_classificatie == 0;
				attribute<bool>   IsPandzonderVBO          (uq_identificatie) := Initial/IsPandzonderVBO;
				attribute<bool>   IsPandmetoveriggebrVBO   (uq_identificatie) := Initial/IsPandmetoveriggebrVBO;
				
				attribute<string> DubbelIdentificationTypesString (uq_identificatie) := =AsList('IdentifiedType_str/'+RedevSub_Types_wMixed_wExtra/name, '+ '';'' +');
				
				container IdentifiedType_str := 
					for_each_nedv(
						RedevSub_Types_wMixed_wExtra/name
						, RedevSub_Types_wMixed_wExtra/name != 'Gemengd' 
							?  '../Is'+RedevSub_Types_wMixed_wExtra/name+' 
								? '+quote(RedevSub_Types_wMixed_wExtra/name)+' 
								: '''''
							: 'Initial/DubbelIdentificationTypesString'
						, uq_identificatie
						, string
					);
					
				container WoningTotalenCheck 
				{
					unit<uint32> BAG_woon_domain_start := /Brondata/BAG/Snapshots/VBOs/Y201201/vbo/GebruiksdoelSets/Woon/GebruiksdoelSet/Voorraad;
					unit<uint32> BAG_woon_domain_eind  := /Brondata/BAG/Snapshots/VBOs/Y202107/vbo/GebruiksdoelSets/Woon/GebruiksdoelSet/Voorraad;
					
					container PerRedevType :=
						for_each_ne(
							RedevSub_Types_wMixed_wExtra/name
							, 'PerRedevType_T('+quote(RedevSub_Types_wMixed_wExtra/name)+','+quote(RedevSub_Types_wMixed_wExtra/MainTypes)+')'
						);
					
					Template PerRedevType_T
					{ 
						parameter<string> RedevType;
						parameter<string> MainType;
						
						attribute<uint32> pand_index  (panden/uq_identificatie) :=  id(panden/uq_identificatie);
						attribute<bool>   pand_selectie (panden/uq_identificatie) :=  ='uq_identificatie/Correctie/Is'+RedevType;
						//identificatie
						unit<uint32> Panden_sub := select_with_org_rel(pand_selectie)
						{
							attribute<geometries/rdc>                      geometry (poly)                        := panden/uq_identificatie/geometry[org_rel];
							attribute<geometries/rdc_mm>                   geometry_mm (poly)                     := geometry[geometries/rdc_mm];
							attribute<geometries/rdc>                      centroid                               := centroid_or_mid(geometry);
							attribute<uint64>                              bag_nr                                 := panden/uq_identificatie/bag_nr[org_rel];
							attribute<Periods>                             RelevantJaar_src                       := ='panden/uq_identificatie/Perioden/Is'+RedevType+'[org_rel]';
							attribute<Periods>                             RelevantJaar                           := MainType == 'Transformatie' && !IsDefined(RelevantJaar_src)
																														? org_rel -> Perioden/IsToevoeging_Woon
																														: RelevantJaar_src;
							attribute<periods_uint8>                       RelevantJaar_uint8                     := RelevantJaar[periods_uint8];
							attribute<uint16>                              pand_hoogte                            := panden/uq_identificatie/pand_hoogte_edit[org_rel];
							
							parameter<bool>                                GebruikVoorraad                        := MainType == 'Sloop' || MainType == 'Onttrekking' ? FALSE : TRUE;
							attribute<uint32>                              sum_woningen                           := pcount(vbos_sub/panden_sub_rel);
							parameter<uint32>                              sum_woningen_totaal                    := =GebruikVoorraad ? 'sum(N_count_vbo_woon)' : 'sum(O_count_vbo_woon)';
							attribute<uint32>                              count_ingetrokkenwoningen              := sum(vbos_sub/IsIngetrokken ? 1 : 0, vbos_sub/panden_sub_rel);
							
							attribute<uint32>                              O_count_vbo_woon_ingetrokken           := sum(vbos_sub/final_functie_rel == vbo_gebruiksdoel/v/woon && vbos_sub/IsIngetrokken  ? 1 : 0, vbos_sub/panden_sub_rel);
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<uint32>                              O_count_vbo_woon                       := =MainType ==  'Nieuwbouw' || MainType ==  'Toevoeging' || MainType == 'Transformatie'
																														? 'MakeDefined(merge(RelevantJaar_uint8 - 1b, uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+'), 0)'
																														: 'MakeDefined(merge(RelevantJaar_uint8     , uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+'), 0)';
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<uint32>                              O_count_vbo_niet_woon                  := =MainType ==  'Nieuwbouw' || MainType ==  'Toevoeging' || MainType == 'Transformatie'
																														? 'MakeDefined(merge(RelevantJaar_uint8 - 1b, uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+'), 0)'
																														: 'MakeDefined(merge(RelevantJaar_uint8     , uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+'), 0)';
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<uint32>                              N_count_vbo_woon_src                   := = MainType ==  'Onveranderd' 
																														? 'merge(RelevantJaar_uint8     , uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+')'
																														: !IsDefined('merge(RelevantJaar_uint8 + 1b, uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+')') ? 'merge(RelevantJaar_uint8, uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+')' : 'merge(RelevantJaar_uint8 + 1b, uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<uint32>                              N_count_vbo_woon_alt                   := ='merge(RelevantJaar_uint8, uint32, '+AsItemList('org_rel -> count_vbo_woon_voorraad_PerPeriod/'+Periods/name+'')+')';
							attribute<uint32>                              N_count_vbo_woon                       :=  IsDefined(N_count_vbo_woon_src) ? N_count_vbo_woon_src : N_count_vbo_woon_alt;
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<uint32>                              N_count_vbo_niet_woon_src              := = MainType ==  'Onveranderd' 
																														? 'merge(RelevantJaar_uint8     , uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+')'
																														: !IsDefined('merge(RelevantJaar_uint8 + 1b, uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+')') ? 'merge(RelevantJaar_uint8, uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+')' : 'merge(RelevantJaar_uint8 + 1b, uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<uint32>                              N_count_vbo_niet_woon_alt              := ='merge(RelevantJaar_uint8, uint32, '+AsItemList('org_rel -> count_vbo_niet_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<uint32>                              N_count_vbo_niet_woon                  :=  IsDefined(N_count_vbo_niet_woon_src) ? N_count_vbo_niet_woon_src : N_count_vbo_niet_woon_alt;
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<m2>                                  O_vbo_opp_woon                         := =MainType ==  'Nieuwbouw'  || MainType ==  'Toevoeging' || MainType == 'Transformatie'
																														? 'MakeDefined(merge(RelevantJaar_uint8 - 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+'), 0[m2])'
																														: 'MakeDefined(merge(RelevantJaar_uint8     , m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+'), 0[m2])';
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<m2>                                  O_vbo_opp_niet_woon                    := =MainType ==  'Nieuwbouw'  || MainType ==  'Toevoeging' || MainType == 'Transformatie'
																														? 'MakeDefined(merge(RelevantJaar_uint8 - 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+'), 0[m2])'
																														: 'MakeDefined(merge(RelevantJaar_uint8     , m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+'), 0[m2])';
							
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<m2>                                  N_vbo_opp_woon_src                     := = MainType ==  'Onveranderd' 
																														? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+')'
																														: !IsDefined('merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+')') ? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+')' : 'merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<m2>                                  N_vbo_opp_woon_alt                     := ='merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<m2>                                  N_vbo_opp_woon                         :=  IsDefined(N_vbo_opp_woon_src) ? N_vbo_opp_woon_src : N_vbo_opp_woon_alt;
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<m2>                                  N_avg_vbo_opp_woon_src                     := = MainType ==  'Onveranderd' 
																														? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> avg_vbo_opp_woon_voorraad_PerPeriod_edit/'+Periods/name)+')'
																														: !IsDefined('merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> avg_vbo_opp_woon_voorraad_PerPeriod_edit/'+Periods/name)+')') ? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> avg_vbo_opp_woon_voorraad_PerPeriod_edit/'+Periods/name)+')' : 'merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> avg_vbo_opp_woon_voorraad_PerPeriod_edit/'+Periods/name)+')';
							attribute<m2>                                  N_avg_vbo_opp_woon_alt                     := ='merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> avg_vbo_opp_woon_voorraad_PerPeriod_edit/'+Periods/name)+')';
							attribute<m2>                                  N_avg_vbo_opp_woon                         :=  IsDefined(N_avg_vbo_opp_woon_src) ? N_avg_vbo_opp_woon_src : N_avg_vbo_opp_woon_alt;
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							
							
							attribute<m2>                                  N_avg_vbo_opp_vrijstaand                   := WP5_rel == WP5/v/vrijstaand ? N_avg_vbo_opp_woon : (0/0)[m2];
							attribute<m2>                                  N_avg_vbo_opp_twee_onder_1_kap             := WP5_rel == WP5/v/twee_onder_1_kap ? N_avg_vbo_opp_woon : (0/0)[m2];
							attribute<m2>                                  N_avg_vbo_opp_rijtjeswoning                := WP5_rel == WP5/v/rijtjeswoning ? N_avg_vbo_opp_woon : (0/0)[m2];
							attribute<m2>                                  N_avg_vbo_opp_appartement                  := WP5_rel == WP5/v/appartement ? N_avg_vbo_opp_woon : (0/0)[m2];
							
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<m2>                                  N_vbo_opp_niet_woon_src                := = MainType ==  'Onveranderd' 
																														? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+')'
																														: !IsDefined('merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+')') ? 'merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+')' : 'merge(RelevantJaar_uint8 + 1b, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<m2>                                  N_vbo_opp_niet_woon_alt                := ='merge(RelevantJaar_uint8, m2, '+AsItemList('org_rel -> sum_vbo_opp_niet_woon_voorraad_PerPeriod/'+Periods/name)+')';
							attribute<m2>                                  N_vbo_opp_niet_woon                    :=  IsDefined(N_vbo_opp_niet_woon_src) ? N_vbo_opp_niet_woon_src : N_vbo_opp_niet_woon_alt;
							// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							attribute<Jaar>                                bouwjaar_src                           := org_rel -> bouwjaar;
							attribute<Jaar>                                bouwjaar                               := !IsDefined(bouwjaar_src) ? (0/0)[jaar] : bouwjaar_src;
							
							attribute<WP5>                                 WP5_rel                                := ='merge(RelevantJaar_uint8, WP5, '+AsItemList('org_rel -> WP5_rel_PerPeriod/'+Periods/name)+')';
							
							attribute<Jaar>                                O_mod_bouwjaar                         := bouwjaar;
							attribute<Jaar>                                O_mod_sloopjaar                        := Periods/year[RelevantJaar[Periods]];
							attribute<m2>                                  buildingfootprint                      := area(geometry, m2);
							
							attribute<RegioUnit_Aggl>                      Aggl_rel                               := point_in_polygon(centroid, RegioUnit_Aggl/geometry);
							attribute<bool>                                IsBeschermdStadsgezicht                := IsDefined(point_in_polygon(centroid, Brondata/overig/StadsDorpsGezichten/geometry));
							// attribute<RegioUnit_wijk18>                    Wijk_rel                             := point_in_polygon(centroid, RegioUnit_wijk18/Geometry);
							// attribute<int32>                               Wijk_P_woningcorporatie                := RegioUnit_wijk18/p_wcorpw[Wijk18_rel];
							
							attribute<uint32>                              O_count_vbo_pand_vrijstaand            := WP5_rel == WP5/v/vrijstaand ? O_count_vbo_woon : 0;
							attribute<uint32>                              O_count_vbo_pand_twee_onder_1_kap      := WP5_rel == WP5/v/twee_onder_1_kap ? O_count_vbo_woon : 0;
							attribute<uint32>                              O_count_vbo_pand_rijtjeswoning         := WP5_rel == WP5/v/rijtjeswoning ? O_count_vbo_woon : 0;
							attribute<uint32>                              O_count_vbo_pand_appartement           := WP5_rel == WP5/v/appartement ? O_count_vbo_woon : 0;
							
							attribute<uint32>                              N_count_vbo_pand_vrijstaand            := WP5_rel == WP5/v/vrijstaand ? N_count_vbo_woon : 0;
							attribute<uint32>                              N_count_vbo_pand_twee_onder_1_kap      := WP5_rel == WP5/v/twee_onder_1_kap ? N_count_vbo_woon : 0;
							attribute<uint32>                              N_count_vbo_pand_rijtjeswoning         := WP5_rel == WP5/v/rijtjeswoning ? N_count_vbo_woon : 0;
							attribute<uint32>                              N_count_vbo_pand_appartement           := WP5_rel == WP5/v/appartement ? N_count_vbo_woon : 0;
							
							attribute<perceel>                             perceel_rel                            := point_in_polygon(centroid, perceel/geometry_rd);
							
							unit<uint32> overlay_metPercelen               := bg_overlay_polygon(perceel/geometry, geometry); //intersect nieuwbouw_perceel_metSloop met gesloopte panden
							
							attribute<bool>                                IsPerceel_inthisDomain (perceel)       := IsDefined(rlookup(id(perceel),perceel_rel));
							
							unit<uint32> gerelateerd_perceel := subset(IsPerceel_inthisDomain)
							{
								attribute<geometries/rdc>       geometry (poly)                 := perceel/geometry_rd[nr_OrgEntity];
							}
							
							
						}
						unit<uint32> vbos_sub := select_with_org_rel(pand_selectie[vbos/uq_identificatie/pand_rel])
						{
							attribute<geometries/rdc>          geometry            := org_rel -> geometry;
							attribute<Panden/uq_identificatie> pand_rel            := org_rel -> pand_rel;
							attribute<Panden_sub>              panden_sub_rel      := invert(Panden_sub/org_rel)[pand_rel];
							attribute<VBOs/uq_identificatie>   vbo_rel             := org_rel;
							
							attribute<vbo_status>              final_status_rel    := ='merge(Panden_sub/RelevantJaar_uint8[panden_sub_rel], vbo_status, '+AsItemList('VBOs/uq_identificatie/VBO_Status_PerPeriod/'+Periods/name+'[vbo_rel]')+')';
							attribute<vbo_gebruiksdoel>        final_functie_rel   := ='merge(Panden_sub/RelevantJaar_uint8[panden_sub_rel], vbo_gebruiksdoel, '+AsItemList('VBOs/uq_identificatie/Gebruiksdoel_PerPeriod/'+Periods/name+'[vbo_rel]')+')';
							attribute<bool>                    IsVoorraad          := vbo_status/IsVoorraad[final_status_rel];
							attribute<bool>                    IsIngetrokken       := vbo_status/IsIngetrokken[final_status_rel];
							
							attribute<m2>                      oppervlakte         := ='merge(Panden_sub/RelevantJaar_uint8[panden_sub_rel], m2, '+AsItemList('VBOs/uq_identificatie/VBO_Opp_PerPeriod/'+Periods/name+'[vbo_rel]')+')';
						}
					}
					
					unit<uint8> Result := RedevSub_Types_wMixed_wExtra
					{
						attribute<string> name := RedevSub_Types_wMixed_wExtra/name;
						attribute<uint32> woningen := ='union_data(., '+AsItemList('PerRedevType/'+RedevSub_Types_wMixed_wExtra/name+'/Panden_sub/sum_woningen_totaal')+')';
						
						parameter<uint32> gemengd_onttrokken := sum(PerRedevType/Gemengd/Panden_sub/count_ingetrokkenwoningen);
						parameter<uint32> gemengd_toegevoegd := sum(PerRedevType/Gemengd/Panden_sub/O_count_vbo_woon);
					}
				}
			} 
		}
	}
	
	unit<uint32> vbos := ='union_unit('+AsList('Vbo_domains/'+Periods/name,',')+')'
	{ 
		attribute<geometries/rdc>       geometry                                   := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/geometry',',')+')';
		attribute<vbo_status>           status_rel                                 := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/status_rel',',')+')';
		attribute<jaar>                 BAG_jaar                                   := ='union_data(.,'+AsList('const('+string(Periods/year)+'[jaar], Vbo_domains/'+Periods/name+')',',')+')'; 
		attribute<uint64>               bag_nr                                     := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/bag_nr',',')+')';
		attribute<uq_identificatie>     uq_rel                                     := rlookup(bag_nr, uq_identificatie/bag_nr);
		attribute<uint64>               pand_id_nr                                 := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/pand_id_nr',',')+')';
		attribute<pand_status>          pand_status_rel                            := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/pand_status_rel',',')+')';
		attribute<vbo_gebruiksdoel_ext> gebruiksdoel                               := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/gebruiksdoel_class',',')+')';
		attribute<m2>                   oppervlakte                                := ='union_data(.,'+AsList('Vbo_domains/'+Periods/name+'/oppervlakte_trunc',',')+')[m2]';
	
		unit<uint32> uq_identificatie := =Parameters/uq_identificatie_ontkoppeld ? 'Read_uq_identificatie' : 'Make_uq_identificatie';
		//identificatie
 		unit<uint32> Make_uq_identificatie := unique(bag_nr)
		, StorageName = "='%LocalDataProjDir%/Temp/uq_identificatie_vbo_'+/Parameters/BAG_Selection_Area+'.fss'"
		{ 
			attribute<geometries/rdc>       geometry                         := rjoin(bag_nr, ../bag_nr, ../geometry);
			attribute<uint64>               bag_nr                           := values;
			attribute<vbo_status>           vbo_status_first                 := first(../status_rel, ../uq_rel);
			attribute<vbo_status>           vbo_status_last                  := last(../status_rel, ../uq_rel);
			attribute<pand_status>          pand_status_first                := first(../pand_status_rel, ../uq_rel);
			attribute<pand_status>          pand_status_last                 := last(../pand_status_rel, ../uq_rel);
			attribute<uint64>               pand_id_nr_first                 := first(../pand_id_nr, ../uq_rel);
			attribute<uint64>               pand_id_nr_last                  := last(../pand_id_nr, ../uq_rel);
			attribute<uint64>               pand_id_nr                       := MakeDefined(pand_id_nr_first, pand_id_nr_last);
			
			container Generates 
			{
				parameter<string> src_items                      := 'Ready', ExplicitSuppliers = "geometry;pand_id_nr;bag_nr;vbo_status_first;vbo_status_last;pand_status_first;pand_status_last";
				parameter<string> vbo_rel_PerPeriod              := 'Ready', ExplicitSuppliers = "=AsList('../vbo_rel_PerPeriod/'+Periods/name,';')";
				parameter<string> woz_PerPeriod                  := 'Ready', ExplicitSuppliers = "=AsList('../woz_PerPeriod/'+Periods/name,';')";
				parameter<string> Gebruiksdoel_PerPeriod         := 'Ready', ExplicitSuppliers = "=AsList('../Gebruiksdoel_PerPeriod/'+Periods/name,';')";
				parameter<string> IsWoon_PerPeriod               := 'Ready', ExplicitSuppliers = "=AsList('../IsWoon_PerPeriod/'+Periods/name,';')";
				parameter<string> IsNietWoon_PerPeriod           := 'Ready', ExplicitSuppliers = "=AsList('../IsNietWoon_PerPeriod/'+Periods/name,';')";
				parameter<string> VBO_Status_perPeriod           := 'Ready', ExplicitSuppliers = "=AsList('../VBO_Status_perPeriod/'+Periods/name,';')";
				parameter<string> VBO_Opp_perPeriod              := 'Ready', ExplicitSuppliers = "=AsList('../VBO_Opp_perPeriod/'+Periods/name,';')";
				parameter<string> Pand_Status_perPeriod          := 'Ready', ExplicitSuppliers = "=AsList('../Pand_Status_perPeriod/'+Periods/name,';')+';../Pand_Status_perPeriod/PandHasSloopStatussen'";
				parameter<string> IsVBOVoorraad_PerPeriod        := 'Ready', ExplicitSuppliers = "=AsList('../IsVBOVoorraad_PerPeriod/'+Periods/name,';')+';../IsVBOVoorraad_PerPeriod/IsNietVBOVoorraad_Period'";
				parameter<string> IsPandVoorraad_PerPeriod       := 'Ready', ExplicitSuppliers = "=AsList('../IsPandVoorraad_PerPeriod/'+Periods/name,';')+';../IsPandVoorraad_PerPeriod/IsNietPandVoorraad_Period'";
				parameter<string> GevormdMetBouwstatus_PerPeriod := 'Ready', ExplicitSuppliers = "=AsList('../GevormdMetBouwstatus_PerPeriod/'+Periods/name,';')+';../GevormdMetBouwstatus_PerPeriod/TrueInPeriod'";
				
				parameter<string> generate_all := 'Ready', ExplicitSuppliers = "src_items;vbo_rel_PerPeriod;woz_PerPeriod;Gebruiksdoel_PerPeriod;IsWoon_PerPeriod;IsNietWoon_PerPeriod;VBO_Status_perPeriod;VBO_Opp_perPeriod;Pand_Status_perPeriod;IsVBOVoorraad_PerPeriod;IsPandVoorraad_PerPeriod;GevormdMetBouwstatus_PerPeriod";
			}
			
			container vbo_rel_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'rlookup(bag_nr, Vbo_domains/'+Periods/name+'/bag_nr)'
					, uq_identificatie
					, uint32
				);
				
			container woz_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'Vbo_domains/'+Periods/name+'/woz[vbo_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, float32
				);
			
			container Gebruiksdoel_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'Vbo_domains/'+Periods/name+'/gebruiksdoel_class[vbo_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, vbo_gebruiksdoel_ext
				);
			
			container IsWoon_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'Gebruiksdoel_PerPeriod/'+Periods/name+' == vbo_gebruiksdoel_ext/v/woon'
					, uq_identificatie
					, bool
				);
				
			container IsNietWoon_PerPeriod := // en niet overige gebruiksfunctie
				for_each_nedv(
					Periods/name
					, 'Gebruiksdoel_PerPeriod/'+Periods/name+' != vbo_gebruiksdoel_ext/v/woon && Gebruiksdoel_PerPeriod/'+Periods/name+' != vbo_gebruiksdoel_ext/v/overige_gebruiks'
					, uq_identificatie
					, bool
				);

			container VBO_Status_perPeriod :=
				for_each_nedv(
					Periods/name
					, 'Vbo_domains/'+Periods/name+'/status_rel[vbo_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, vbo_status
				)
			{
				attribute<string> StatusDevelopmentStr     (uq_identificatie) := =AsList('MakeDefined(vbo_status/name['+string(Periods/name)+'[vbo_status]],'''')', '+ '';'' +');
				attribute<string> StatusDevelopmentShrtStr (uq_identificatie) := =AsList('MakeDefined(vbo_status/name_short['+string(Periods/name)+'[vbo_status]],'''')', '+ '';'' +');
			}
			
			container VBO_Opp_perPeriod :=
				for_each_nedv(
					Periods/name
					, 'Vbo_domains/'+Periods/name+'/oppervlakte_trunc[m2][vbo_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, m2
				);
			
			container Pand_Status_perPeriod :=
				for_each_nedv(
					Periods/name
					, 'Vbo_domains/'+Periods/name+'/pand_status_rel[vbo_rel_PerPeriod/'+Periods/name+']'
					, uq_identificatie
					, pand_status
				)
			{
				attribute<bool> PandHasSloopStatussen (uq_identificatie) := =AsList(Periods/name+' == pand_status/v/sloopvergunning_verleend', ' || ')+ ' || ' +AsList(Periods/name+' == pand_status/v/pand_gesloopt', ' || ');
			}
				
			container IsVBOVoorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'VBO_Status_PerPeriod/'+Periods/name+' == vbo_status/v/verblijfsobject_in_gebruik || VBO_Status_PerPeriod/'+Periods/name+' == vbo_status/v/verblijfsobject_in_gebruik_niet_ingemeten || VBO_Status_PerPeriod/'+Periods/name+' == vbo_status/v/verblijfsobject_buiten_gebruik || VBO_Status_PerPeriod/'+Periods/name+' == vbo_status/v/Verbouwing_verblijfsobject'
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 IsNietVBOVoorraad_Period  (uq_identificatie)             := =AsList('!./'+Periods/name, '&&');
			}
			
			container IsPandVoorraad_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/pand_in_gebruik || Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/pand_in_gebruik_niet_ingemeten || Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/pand_buiten_gebruik || Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/verbouwing_pand'
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 IsNietPandVoorraad_Period  (uq_identificatie)             := =AsList('!./'+Periods/name, '&&');
			}
			
			
			container GevormdMetBouwstatus_PerPeriod :=
				for_each_nedv(
					Periods/name
					, 'VBO_Status_PerPeriod/'+Periods/name+' == vbo_status/v/verblijfsobject_gevormd && (Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/bouwvergunning_verleend || Pand_Status_PerPeriod/'+Periods/name+' == pand_status/v/bouw_gestart)'
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 TrueInPeriod   (uq_identificatie) :=  =AsList('./'+Periods/name, '||');
			}
		}
		
 		unit<uint32> Read_uq_identificatie
		: StorageName = "='%LocalDataProjDir%/Temp/uq_identificatie_vbo_'+/Parameters/BAG_Selection_Area+'.fss'"
		, StorageReadOnly = "true"
		{ 
			attribute<geometries/rdc>       geometry;
			attribute<uint64>               bag_nr;
			attribute<vbo_status>           vbo_status_first;
			attribute<vbo_status>           vbo_status_last;
			attribute<pand_status>          pand_status_first;
			attribute<pand_status>          pand_status_last;
			attribute<uint64>               pand_id_nr;
			
			attribute<Panden/uq_identificatie> pand_rel                        := rlookup(pand_id_nr, Panden/uq_identificatie/bag_nr);
			attribute<uint16>                  pand_hoogte                     := Panden/uq_identificatie/pand_hoogte_edit[pand_rel];
			attribute<jaar>                    pand_bouwjaar                   := Panden/uq_identificatie/bouwjaar[pand_rel];
			attribute<m2>                      pand_footprint                  := Panden/uq_identificatie/footprint[pand_rel];
			// attribute<uint32>                  n_count_vbo_woon_voorraad_in_pand      := ='Panden/uq_identificatie/count_vbo_woon_voorraad_PerPeriod/'+last(Periods/name)+'[pand_rel]';
			// attribute<uint32>                  n_count_vbo_niet_woon_voorraad_in_pand := ='Panden/uq_identificatie/count_vbo_niet_woon_voorraad_PerPeriod/'+last(Periods/name)+'[pand_rel]';
			attribute<WP5>                     WP5_rel0                                := ='Panden/uq_identificatie/WP5_rel_PerPeriod/'+first(Periods/name)+'[pand_rel]';
			attribute<WP5>                     WP5_rel1                                := Panden/uq_identificatie/WP5_rel_PerPeriod/Y201601[pand_rel];
			attribute<WP5>                     WP5_rel2                                := ='Panden/uq_identificatie/WP5_rel_PerPeriod/'+last(Periods/name)+'[pand_rel]';
			attribute<WP5>                     WP5_rel                                 := IsDefined(WP5_rel0) ? WP5_rel0 : IsDefined(WP5_rel1) ? WP5_rel1 : WP5_rel2;
			
			
			attribute<bool>                    IsVboOntrekking                         := IsDefined(MutatieMomentenZoalsViaPandBepaald/Sloop_Woon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Onttrekking_Woon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Sloop_NietWoon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Onttrekking_NietWoon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Transformatie_NietWoon);
			attribute<bool>                    IsVboToevoeging                         := IsDefined(MutatieMomentenZoalsViaPandBepaald/Nieuwbouw_Woon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Toevoeging_Woon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Nieuwbouw_NietWoon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Toevoeging_NietWoon) || IsDefined(MutatieMomentenZoalsViaPandBepaald/Transformatie_Woon);
			
			container Gebruiksdoel_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, vbo_gebruiksdoel_ext
				); 
			
			container IsWoon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, bool
				);
				
			container IsNietWoon_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, bool
				);
				
			container VBO_Opp_perPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, m2
				);
				
			container VBO_Status_perPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, vbo_status
				)
			{
				attribute<string> StatusDevelopmentStr     (uq_identificatie);
				attribute<string> StatusDevelopmentShrtStr (uq_identificatie);
			}
			
			container Pand_Status_perPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, pand_status
				)
			{
				attribute<bool> PandHasSloopStatussen (uq_identificatie);
			}
				
			container IsVBOVoorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 IsNietVBOVoorraad_Period  (uq_identificatie);
			}
			
			container IsPandVoorraad_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 IsNietPandVoorraad_Period  (uq_identificatie);
			}
			
			
			container GevormdMetBouwstatus_PerPeriod :=
				for_each_ndv(
					Periods/name
					, uq_identificatie
					, bool
				)
			{
				attribute<bool>                 TrueInPeriod   (uq_identificatie);
			}
				

			////////////////////////////////////////////
			
			container IsToevoegingFunctie_PerPeriod :=
				for_each_nedv(
					Periods_min1/name
					, 'IsVBOVoorraad_PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/name+' && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+' && IsWoon_PerPeriod/'+Periods_min1/next_name+''
					, uq_identificatie
					, bool
				), FreeData =  "false"
			{
				attribute<bool>                   TrueInPeriod (uq_identificatie) :=  =AsList('./'+string(Periods_min1/name), '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
			}
			
			container IsOnttrekkingFunctie_PerPeriod :=
				for_each_nedv(
					Periods_min1/name
					, 'IsVBOVoorraad_PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/name+' && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name+''
					, uq_identificatie
					, bool
				), FreeData =  "false"
			{
				attribute<bool>                   TrueInPeriod(uq_identificatie) :=  =AsList('./'+string(Periods_min1/name), '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
			}
			
			////////////////////
			container Cplus
			{
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						, '(VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_ingetrokken || VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/niet_gerealiseerd_verblijfsobject) && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
			}
			
			container Cmin
			{
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						, 'IsVBOVoorraad_PerPeriod/'+Periods_min1/name+' && (VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/verblijfsobject_gevormd || VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/niet_gerealiseerd_verblijfsobject)'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
			}

			container Onttrekking
			{
				container PerPeriod_src :=
					for_each_nedv(
						Periods_min1/name
						, 'IsVBOVoorraad_PerPeriod/'+Periods_min1/name+' && VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/verblijfsobject_ingetrokken && ((Pand_Status_PerPeriod/'+Periods_min1/next_name+' != pand_status/v/sloopvergunning_verleend && Pand_Status_PerPeriod/'+Periods_min1/next_name+' != pand_status/v/pand_gesloopt) || !IsDefined(Pand_Status_PerPeriod/'+Periods_min1/next_name+'))'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						, '(PerPeriod_src/'+Periods_min1/name+' || OnttrekkingMetOnlogischeTussenstap_PerPeriod/'+Periods_min1/name+') && !Sloop/IngetrokkenVoorSloop/TrueInPeriod && !Sloop/IngetrokkenEnSloopInReeks/TrueInPeriod' 
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container OnttrekkingMetOnlogischeTussenstap_PerPeriod := //vbo voorraad - vbo niet bestaand - vbo teruggetrokken / pand voorraad - pand niet bestaand - pand voorraad
					for_each_nedv(
						Periods_min1/name
						, string(Periods_min1/IsFirst)+'[bool] ? const(false, ...) : IsVBOVoorraad_PerPeriod/'+Periods_min1/prev_name+' && !IsDefined(VBO_Status_PerPeriod/'+Periods_min1/name+') && VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/verblijfsobject_ingetrokken && IsPandVoorraad_PerPeriod/'+Periods_min1/prev_name+' && !IsDefined(Pand_Status_PerPeriod/'+Periods_min1/name+') && IsPandVoorraad_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                 TrueInPeriod(uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						// , '(PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name+') || IsOnttrekkingFunctie_PerPeriod/'+Periods_min1/name
						, '(PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name+') && !IsOnttrekkingFunctie_PerPeriod/'+Periods_min1/name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						// , '(PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name+') || IsToevoegingFunctie_PerPeriod/'+Periods_min1/name
						, '(PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name+') && !IsToevoegingFunctie_PerPeriod/'+Periods_min1/name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
			}

			container Sloop
			{
				container PerPeriod_src := // vbo voorraad & vbo status +1=ingetrokken & (pand status+1= sloopverg || gesloopt)
					for_each_nedv(
						Periods_min1/name
						, 'IsVBOVoorraad_PerPeriod/'+Periods_min1/name+' && VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/verblijfsobject_ingetrokken && (Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/sloopvergunning_verleend || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_gesloopt)'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				
				container IngetrokkenVoorSloop := // gebruik - ingetrokken - ingetrokken / gebruik - gebruik - sloop
					for_each_nedv(
						Periods_min1/name
						,    string(Periods_min1/IsFirst)+'[bool] ? const(false, ...) : IsVBOVoorraad_PerPeriod/'+Periods_min1/prev_name+' && VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_ingetrokken && VBO_Status_PerPeriod/'+Periods_min1/next_name+' == vbo_status/v/verblijfsobject_ingetrokken && IsPandVoorraad_PerPeriod/'+Periods_min1/prev_name+' && IsPandVoorraad_PerPeriod/'+Periods_min1/name+' && (Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/sloopvergunning_verleend || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_gesloopt)'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod(uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
				}
				
				
				container IngetrokkenEnSloopInReeks // first(vbo)=voorraad - last(vbo)=onttrokken / any(pand=sloopvergunning_verleend) - last(pand)=gesloopt
				{
					attribute<bool>                   TrueInPeriod(uq_identificatie)           := (vbo_status_first == vbo_status/v/verblijfsobject_in_gebruik || vbo_status_first == vbo_status/v/verblijfsobject_in_gebruik_niet_ingemeten || vbo_status_first == vbo_status/v/verblijfsobject_buiten_gebruik) && vbo_status_last == vbo_status/v/verblijfsobject_ingetrokken && pand_status_last == pand_status/v/pand_gesloopt && Pand_Status_PerPeriod/PandHasSloopStatussen && !PerPeriod_src/Period;
				}
				
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod_src/'+Periods_min1/name+' || IngetrokkenVoorSloop/'+Periods_min1/name+' || IngetrokkenEnSloopInReeks/TrueInPeriod'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}

				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
			}

			container Nieuwbouw
			{ 
				// selecteer alle objecten die gevormd zijn en in een nieuw te bouwen pand liggen, en vooraad zijn de volgende periode, en in een pand dat volgende periode nog in bouw of gebruik is.
						// tweede regel is me onduidelijk.
				container PerPeriod_src :=
					for_each_nedv(
						Periods_min1/name
						, '((VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_gevormd && Pand_Status_PerPeriod/'+Periods_min1/name+' == pand_status/v/bouwvergunning_verleend && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+' && (Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/bouwvergunning_verleend || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/bouw_gestart || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_in_gebruik || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_in_gebruik_niet_ingemeten))
								|| (VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_gevormd && Pand_Status_PerPeriod/'+Periods_min1/name+' == pand_status/v/bouw_gestart            && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+' && (Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/bouw_gestart || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_in_gebruik || Pand_Status_PerPeriod/'+Periods_min1/next_name+' == pand_status/v/pand_in_gebruik_niet_ingemeten)))'
						, uq_identificatie
						, bool
					);
					
				parameter<string> NieuwbouwSwitch_PerPeriod_rule_1perioden_terug := 'Toevoeging/PerPeriod_src/@-0@ && (GevormdMetBouwstatus_PerPeriod/@-1@)';
				parameter<string> NieuwbouwSwitch_PerPeriod_rule_2perioden_terug := 'Toevoeging/PerPeriod_src/@-0@ && (GevormdMetBouwstatus_PerPeriod/@-1@ || (GevormdMetBouwstatus_PerPeriod/@-2@ && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd))';
				parameter<string> NieuwbouwSwitch_PerPeriod_rule_3perioden_terug := 'Toevoeging/PerPeriod_src/@-0@ && (GevormdMetBouwstatus_PerPeriod/@-1@ || (GevormdMetBouwstatus_PerPeriod/@-2@ && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd) || (GevormdMetBouwstatus_PerPeriod/@-3@ && VBO_Status_PerPeriod/@-2@ == vbo_status/v/verblijfsobject_gevormd && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd))';
				parameter<string> NieuwbouwSwitch_PerPeriod_rule_4perioden_terug := 'Toevoeging/PerPeriod_src/@-0@ && (GevormdMetBouwstatus_PerPeriod/@-1@ || (GevormdMetBouwstatus_PerPeriod/@-2@ && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd) || (GevormdMetBouwstatus_PerPeriod/@-3@ && VBO_Status_PerPeriod/@-2@ == vbo_status/v/verblijfsobject_gevormd && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd) || (GevormdMetBouwstatus_PerPeriod/@-4@ && VBO_Status_PerPeriod/@-3@ == vbo_status/v/verblijfsobject_gevormd && VBO_Status_PerPeriod/@-2@ == vbo_status/v/verblijfsobject_gevormd && VBO_Status_PerPeriod/@-1@ == vbo_status/v/verblijfsobject_gevormd))';
				
				// onterecht geidentificeerd als toevoeging, maar in voorgaande periode gevormd met pand bouwgestart
				container NieuwbouwSwitch_PerPeriod := 
					for_each_nedv(
						Periods_min1/name
						, Periods_min1/IsFirst 
								? 'const(false, uq_identificatie)'
								: Periods_min1/IsSecond 
									? replace(NieuwbouwSwitch_PerPeriod_rule_1perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'')
									: Periods_min1/IsThird 
										? replace(NieuwbouwSwitch_PerPeriod_rule_2perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'')
										: Periods_min1/IsFourth 
											? replace(NieuwbouwSwitch_PerPeriod_rule_3perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'')
											: replace(NieuwbouwSwitch_PerPeriod_rule_4perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'')
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                 TrueInPeriod     (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					
					// objecten in hele periode ergens GevormdMetBouwstatus && toevoeging && NIET nieuwbouw switch (onterecht toevoeging) && NIET nieuwbouw met onlogische tussenstap && NIET nieuwbouw switch te laat nog gevormd.
					attribute<bool>                 ExtraHardeCheck  (uq_identificatie) := GevormdMetBouwstatus_PerPeriod/TrueInPeriod && Toevoeging/PerPeriod_src/TrueInPeriod && !TrueInPeriod && !NieuwbouwMetOnlogischeTussenstap_PerPeriod/TrueInPeriod && !NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/TrueInPeriod;
				}
				
				// selecteer objecten die zijn gevormd volgens nieuwbouw procedure, maar nog in gevormd zijn terwijl het pand al in gebruik is.
				container NieuwbouwSwitch_TelaatNogGevormd_PerPeriod :=  // gevormd - gevormd - gebruik / gestart - gebruik - gebruik
					for_each_nedv(
						Periods_min1/name
						, string(Periods_min1/IsFirst)+'[bool] 
							? const(false, ...) 
							: GevormdMetBouwstatus_PerPeriod/'+Periods_min1/prev_name+' && VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_gevormd && IsPandVoorraad_PerPeriod/'+Periods_min1/name+' && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+' && IsPandVoorraad_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                TrueInPeriod(uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');

					// if T+ and Y==Y VBO == gevormd en pand = bouw ? N+ 
				}
				
				
				parameter<string> NieuwbouwMetOnlogischeTussenstap_PerPeriod_rule_1perioden_terug := 'GevormdMetBouwstatus_PerPeriod/@-1@ && IsVBOVoorraad_PerPeriod/@-0@ && (Pand_Status_PerPeriod/@-0@ == pand_status/v/pand_gesloopt || Pand_Status_PerPeriod/@-0@ == pand_status/v/niet_gerealiseerd_pand) && IsPandVoorraad_PerPeriod/@+1@ && IsVBOVoorraad_PerPeriod/@+1@';
				parameter<string> NieuwbouwMetOnlogischeTussenstap_PerPeriod_rule_2perioden_terug := 'GevormdMetBouwstatus_PerPeriod/@-1@ && IsVBOVoorraad_PerPeriod/@-0@ && (Pand_Status_PerPeriod/@-0@ == pand_status/v/pand_gesloopt || Pand_Status_PerPeriod/@-0@ == pand_status/v/niet_gerealiseerd_pand) && IsPandVoorraad_PerPeriod/@+1@ && IsVBOVoorraad_PerPeriod/@+1@
																										|| (GevormdMetBouwstatus_PerPeriod/@-2@ && IsVBOVoorraad_PerPeriod/@-1@ && (Pand_Status_PerPeriod/@-1@ == pand_status/v/pand_gesloopt || Pand_Status_PerPeriod/@-1@ == pand_status/v/niet_gerealiseerd_pand) && IsVBOVoorraad_PerPeriod/@-0@ && (Pand_Status_PerPeriod/@-0@ == pand_status/v/pand_gesloopt || Pand_Status_PerPeriod/@-0@ == pand_status/v/niet_gerealiseerd_pand) && IsPandVoorraad_PerPeriod/@+1@ && IsVBOVoorraad_PerPeriod/@+1@)';

				// objecten die niet worden geidentificeerd als nieuwbouw, doordat er een onlogische tussenstap is, zoals dat het pand tussendoor even een periode gesloopt is geweest.
				container NieuwbouwMetOnlogischeTussenstap_PerPeriod := 
					for_each_nedv(
						Periods_min1/name
						, Periods_min1/IsFirst 
								? 'const(false, uq_identificatie)'
								: Periods_min1/IsSecond 
									? replace(NieuwbouwMetOnlogischeTussenstap_PerPeriod_rule_1perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'', '@+1@', ''+Periods_min1/next_name+'')
									: replace(NieuwbouwMetOnlogischeTussenstap_PerPeriod_rule_2perioden_terug, '@-0@', ''+Periods_min1/name+'', '@-1@', ''+Periods_min1/prev_name+'', '@-2@', ''+Periods_min1/prev2_name+'', '@-3@', ''+Periods_min1/prev3_name+'', '@-4@', ''+Periods_min1/prev4_name+'', '@+1@', ''+Periods_min1/next_name+'')
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                 TrueInPeriod     (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<bool>                 ExtraHardeCheck  (uq_identificatie) := GevormdMetBouwstatus_PerPeriod/TrueInPeriod && Toevoeging/PerPeriod_src/TrueInPeriod && !TrueInPeriod && !NieuwbouwMetOnlogischeTussenstap_PerPeriod/TrueInPeriod && !NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/TrueInPeriod;
				}

				// combineer alle voorgaande selecties
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						// , 'PerPeriod_src/'+Periods_min1/name+' || NieuwbouwSwitch_PerPeriod/'+Periods_min1/name+' || NieuwbouwMetOnlogischeTussenstap_PerPeriod/'+Periods_min1/name+' || NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/'+Periods_min1/name+' || NieuwbouwSwitch_PerPeriod/ExtraHardeCheck'
						, 'PerPeriod_src/'+Periods_min1/name+' || NieuwbouwSwitch_PerPeriod/'+Periods_min1/name+' || NieuwbouwMetOnlogischeTussenstap_PerPeriod/'+Periods_min1/name+' || NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/'+Periods_min1/name+''
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						, 'PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				
			}
			
			container Toevoeging
			{
				container PerPeriod_src :=  //(vbo bestaat niet in periode en is voorraad in periode erna)   || vbo status gevormd en (pand geen bouwverg en geen gestart of pand undefined) en voorraad in volgende periode
					for_each_nedv(
						Periods_min1/name
						, '((!IsDefined(VBO_Status_PerPeriod/'+Periods_min1/name+') && IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+') 
								|| (VBO_Status_PerPeriod/'+Periods_min1/name+' == vbo_status/v/verblijfsobject_gevormd 
										&& (Pand_Status_PerPeriod/'+Periods_min1/name+' != pand_status/v/bouwvergunning_verleend 
												&& Pand_Status_PerPeriod/'+Periods_min1/name+' != pand_status/v/bouw_gestart 
												|| !IsDefined(Pand_Status_PerPeriod/'+Periods_min1/name+')) 
										&& IsVBOVoorraad_PerPeriod/'+Periods_min1/next_name+'))'
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod :=
					for_each_nedv(
						Periods_min1/name
						// , 'PerPeriod_src/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwSwitch_PerPeriod/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwMetOnlogischeTussenstap_PerPeriod/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwSwitch_PerPeriod/ExtraHardeCheck'
						, 'PerPeriod_src/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwSwitch_PerPeriod/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwMetOnlogischeTussenstap_PerPeriod/'+Periods_min1/name+' && !Nieuwbouw/NieuwbouwSwitch_TelaatNogGevormd_PerPeriod/'+Periods_min1/name+''
						, uq_identificatie
						, bool
					)
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
					
				container PerPeriod_Woon :=
					for_each_nedv(
						Periods_min1/name
						// , '(PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name+') || IsToevoegingFunctie_PerPeriod/'+Periods_min1/name
						, '(PerPeriod/'+Periods_min1/name+' && IsWoon_PerPeriod/'+Periods_min1/next_name+') && !IsToevoegingFunctie_PerPeriod/'+Periods_min1/name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie)  :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_NietWoon :=
					for_each_nedv(
						Periods_min1/name
						// , '(PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name+') || IsOnttrekkingFunctie_PerPeriod/'+Periods_min1/name
						, '(PerPeriod/'+Periods_min1/name+' && IsNietWoon_PerPeriod/'+Periods_min1/next_name+') && !IsOnttrekkingFunctie_PerPeriod/'+Periods_min1/name
						, uq_identificatie
						, bool
					), FreeData =  "false"
				{
					attribute<bool>                   TrueInPeriod  (uq_identificatie) :=  =AsList('./'+Periods_min1/name, '||');
					attribute<Periods>                Period        (uq_identificatie) := ='periods_min1/org_rel[argmax_ifdefined('+AsItemList('./'+Periods_min1/name)+')[Periods_min1]]';
				}
				
				container PerPeriod_Woon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_Woon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
					
				container PerPeriod_NietWoon_sums :=
					for_each_nedv(
						Periods_min1/name
						, 'sum(PerPeriod_NietWoon/'+Periods_min1/name+'[uint32])'
						, void
						, uint32
					), FreeData =  "false";
				
			}

			container Onveranderd
			{
				container PerPeriod_Woon : FreeData =  "false"
				{
					attribute<bool>         TrueInPeriod  (uq_identificatie)          := =AsList('IsVBOVoorraad_PerPeriod/'+Periods/name, '&&')+'&& IsWoon_PerPeriod/'+first(Periods/name)+' && IsWoon_PerPeriod/'+last(Periods/name)+' && !IsToevoegingFunctie_PerPeriod/TrueInPeriod && !IsOnttrekkingFunctie_PerPeriod/period';
					attribute<Periods>      Period        (uq_identificatie)          := ='const(Periods/v/'+last(Periods/name)+',...)';
				}
				container PerPeriod_NietWoon : FreeData =  "false"
				{
					attribute<bool>         TrueInPeriod  (uq_identificatie)          := =AsList('IsVBOVoorraad_PerPeriod/'+Periods/name, '&&')+'&& IsNietWoon_PerPeriod/'+first(Periods/name)+' && IsNietWoon_PerPeriod/'+last(Periods/name)+' && !IsToevoegingFunctie_PerPeriod/TrueInPeriod && !IsOnttrekkingFunctie_PerPeriod/period';
					attribute<Periods>      Period        (uq_identificatie)          := ='const(Periods/v/'+last(Periods/name)+',...)';
				}
			}
			
			container Transformatie
			{
				container PerPeriod_Woon : FreeData =  "false"
				{
					attribute<bool>                TrueInPeriod  (uq_identificatie)          := IsToevoegingFunctie_PerPeriod/TrueInPeriod;
					attribute<Periods>      Period        (uq_identificatie)          := IsToevoegingFunctie_PerPeriod/Period;
				}
				
				container PerPeriod_NietWoon : FreeData =  "false"
				{
					attribute<bool>                TrueInPeriod  (uq_identificatie)          := IsOnttrekkingFunctie_PerPeriod/TrueInPeriod;
					attribute<Periods>      Period        (uq_identificatie)          := IsOnttrekkingFunctie_PerPeriod/Period;
				}
			}

			attribute<bool>                 Nieuwbouw_Woon                   := Nieuwbouw/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Toevoeging_Woon                  := Toevoeging/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Sloop_Woon                       := Sloop/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Onttrekking_Woon                 := Onttrekking/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Cmin_Woon                        := Cmin/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Cplus_Woon                       := Cplus/PerPeriod_Woon/TrueInPeriod;
			attribute<bool>                 Onveranderd_Woon                 := Onveranderd/PerPeriod_Woon/TrueInPeriod;
			
			attribute<bool>                 Nieuwbouw_NietWoon               := Nieuwbouw/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Toevoeging_NietWoon              := Toevoeging/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Sloop_NietWoon                   := Sloop/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Onttrekking_NietWoon             := Onttrekking/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Cmin_NietWoon                    := Cmin/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Cplus_NietWoon                   := Cplus/PerPeriod_NietWoon/TrueInPeriod;
			attribute<bool>                 Onveranderd_NietWoon             := Onveranderd/PerPeriod_NietWoon/TrueInPeriod;
			
			// attribute<bool>                 Transformatie_Woon               := Transformatie/PerPeriod_Woon/TrueInPeriod;
			// attribute<bool>                 Transformatie_NietWoon           := Transformatie/PerPeriod_NietWoon/TrueInPeriod;
			
			attribute<bool>                 Transformatie_Woon            := IsToevoegingFunctie_PerPeriod/TrueInPeriod;
			attribute<bool>                 Transformatie_NietWoon        := IsOnttrekkingFunctie_PerPeriod/TrueInPeriod;
			
			attribute<bool>                 Classified                       :=  =AsList(''+RedevSub_Types/Sub_Types, ' || ')+' || IsVBOVoorraad_PerPeriod/IsNietVBOVoorraad_Period || IsPandVoorraad_PerPeriod/IsNietPandVoorraad_Period';
			attribute<uint32>               Check_dubbelidentificatie        :=  =AsList(RedevSub_Types/Sub_Types+'[uint32]', ' + ')+' + IsVBOVoorraad_PerPeriod/IsNietVBOVoorraad_Period[uint32] + IsPandVoorraad_PerPeriod/IsNietPandVoorraad_Period[uint32]';
			
			// attribute<string>               DubbelIdentificationTypesString  := IdentifiedType_str/Nieuwbouw_Woon + ';' + IdentifiedType_str/Toevoeging_Woon;
			attribute<string>               DubbelIdentificationTypesString  := =AsList('IdentifiedType_str/'+Redev/RedevSub_Types/Sub_Types, '+ '';'' +');
			
			container IdentifiedType_str := 
				for_each_nedv(
					Redev/RedevSub_Types/Sub_Types
					, '../'+RedevSub_Types/Sub_Types+' ? '+quote(Redev/RedevSub_Types/Sub_Types)+' : '''''
					, .
					, string
				);
			
			attribute<string> OntwikkelType := switch(
													case(Nieuwbouw_Woon, 'Nieuwbouw_Woon')
													, case(Toevoeging_Woon, 'Toevoeging_Woon')
													, case(Sloop_Woon, 'Sloop_Woon')
													, case(Onttrekking_Woon, 'Onttrekking_Woon')
													, case(Cmin_Woon, 'Cmin_Woon')
													, case(Cplus_Woon, 'Cplus_Woon')
													, case(Onveranderd_Woon, 'Onveranderd_Woon')
													, case(Nieuwbouw_NietWoon, 'Nieuwbouw_NietWoon')
													, case(Toevoeging_NietWoon, 'Toevoeging_NietWoon')
													, case(Sloop_NietWoon, 'Sloop_NietWoon')
													, case(Onttrekking_NietWoon, 'Onttrekking_NietWoon')
													, case(Cmin_NietWoon, 'Cmin_NietWoon')
													, case(Cplus_NietWoon, 'Cplus_NietWoon')
													, case(Onveranderd_NietWoon, 'Onveranderd_NietWoon')
													// , case(Transformatie_Woon, 'Transformatie_Woon')
													// , case(Transformatie_NietWoon, 'Transformatie_NietWoon')
													, case(IsVBOVoorraad_PerPeriod/IsNietVBOVoorraad_Period, 'Niet_VBO_Voorraad')
													, case(IsPandVoorraad_PerPeriod/IsNietPandVoorraad_Period, 'Niet_Pand_Voorraad')
													, ''
												);
			attribute<typeringen/Redev/RedevSub_Types> OntwikkelType_class := rlookup(OntwikkelType, /typeringen/Redev/RedevSub_Types/Sub_Types);
			
			unit<uint32> Typen : nrofrows = 7
			{
				attribute<string> name : ['Nieuwbouw','Toevoeging','Sloop','Onttrekking', 'Cplus','Cmin'];
				attribute<string> label := name;
			}
			
			unit<uint32> TypenWNW := combine(Typen, Redev/Woon_NietWoon)
			{
				attribute<string> type_name    := Typen/name[nr_1];
				attribute<string> functie_name := Redev/Woon_NietWoon/name[nr_2];
				attribute<string> name         := type_name +'_'+ functie_name;
			}	
			
			container Export_totals :=
				for_each_nedv(
					TypenWNW/name
					, 'union_data(Periods_min1,'+replace(AsItemList('Read_uq_identificatie/@T@/PerPeriod_@F@_sums/'+Periods_min1/name),'@T@', TypenWNW/type_name, '@F@', TypenWNW/functie_name)+')'
					, Periods_min1
					, uint32
				)
			{
				attribute<string> period (Periods_min1) := Periods_min1/name;
			}			
			
			container MutatieMomentenZoalsViaPandBepaald := 
				for_each_nedv(
					RedevSub_Types_wMixed/name
					, 'Panden/Read_uq_identificatie/Correctie/Is'+RedevSub_Types_wMixed/name+'[../pand_rel] 
						? Panden/Read_uq_identificatie/Correctie/WoningTotalenCheck/PerRedevType/'+RedevSub_Types_wMixed/name+'/Panden_sub/RelevantJaar[
								rlookup(../pand_id_nr, Panden/Read_uq_identificatie/Correctie/WoningTotalenCheck/PerRedevType/'+RedevSub_Types_wMixed/name+'/Panden_sub/bag_nr)] 
						: (0/0)[Periods]'
					, Read_uq_identificatie
					, Periods
				), FreeData = "false"
			{	
				attribute<uint64> bag_nr (..) := ../bag_nr;
				attribute<uint32> count_identificaties (..) := ='add('+AsList('IsDefined('+RedevSub_Types_wMixed/name+')[uint32]', ' , ')+')';
				
				attribute<RedevSub_Types_wMixed> ArgMax (..) := ='argmax_ifdefined('+AsList(RedevSub_Types_wMixed/name, ',')+')[RedevSub_Types_wMixed]';
				
				attribute<Periods> MutatieMoment (..) :=  ='merge(ArgMax, Periods, '+AsList(RedevSub_Types_wMixed/name,',')+')'; 
				attribute<jaar>    MutatieJaar   (..) := rjoin(MutatieMoment, id(Periods), Periods/year);
			}
			
		}
	} 
}

