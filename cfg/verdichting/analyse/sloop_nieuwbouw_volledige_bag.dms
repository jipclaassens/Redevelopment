container sloop_nieuwbouw_volledige_bag:  using = "eenheden;typeringen"
{  
	unit<uint32>      RegioUnit_buurt     := brondata/regios/buurten/src_2012;
	unit<uint32>      RegioUnit_gem       := BronData/regios/gemeenten/gem_2012/gem_uq;
	unit<uint32>      RegioUnit_wijk      := brondata/regios/wijken/src_2012;
	
	unit<uint32>      Vbo                 := /BronData/BAG/Volledige_BAG/VBO/Src;
	unit<uint32>      Pand                := /BronData/BAG/Volledige_BAG/Pand/Src;
	unit<uint32>      Perceel             := /Brondata/BRK/Perceel;
	
	
	parameter<int32>  prikstart           := 20120101[int32];
	parameter<int32>  prikeind            := 20200101[int32];

	unit<uint32>      Pand_start          := subset(Pand/meta/BEGINDATUM <= prikstart && (pand/meta/EINDDATUM >= prikstart || pand/meta/EINDDATUM == 0i))
	{
		attribute<geometries/rdc>      geometry (poly)       := Pand/geometry[nr_OrgEntity];
		attribute<string>              identificatie         := Pand/identificatie[nr_OrgEntity];
		attribute<pand_status>         status_rel            := Pand/meta/status_rel[nr_OrgEntity];
		attribute<int32>               BEGINDATUM            := Pand/meta/BEGINDATUM[nr_OrgEntity];
		attribute<int32>               EINDDATUM             := Pand/meta/EINDDATUM[nr_OrgEntity];
		attribute<eenheden/jaar>       Bouwjaar              := Pand/bouwjaar[nr_OrgEntity];
		
		unit<uint32> Bouwvergunning := subset(status_rel == pand_status/v/bouwvergunning_verleend)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> BouwGestart := subset(status_rel == pand_status/v/bouw_gestart)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> NietBouwgestartNietVergunningVerleend := subset(status_rel != pand_status/v/bouw_gestart && status_rel != pand_status/v/bouwvergunning_verleend)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> gerelateerdPand := Subset(IsDefined(rlookup(vbo/gerelateerdPand/pand_id, identificatie)) && vbo/gerelateerdPand/pand_begin <= prikstart && (vbo/gerelateerdPand/pand_eind >= prikstart || vbo/gerelateerdPand/pand_eind == 0i))
		{
			attribute<string>               pand_id      := vbo/gerelateerdPand/pand_id[nr_OrgEntity];
			attribute<string>               vbo_id       := vbo/gerelateerdPand/vbo_id[nr_OrgEntity];
			
			attribute<int32>                pand_begin   := vbo/gerelateerdPand/pand_begin[nr_OrgEntity];
			attribute<int32>                pand_eind    := vbo/gerelateerdPand/pand_eind[nr_OrgEntity];
			attribute<int32>                vbo_begin    := vbo/gerelateerdPand/vbo_begin[nr_OrgEntity];
			attribute<int32>                vbo_eind     := vbo/gerelateerdPand/vbo_eind[nr_OrgEntity];
		}
	}

	unit<uint32>      Pand_eind          := subset(Pand/meta/BEGINDATUM <= prikeind && (pand/meta/EINDDATUM >= prikeind || pand/meta/EINDDATUM == 0i))
	{
		attribute<geometries/rdc>      geometry (poly)       := Pand/geometry[nr_OrgEntity];
		attribute<string>              identificatie         := Pand/identificatie[nr_OrgEntity];
		attribute<pand_status>         status_rel            := Pand/meta/status_rel[nr_OrgEntity];
		attribute<int32>               BEGINDATUM            := Pand/meta/BEGINDATUM[nr_OrgEntity];
		attribute<int32>               EINDDATUM             := Pand/meta/EINDDATUM[nr_OrgEntity];
		attribute<eenheden/jaar>       Bouwjaar              := Pand/bouwjaar[nr_OrgEntity];
		
		unit<uint32> VergunningGestartInGebruik := subset(status_rel == pand_status/v/bouwvergunning_verleend || status_rel == pand_status/v/bouw_gestart || status_rel == pand_status/v/pand_in_gebruik || status_rel == pand_status/v/pand_in_gebruik_niet_ingemeten)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> GestartInGebruik := subset(status_rel == pand_status/v/bouw_gestart || status_rel == pand_status/v/pand_in_gebruik || status_rel == pand_status/v/pand_in_gebruik_niet_ingemeten)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> Bouwvergunning := subset(status_rel == pand_status/v/bouwvergunning_verleend)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> BouwGestart := subset(status_rel == pand_status/v/bouw_gestart)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> NietBouwgestartNietVergunningVerleend := subset(status_rel != pand_status/v/bouw_gestart && status_rel != pand_status/v/bouwvergunning_verleend)
		{
			attribute<geometries/rdc>      geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<eenheden/jaar>       Bouwjaar              := ../bouwjaar[nr_OrgEntity];
		}
		
		unit<uint32> gerelateerdPand := Subset(IsDefined(rlookup(vbo/gerelateerdPand/pand_id, identificatie)) && vbo/gerelateerdPand/pand_begin <= prikeind && (vbo/gerelateerdPand/pand_eind >= prikeind || vbo/gerelateerdPand/pand_eind == 0i))
		{
			attribute<string>               pand_id      := vbo/gerelateerdPand/pand_id[nr_OrgEntity];
			attribute<string>               vbo_id       := vbo/gerelateerdPand/vbo_id[nr_OrgEntity];
			
			attribute<int32>                pand_begin   := vbo/gerelateerdPand/pand_begin[nr_OrgEntity];
			attribute<int32>                pand_eind    := vbo/gerelateerdPand/pand_eind[nr_OrgEntity];
			attribute<int32>                vbo_begin    := vbo/gerelateerdPand/vbo_begin[nr_OrgEntity];
			attribute<int32>                vbo_eind     := vbo/gerelateerdPand/vbo_eind[nr_OrgEntity];
		}
	}


	unit<uint32>       VBO_start           := subset(Vbo/meta/BEGINDATUM <= prikstart && (vbo/meta/EINDDATUM >= prikstart || vbo/meta/EINDDATUM == 0i))
	{
		attribute<geometries/rdc>      geometry              := Vbo/geometry[nr_OrgEntity];
		attribute<string>              identificatie         := Vbo/identificatie[nr_OrgEntity];
		attribute<vbo_status>          status_rel            := Vbo/meta/status_rel[nr_OrgEntity];
		attribute<int32>               BEGINDATUM            := Vbo/meta/BEGINDATUM[nr_OrgEntity];
		attribute<int32>               EINDDATUM             := Vbo/meta/EINDDATUM[nr_OrgEntity];
		
		unit<uint32> Gevormd := subset(status_rel == vbo_status/v/verblijfsobject_gevormd)
		{
			attribute<geometries/rdc>      geometry              := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			
			attribute<string>              GerelateerdPand_id    := rjoin(identificatie, Pand_start/gerelateerdPand/vbo_id, Pand_start/gerelateerdPand/pand_id);
			attribute<bool>                IsPand_NietBouwgestartNietVergunningVerleend := IsDefined(rlookup(GerelateerdPand_id, Pand_start/NietBouwgestartNietVergunningVerleend/identificatie));
			attribute<bool>                IsPand_VergunningVerleend                    := IsDefined(rlookup(GerelateerdPand_id, Pand_start/Bouwvergunning/identificatie));
			attribute<bool>                IsPand_BouwGestart                           := IsDefined(rlookup(GerelateerdPand_id, Pand_start/BouwGestart/identificatie));
		}
		unit<uint32> Voorraad := subset(status_rel == vbo_status/v/verblijfsobject_in_gebruik || status_rel == vbo_status/v/verblijfsobject_in_gebruik_niet_ingemeten)
		{
			attribute<geometries/rdc>      geometry              := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			
			attribute<bool>                BestondNietBijStart   := !IsDefined(rlookup(identificatie, VBO_start/identificatie));
			attribute<string>              GerelateerdPand_id    := rjoin(identificatie, Pand_start/gerelateerdPand/vbo_id, Pand_start/gerelateerdPand/pand_id);
		}
	}

	unit<uint32>       VBO_eind            := subset(Vbo/meta/BEGINDATUM <= prikeind && (vbo/meta/EINDDATUM >= prikeind || vbo/meta/EINDDATUM == 0i))
	{
		attribute<geometries/rdc>      geometry              := Vbo/geometry[nr_OrgEntity];
		attribute<string>              identificatie         := Vbo/identificatie[nr_OrgEntity];
		attribute<vbo_status>          status_rel            := Vbo/meta/status_rel[nr_OrgEntity];
		attribute<int32>               BEGINDATUM            := Vbo/meta/BEGINDATUM[nr_OrgEntity];
		attribute<int32>               EINDDATUM             := Vbo/meta/EINDDATUM[nr_OrgEntity];
		attribute<bool>                BestondNietBijStart   := !IsDefined(rlookup(identificatie, VBO_start/identificatie));
			
		unit<uint32> Gevormd := subset(status_rel == vbo_status/v/verblijfsobject_gevormd)
		{
			attribute<geometries/rdc>      geometry              := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			
			attribute<bool>                BestondNietBijStart   := !IsDefined(rlookup(identificatie, VBO_start/identificatie));
			attribute<string>              GerelateerdPand_id    := rjoin(identificatie, Pand_eind/gerelateerdPand/vbo_id, Pand_eind/gerelateerdPand/pand_id);
		}
		unit<uint32> Voorraad := subset(status_rel == vbo_status/v/verblijfsobject_in_gebruik || status_rel == vbo_status/v/verblijfsobject_in_gebruik_niet_ingemeten)
		{
			attribute<geometries/rdc>      geometry              := ../geometry[nr_OrgEntity];
			attribute<string>              identificatie         := ../identificatie[nr_OrgEntity];
			attribute<vbo_status>          status_rel            := ../status_rel[nr_OrgEntity];
			attribute<int32>               BEGINDATUM            := ../BEGINDATUM[nr_OrgEntity];
			attribute<int32>               EINDDATUM             := ../EINDDATUM[nr_OrgEntity];
			attribute<string>              GerelateerdPand_id       := rjoin(identificatie, Pand_eind/gerelateerdPand/vbo_id, Pand_eind/gerelateerdPand/pand_id);
			
			
			attribute<bool>                BestondNietBijStart                := !IsDefined(rlookup(identificatie, VBO_start/identificatie));
			attribute<bool>                IsGevormdNietBouw_Start            := rjoin(identificatie, VBO_start/Gevormd/identificatie, VBO_start/Gevormd/IsPand_NietBouwgestartNietVergunningVerleend);
			attribute<bool>                IsGevormdBouwVerleend_Start        := rjoin(identificatie, VBO_start/Gevormd/identificatie, VBO_start/Gevormd/IsPand_VergunningVerleend);
			attribute<bool>                IsGevormdBouwGestart_Start         := rjoin(identificatie, VBO_start/Gevormd/identificatie, VBO_start/Gevormd/IsPand_BouwGestart);
			attribute<bool>                IsPand_VergunningGestartInGebruik_eind  := IsDefined(rlookup(GerelateerdPand_id, Pand_eind/VergunningGestartInGebruik/identificatie));
			attribute<bool>                IsPand_GestartInGebruik_eind            := IsDefined(rlookup(GerelateerdPand_id, Pand_eind/GestartInGebruik/identificatie));
		}
	}

	unit<uint32>      VBO_regel1_Tplus := subset(VBO_eind/Voorraad/BestondNietBijStart)
	{
		attribute<geometries/rdc>      geometry      := VBO_eind/Voorraad/geometry[nr_OrgEntity];
		attribute<string>              identificatie := VBO_eind/Voorraad/identificatie[nr_OrgEntity];
		attribute<vbo_gebruiksdoel>    functie       := rjoin(identificatie, vbo/identificatie, vbo/gebruiksdoel);
		
		unit<uint32> IsWoon := subset(functie == vbo_gebruiksdoel/v/woon)
		{
			attribute<geometries/rdc>      geometry      := ../geometry[nr_OrgEntity];
			parameter<uint32> sum := count(geometry);
		}
	}

	unit<uint32>      VBO_regel2_Tplus := subset(VBO_eind/Voorraad/IsGevormdNietBouw_Start)
	{
		attribute<geometries/rdc>      geometry      := VBO_eind/Voorraad/geometry[nr_OrgEntity];
		attribute<string>              identificatie := VBO_eind/Voorraad/identificatie[nr_OrgEntity];
		attribute<vbo_gebruiksdoel>    functie       := rjoin(identificatie, vbo/identificatie, vbo/gebruiksdoel);
		
		unit<uint32> IsWoon := subset(functie == vbo_gebruiksdoel/v/woon)
		{
			attribute<geometries/rdc>      geometry      := ../geometry[nr_OrgEntity];
			parameter<uint32> sum := count(geometry);
		}
	}
	
	unit<uint32>      VBO_regel3_Nplus := subset(VBO_eind/Voorraad/IsGevormdBouwVerleend_Start && VBO_eind/Voorraad/IsPand_VergunningGestartInGebruik_eind)
	{
		attribute<geometries/rdc>      geometry      := VBO_eind/Voorraad/geometry[nr_OrgEntity];
		attribute<string>              identificatie := VBO_eind/Voorraad/identificatie[nr_OrgEntity];
		attribute<vbo_gebruiksdoel>    functie       := rjoin(identificatie, vbo/identificatie, vbo/gebruiksdoel);
		
		unit<uint32> IsWoon := subset(functie == vbo_gebruiksdoel/v/woon)
		{
			attribute<geometries/rdc>      geometry      := ../geometry[nr_OrgEntity];
			parameter<uint32>              sum := count(geometry);
		}
	}
	
	unit<uint32>      VBO_regel4_Nplus := subset(VBO_eind/Voorraad/IsGevormdBouwGestart_Start && VBO_eind/Voorraad/IsPand_GestartInGebruik_eind)
	{
		attribute<geometries/rdc>      geometry      := VBO_eind/Voorraad/geometry[nr_OrgEntity];
		attribute<string>              identificatie := VBO_eind/Voorraad/identificatie[nr_OrgEntity];
		attribute<vbo_gebruiksdoel>    functie       := rjoin(identificatie, vbo/identificatie, vbo/gebruiksdoel);
		
		unit<uint32> IsWoon := subset(functie == vbo_gebruiksdoel/v/woon)
		{
			attribute<geometries/rdc>      geometry      := ../geometry[nr_OrgEntity];
			parameter<uint32> sum := count(geometry);
		}
	}
	
	container Totals
	{
		parameter<uint32> Tplus_1 := VBO_regel1_Tplus/IsWoon/sum;
		parameter<uint32> Tplus_2 := VBO_regel2_Tplus/IsWoon/sum;
		parameter<uint32> Nplus_3 := VBO_regel3_Nplus/IsWoon/sum;
		parameter<uint32> Nplus_4 := VBO_regel4_Nplus/IsWoon/sum;
	}

/*
	unit<uint32> panden := pand
	, 	FreeData = "False"
	{
		attribute<.>                    pand_vbo_rel(vbos)  := point_in_polygon(vbos/geometry, geometry);
		attribute<uint32>               count_vbo_pand      := pcount(pand_vbo_rel);
		attribute<unique>               unique_rel          := rlookup(identificatie, unique/identificatie);
		attribute<vbo_gebruiksdoel>     modus_vbo_gebruiksdoel := modus(vbos/gebruiksdoel, pand_vbo_rel);

		unit<uint32> unique_base := unique(identificatie);
		unit<uint32> unique      := TiledUnit(1000000[unique_base])
		,	DialogType  = "Map"
		,	DialogData  = "geometry_mm"
		,	FreeData    = "False"
		{
			attribute<uint32>                   count                   := pcount(panden/unique_rel);

			attribute<geometries/rdc_mm>        geometry_mm	(polygon)   := rjoin(identificatie, panden/identificatie, panden/geometry_mm);
			attribute<geometries/rdc>           geometry (polygon)      := rjoin(identificatie, panden/identificatie, panden/geometry);
			attribute<string>                   identificatie           := unique_base/values[mapping(unique, unique_base)];
			attribute<jaar>                     bouwjaar                := last(panden/bouwjaar, panden/unique_rel);
			attribute<vbo_gebruiksdoel>         modus_vbo_gebruiksdoel  := rjoin(identificatie, panden/identificatie, panden/modus_vbo_gebruiksdoel);
			
			attribute<string>                   Last_STATUS                  := last(panden/meta/STATUS, panden/unique_rel);
			attribute<int32>                    Last_BEGINDATUM              := last(panden/meta/BEGINDATUM, panden/unique_rel);
			attribute<int32>                    Last_EINDDATUM               := last(panden/meta/EINDDATUM, panden/unique_rel);
			attribute<bool>                     Last_IS_INACTIEF             := last(panden/meta/IS_INACTIEF, panden/unique_rel);
			attribute<bool>                     Last_IS_CORRECTIE            := last(panden/meta/IS_CORRECTIE, panden/unique_rel);
			
			attribute<string>                   First_STATUS                 := first(panden/meta/STATUS, panden/unique_rel);
			attribute<int32>                    First_BEGINDATUM             := first(panden/meta/BEGINDATUM, panden/unique_rel);
			attribute<int32>                    First_EINDDATUM              := first(panden/meta/EINDDATUM, panden/unique_rel);
			attribute<bool>                     First_IS_INACTIEF            := first(panden/meta/IS_INACTIEF, panden/unique_rel);
			attribute<bool>                     First_IS_CORRECTIE           := first(panden/meta/IS_CORRECTIE, panden/unique_rel);
			
			attribute<m2>                       area                    := area(geometry, m2);
			
			attribute<.>                        pand_vbo_rel             (VBOs)                                        := point_in_polygon(VBOs/geometry, geometry);
			attribute<.>                        pand_vbo_actueel_rel     (VBOs/gebruiksdoelen/woon/actueel/unique)     := point_in_polygon(VBOs/gebruiksdoelen/woon/actueel/unique/geometry, geometry);
			attribute<.>                        pand_vbo_ingetrokken_rel (VBOs/gebruiksdoelen/woon/ingetrokken/unique) := point_in_polygon(VBOs/gebruiksdoelen/woon/ingetrokken/unique/geometry, geometry);
			
			attribute<uint32>                   count_vbo_pand              := pcount(pand_vbo_rel);
			attribute<uint32>                   count_vbo_actueel_pand      := pcount(pand_vbo_actueel_rel);
			attribute<uint32>                   count_vbo_ingetrokken_pand  := pcount(pand_vbo_ingetrokken_rel);
			attribute<geometries/rdc>           centroid                := rjoin(identificatie, panden/identificatie, panden/centroid);
			attribute<RegioUnit_gem>            pand_gem_rel            := point_in_polygon(centroid, RegioUnit_gem/Geometry);
			attribute<string>                   GM_NAME                 := rjoin(pand_gem_rel, RegioUnit_gem/id, RegioUnit_gem/name);
			attribute<RegioUnit_buurt>          pand_buurt_rel          := point_in_polygon(centroid, RegioUnit_buurt/Geometry);
			attribute<string>                   BU_NAME                 := rjoin(pand_buurt_rel, RegioUnit_buurt/id, RegioUnit_buurt/BU_NAAM);
		}
	}

	// unit<uint32> panden_met_vbo := subset(panden/unique/count_vbo_actueel_pand > 0 || panden/unique/count_vbo_ingetrokken_pand > 0)
	unit<uint32> panden_met_vbo := subset(panden/unique/count_vbo_pand > 0)
	, 	DialogType = "Map"
	, 	DialogData = "geometry_mm"
	, 	FreeData = "False"
	{
		attribute<geometries/rdc_mm>        geometry_mm (poly)          := panden/unique/geometry_mm[nr_OrgEntity];
		attribute<geometries/rdc>           geometry (poly)             := panden/unique/geometry[nr_OrgEntity];
		attribute<geometries/rdc>           centroid                    := panden/unique/centroid[nr_OrgEntity];
		attribute<string>                   identificatie               := panden/unique/identificatie[nr_OrgEntity];
		attribute<m2>                       area                        := area(geometry, m2);
		attribute<vbo_gebruiksdoel>         modus_vbo_gebruiksdoel      := panden/unique/modus_vbo_gebruiksdoel[nr_OrgEntity];
		
		unit<uint32> id_sub := subset(identificatie == '0363100012245740' || identificatie == '0363100012096183')
		{
			attribute<geometries/rdc>           geometry (poly)             := ../geometry[nr_OrgEntity];
			attribute<jaar>                     bouwjaar                    := ../bouwjaar[nr_OrgEntity];
			attribute<string>                   STATUS                      := ../STATUS[nr_OrgEntity];
			attribute<INT32>                    BEGINDATUM                  := ../BEGINDATUM[nr_OrgEntity];
			attribute<INT32>                    EINDDATUM                   := ../EINDDATUM[nr_OrgEntity];
		}
		attribute<jaar>                     bouwjaar                    := panden/unique/bouwjaar[nr_OrgEntity];
		attribute<uint32>                   count_vbo_actueel_pand      := panden/unique/count_vbo_actueel_pand[nr_OrgEntity];
		attribute<uint32>                   count_vbo_ingetrokken_pand  := panden/unique/count_vbo_ingetrokken_pand[nr_OrgEntity];
		
		attribute<perceel>                  perceel_rel                 := point_in_polygon(centroid, perceel/geometry);
		attribute<.>                        pand_vbo_rel(vbos)          := point_in_polygon(vbos/geometry, geometry);
		
		attribute<.>                        pand_vbo_rel_woon      (vbos/gebruiksdoelen/woon)       := point_in_polygon(vbos/gebruiksdoelen/woon/geometry, geometry);
		attribute<.>                        pand_vbo_rel_niet_woon (vbos/gebruiksdoelen/niet_woon)  := point_in_polygon(vbos/gebruiksdoelen/niet_woon/geometry, geometry);
		
		attribute<uint32>                   pand_functie_woon           := (count_vbo_wonen >= 1) ? 1 : 0;
		attribute<uint32>                   pand_functie_anders         := (count_vbo_niet_wonen == 0) ? 1 : 0;

		attribute<uint32>                   count_vbo_wonen             := count(vbos/gebruiksdoelen/woon/geometry, pand_vbo_rel_woon);
		attribute<uint32>                   count_vbo_niet_wonen        := count(vbos/gebruiksdoelen/niet_woon/geometry, pand_vbo_rel_niet_woon);
		
		attribute<string> STATUS          := panden/unique/Last_STATUS[nr_OrgEntity];
		attribute<INT32>  BEGINDATUM      := panden/unique/Last_BEGINDATUM[nr_OrgEntity];
		attribute<INT32>  EINDDATUM       := panden/unique/Last_EINDDATUM[nr_OrgEntity];
		attribute<Bool>   IS_CORRECTIE    := panden/unique/Last_IS_CORRECTIE[nr_OrgEntity];
		attribute<Bool>   IS_INACTIEF     := panden/unique/Last_IS_INACTIEF[nr_OrgEntity];
		
		unit<uint32> sloop_begindatum_tussen_12_20 := Subset(
		// panden_met_vbo/meta/BEGINDATUM >= 20120101[int32] 
		// && panden_met_vbo/meta/BEGINDATUM < 20170101[int32] 
		// &&
		(STATUS == 'Pand gesloopt' || STATUS == 'Sloopvergunning verleend')
		&& !(pand_functie_anders == 1 && area < 10[m2])
		)
		,	DialogType = "Map"
		,	DialogData = "geometry"
		, 	FreeData = "False"
		{
			attribute<geometries/rdc>       geometry (poly)  := ../geometry[nr_OrgEntity];
			attribute<geometries/rdc>       centroid         := ../centroid[nr_OrgEntity];

			attribute<string>               identificatie    := ../identificatie[nr_OrgEntity];
			attribute<jaar>                 bouwjaar         := ../bouwjaar[nr_OrgEntity];
			attribute<string>               status           := ../status[nr_OrgEntity];
			attribute<int32>                begindatum       := ../begindatum[nr_OrgEntity];
			attribute<int32>                einddatum        := ../einddatum[nr_OrgEntity];
			attribute<vbo_gebruiksdoel>     modus_vbo_gebruiksdoel := ../modus_vbo_gebruiksdoel[nr_OrgEntity];
			attribute<perceel>              perceel_rel      := ../perceel_rel[nr_OrgEntity];
			
			container meta
			{
				attribute<string> STATUS         (..) := .../STATUS[nr_OrgEntity];
				attribute<INT32>  BEGINDATUM     (..) := .../BEGINDATUM[nr_OrgEntity];
				attribute<INT32>  EINDDATUM      (..) := .../EINDDATUM[nr_OrgEntity];
				attribute<Bool>   IS_CORRECTIE   (..) := .../IS_CORRECTIE[nr_OrgEntity];
				attribute<Bool>   IS_INACTIEF    (..) := .../IS_INACTIEF[nr_OrgEntity];
			}
			
			unit<uint32> sloop_perceel := subset(IsDefined(invert(perceel_rel)))
			,	DialogType = "Map"
			,	DialogData = "geometry"
			, FreeData = "False"
			{
				attribute<geometries/rdc>      geometry (poly)    := Perceel/geometry[nr_OrgEntity];
				attribute<geometries/rdc_mm>   geometry_mm (poly) := geometry[geometries/rdc_mm];
				attribute<uint32>              count_pand         := Perceel/count_pand[nr_OrgEntity];
			}
		}

		unit<uint32> nieuwbouw_bouwjaar_tussen_12_20 := Subset(
		    panden_met_vbo/BEGINDATUM >= 20120101[int32]
		&& !panden_met_vbo/IS_INACTIEF 
		&&  panden_met_vbo/bouwjaar >= 2012[jaar] && panden_met_vbo/bouwjaar != 9999[jaar] && panden_met_vbo/bouwjaar != 9998[jaar] 
		&& (panden_met_vbo/STATUS == 'Pand in gebruik' || panden_met_vbo/STATUS == 'Pand in gebruik (niet ingemeten)' || panden_met_vbo/STATUS == 'Pand buiten gebruik')
		|| (panden_met_vbo/STATUS == 'Bouw gestart'    || panden_met_vbo/STATUS == 'Bouwvergunning verleend')
		&&  panden_met_vbo/STATUS != 'Niet gerealiseerd pand'
		&&  panden_met_vbo/STATUS != 'Sloopvergunning verleend'
		&&  panden_met_vbo/STATUS != 'Pand gesloopt'
		&&  panden_met_vbo/pand_functie_woon == 1
		)
		,	DialogType = "Map"
		,	DialogData = "geometry"
		, 	FreeData = "False"
		{
			attribute<geometries/rdc>       geometry (poly)  := ../geometry[nr_OrgEntity];
			attribute<string>               identificatie    := ../identificatie[nr_OrgEntity];
			attribute<jaar>                 bouwjaar         := ../bouwjaar[nr_OrgEntity];
			attribute<string>               status           := ../status[nr_OrgEntity];
			attribute<int32>                begindatum       := ../begindatum[nr_OrgEntity];
			attribute<int32>                einddatum        := ../einddatum[nr_OrgEntity];
			attribute<vbo_gebruiksdoel>     modus_vbo_gebruiksdoel := ../modus_vbo_gebruiksdoel[nr_OrgEntity];
			attribute<perceel>              perceel_rel      := ../perceel_rel[nr_OrgEntity];
			
			container meta
			{
				unit<uint32> status_uq := unique(Status);
			
				attribute<string> STATUS         (..) := .../STATUS[nr_OrgEntity];
				attribute<INT32>  BEGINDATUM     (..) := .../BEGINDATUM[nr_OrgEntity];
				attribute<INT32>  EINDDATUM      (..) := .../EINDDATUM[nr_OrgEntity];
				attribute<Bool>   IS_CORRECTIE   (..) := .../IS_CORRECTIE[nr_OrgEntity];
				attribute<Bool>   IS_INACTIEF    (..) := .../IS_INACTIEF[nr_OrgEntity];
			}
			
			unit<uint32> nieuwbouw_perceel := subset(IsDefined(invert(perceel_rel)))
			,	DialogType = "Map"
			,	DialogData = "geometry"
			, FreeData = "False"
			{
				attribute<geometries/rdc>      geometry (poly)    := Perceel/geometry[nr_OrgEntity];
				attribute<geometries/rdc_mm>   geometry_mm (poly) := geometry[geometries/rdc_mm];
				attribute<uint32>              count_pand         := Perceel/count_pand[nr_OrgEntity];
			}
		}
	}
	
	unit<uint32>  sloop_nieuwbouw_intersect  := overlay_polygon(panden_met_vbo/nieuwbouw_bouwjaar_tussen_12_20/nieuwbouw_perceel/geometry_mm, panden_met_vbo/sloop_begindatum_tussen_12_20/sloop_perceel/geometry_mm), FreeData = "False"
	{
		unit<uint32> nieuwbouw_perceel := subset(IsDefined(first_rel))
		{
			attribute<uint32> first_rel := ../first_rel[nr_OrgEntity];
			attribute<geometries/rdc_mm> geometry_mm (poly) := panden_met_vbo/nieuwbouw_bouwjaar_tussen_12_20/nieuwbouw_perceel/geometry_mm[first_rel];
		}
	}

	unit<uint32> vbos := vbo
	, 	DialogType = "Map"
	, 	DialogData = "geometry_mm"
	, 	FreeData = "False"
	{
		attribute<geometries/rdc_mm>        geometry_mm         := vbo/geometry_mm;
		attribute<geometries/rdc>           geometry            := vbo/geometry;
		attribute<uint32>                  	pand_vbo_rel := point_in_polygon(geometry, panden/geometry);

		container gebruiksdoelen_bool :=
			for_each_nedv(
				typeringen/vbo_gebruiksdoel/name
				, 'vbo/gebruiksdoelen/'+typeringen/vbo_gebruiksdoel/name
				, vbos
				, bool
			);
			
		container gebruiksdoelen
		{
			unit<uint32> woon := Subset(vbos/gebruiksdoel == /typeringen/vbo_gebruiksdoel/V/woon)
			,	DialogType = "Map"
			,	DialogData = "geometry_mm"
			, 	FreeData = "False"
			{
				attribute<geometries/rdc_mm>      geometry_mm         := vbos/geometry_mm[nr_OrgEntity];
				attribute<geometries/rdc>         geometry            := vbos/geometry[nr_OrgEntity];
				attribute<string>                 identificatie       := vbos/identificatie[nr_OrgEntity];
				attribute<m2>                     oppervlakte         := vbos/oppervlakte[nr_OrgEntity];
				attribute<string>                 status              := vbos/meta/status[nr_OrgEntity];
				attribute<string>                 pand_id_geom        := vbos/pand_id_geom[nr_OrgEntity];
				
				container meta
				{
					attribute<string> STATUS       (..) := vbos/meta/STATUS[nr_OrgEntity];
					attribute<INT32>  BEGINDATUM   (..) := vbos/meta/BEGINDATUM[nr_OrgEntity];
					attribute<INT32>  EINDDATUM    (..) := vbos/meta/EINDDATUM[nr_OrgEntity];
					attribute<bool>   IS_INACTIEF  (..) := vbos/meta/IS_INACTIEF[nr_OrgEntity];
					
					attribute<bool>   WasGestart   (..) := BEGINDATUM < /Analyse/sloop_nieuwbouw_volledige_bag/prikeind[int32];
					attribute<bool>   WasBeeindigd (..) := EINDDATUM  < /Analyse/sloop_nieuwbouw_volledige_bag/prikeind && EINDDATUM > 0i;
				}
				
				unit<uint32> actueel := Subset(
				(vbos/gebruiksdoelen/woon/status == 'Verblijfsobject buiten gebruik' 
				|| vbos/gebruiksdoelen/woon/status == 'Verblijfsobject in gebruik' 
				|| vbos/gebruiksdoelen/woon/status == 'Verblijfsobject in gebruik (niet ingemeten)' 
				|| vbos/gebruiksdoelen/woon/status == 'Verblijfsobject gevormd'
				) 
				&& 
				vbos/gebruiksdoelen/woon/meta/WasGestart 
				&& !vbos/gebruiksdoelen/woon/meta/WasBeeindigd
				)
				,	DialogType = "Map"
				,	DialogData = "geometry_mm"
				, 	FreeData = "False"
				{
					attribute<geometries/rdc_mm>        geometry_mm    := ../geometry_mm[nr_OrgEntity];
					attribute<geometries/rdc>         	geometry       := ../geometry[nr_OrgEntity];
					attribute<string>                   identificatie  := ../identificatie[nr_OrgEntity];
					attribute<m2>                       oppervlakte    := ../oppervlakte[nr_OrgEntity];
					attribute<string>                   status         := ../status[nr_OrgEntity];
					attribute<int32>                    begindatum     := ../meta/begindatum[nr_OrgEntity];
					attribute<int32>                    einddatum      := ../meta/einddatum[nr_OrgEntity];
					attribute<string>                   pand_id_geom   := ../pand_id_geom[nr_OrgEntity];
					attribute<unique>                   unique_rel     := rlookup(identificatie, unique/identificatie);
					
					unit<uint32> einddatum_uq := unique(einddatum);
					unit<uint32> unique_base  := unique(identificatie);
					unit<uint32> unique      := TiledUnit(1000000[unique_base])
					,	DialogType  = "Map"
					,	DialogData  = "geometry_mm"
					,	FreeData    = "False"
					{
						attribute<uint32>                   count                   := pcount(../unique_rel);
						attribute<string>                   identificatie           := unique_base/values[mapping(., unique_base)];
						attribute<geometries/rdc_mm>        geometry_mm	            := rjoin(identificatie, ../identificatie, ../geometry_mm);
						attribute<geometries/rdc>           geometry                := rjoin(identificatie, ../identificatie, ../geometry);
						attribute<m2>                       oppervlakte             := last(../oppervlakte, ../unique_rel);
						attribute<string>                   status                  := last(../status, ../unique_rel);
						attribute<string>                   pand_id_geom            := last(../pand_id_geom, ../unique_rel);
						
						container META
						{
							attribute<string>               STATUS       (..)       := last(.../STATUS, .../unique_rel);
							attribute<int32>                BEGINDATUM   (..)       := last(.../BEGINDATUM, .../unique_rel);
							attribute<int32>                EINDDATUM    (..)       := last(.../EINDDATUM, .../unique_rel);
							attribute<bool>                 IS_INACTIEF  (..)       := last(.../IS_INACTIEF, .../unique_rel);
							attribute<bool>                 IS_CORRECTIE (..)       := last(.../IS_CORRECTIE, .../unique_rel);
						}
					}
				}
				
				
			
				unit<uint32> ingetrokken := Subset(
				vbos/gebruiksdoelen/woon/status == 'Verblijfsobject ingetrokken' 
				|| vbos/gebruiksdoelen/woon/status == 'Niet gerealiseerd verblijfsobject' 
				// && vbos/gebruiksdoelen/woon/meta/BEGINDATUM <= 20170101[int32]
				)
				,	DialogType = "Map"
				,	DialogData = "geometry_mm"
				, 	FreeData = "False"
				{
					attribute<geometries/rdc_mm>        geometry_mm    := ../geometry_mm[nr_OrgEntity];
					attribute<geometries/rdc>         	geometry       := ../geometry[nr_OrgEntity];
					attribute<string>                   identificatie  := ../identificatie[nr_OrgEntity];
					attribute<m2>                       oppervlakte    := ../oppervlakte[nr_OrgEntity];
					attribute<string>                   status         := ../status[nr_OrgEntity];
					attribute<int32>                    begindatum     := ../meta/begindatum[nr_OrgEntity];
					attribute<int32>                    einddatum      := ../meta/einddatum[nr_OrgEntity];
					attribute<string>                   pand_id_geom   := ../pand_id_geom[nr_OrgEntity];
					attribute<unique>                   unique_rel     := rlookup(identificatie, unique/identificatie);
					attribute<bool>                     IS_INACTIEF    := ../meta/IS_INACTIEF[nr_OrgEntity];
				
					unit<uint32> unique_base  := unique(identificatie);
					unit<uint32> unique      := TiledUnit(1000000[unique_base])
					,	DialogType  = "Map"
					,	DialogData  = "geometry_mm"
					,	FreeData    = "False"
					{
						attribute<uint32>                   count                   := pcount(../unique_rel);
						attribute<string>                   identificatie           := unique_base/values[mapping(., unique_base)];
						attribute<geometries/rdc_mm>        geometry_mm	            := rjoin(identificatie, ../identificatie, ../geometry_mm);
						attribute<geometries/rdc>           geometry                := rjoin(identificatie, ../identificatie, ../geometry);
						attribute<m2>                       oppervlakte             := last(../oppervlakte, ../unique_rel);
						attribute<string>                   status                  := last(../status, ../unique_rel);
						attribute<string>                   pand_id_geom            := last(../pand_id_geom, ../unique_rel);
						
						container META
						{
							attribute<string>               STATUS       (..)       := last(.../STATUS, .../unique_rel);
							attribute<int32>                BEGINDATUM   (..)       := last(.../BEGINDATUM, .../unique_rel);
							attribute<int32>                EINDDATUM    (..)       := last(.../EINDDATUM, .../unique_rel);
							attribute<bool>                 IS_INACTIEF  (..)       := last(.../IS_INACTIEF, .../unique_rel);
							attribute<bool>                 IS_CORRECTIE (..)       := last(.../IS_CORRECTIE, .../unique_rel);
						}
					}
				}
			}
			unit<uint32> niet_woon := Subset(vbos/gebruiksdoel != /typeringen/vbo_gebruiksdoel/V/woon)
			,	DialogType = "Map"
			,	DialogData = "geometry_mm"
			, 	FreeData = "False"
			{
				attribute<geometries/rdc_mm>      geometry_mm         := vbos/geometry_mm[nr_OrgEntity];
				attribute<geometries/rdc>         geometry            := vbos/geometry[nr_OrgEntity];
				attribute<string>                 identificatie       := vbos/identificatie[nr_OrgEntity];
				attribute<m2>                     oppervlakte         := vbos/oppervlakte[nr_OrgEntity];
				attribute<string>                 status              := vbos/meta/status[nr_OrgEntity];
				attribute<string>                 pand_id_geom        := vbos/pand_id_geom[nr_OrgEntity];
				
				container meta
				{
					attribute<string> STATUS       (..) := vbos/meta/STATUS[nr_OrgEntity];
					attribute<INT32>  BEGINDATUM   (..) := vbos/meta/BEGINDATUM[nr_OrgEntity];
					attribute<INT32>  EINDDATUM    (..) := vbos/meta/EINDDATUM[nr_OrgEntity];
					attribute<bool>   IS_INACTIEF  (..) := vbos/meta/IS_INACTIEF[nr_OrgEntity];
					
					attribute<bool>   WasGestart   (..) := BEGINDATUM < /Analyse/sloop_nieuwbouw_volledige_bag/prikeind[int32];
					attribute<bool>   WasBeeindigd (..) := EINDDATUM  < /Analyse/sloop_nieuwbouw_volledige_bag/prikeind && EINDDATUM > 0i;
				}
				
				unit<uint32> actueel := Subset(
				(vbos/gebruiksdoelen/niet_woon/status == 'Verblijfsobject buiten gebruik' || vbos/gebruiksdoelen/niet_woon/status == 'Verblijfsobject in gebruik' || vbos/gebruiksdoelen/niet_woon/status == 'Verblijfsobject in gebruik (niet ingemeten)') 
				&& vbos/gebruiksdoelen/niet_woon/meta/EINDDATUM == 0[int32] 
				&& !vbos/gebruiksdoelen/niet_woon/meta/IS_INACTIEF
				)
				,	DialogType = "Map"
				,	DialogData = "geometry_mm"
				, 	FreeData = "False"
				{
					attribute<geometries/rdc_mm>        geometry_mm    := ../geometry_mm[nr_OrgEntity];
					attribute<geometries/rdc>         	geometry       := ../geometry[nr_OrgEntity];
					attribute<string>                   identificatie  := ../identificatie[nr_OrgEntity];
					attribute<m2>                       oppervlakte    := ../oppervlakte[nr_OrgEntity];
					attribute<string>                   status         := ../status[nr_OrgEntity];
					attribute<int32>                    begindatum     := ../meta/begindatum[nr_OrgEntity];
					attribute<int32>                    einddatum      := ../meta/einddatum[nr_OrgEntity];
					attribute<string>                   pand_id_geom   := ../pand_id_geom[nr_OrgEntity];
					attribute<unique>                   unique_rel     := rlookup(identificatie, unique/identificatie);
					
					unit<uint32> einddatum_uq := unique(einddatum);
					unit<uint32> unique_base  := unique(actueel/identificatie);
					unit<uint32> unique      := TiledUnit(1000000[unique_base])
					,	DialogType  = "Map"
					,	DialogData  = "geometry_mm"
					,	FreeData    = "False"
					{
						attribute<uint32>                   count                   := pcount(../unique_rel);
						attribute<string>                   identificatie           := unique_base/values[mapping(., unique_base)];
						attribute<geometries/rdc_mm>        geometry_mm	(polygon)   := rjoin(identificatie, ../identificatie, ../geometry_mm);
						attribute<geometries/rdc>           geometry (polygon)      := rjoin(identificatie, ../identificatie, ../geometry);
						attribute<jaar>                     bouwjaar                := last(../bouwjaar, ../unique_rel);
						attribute<m2>                       oppervlakte             := last(../oppervlakte, ../unique_rel);
						attribute<string>                   status                  := last(../status, ../unique_rel);
						attribute<string>                   pand_id_geom            := last(../pand_id_geom, ../unique_rel);
						
						container META
						{
							attribute<string>               STATUS       (..)       := last(.../STATUS, .../unique_rel);
							attribute<int32>                BEGINDATUM   (..)       := last(.../BEGINDATUM, .../unique_rel);
							attribute<int32>                EINDDATUM    (..)       := last(.../EINDDATUM, .../unique_rel);
							attribute<bool>                 IS_INACTIEF  (..)       := last(.../IS_INACTIEF, .../unique_rel);
							attribute<bool>                 IS_CORRECTIE (..)       := last(.../IS_CORRECTIE, .../unique_rel);
						}
					}
				}
				
				unit<uint32> ingetrokken := Subset(
				vbos/gebruiksdoelen/niet_woon/status == 'Verblijfsobject ingetrokken' 
				&& vbos/gebruiksdoelen/niet_woon/meta/BEGINDATUM <= 20170101[int32]
				)
				,	DialogType = "Map"
				,	DialogData = "geometry_mm"
				, 	FreeData = "False"
				{
					attribute<geometries/rdc_mm>        geometry_mm    := ../geometry_mm[nr_OrgEntity];
					attribute<geometries/rdc>         	geometry       := ../geometry[nr_OrgEntity];
					attribute<string>                   identificatie  := ../identificatie[nr_OrgEntity];
					attribute<m2>                       oppervlakte    := ../oppervlakte[nr_OrgEntity];
					attribute<string>                   status         := ../status[nr_OrgEntity];
					attribute<int32>                    begindatum     := ../meta/begindatum[nr_OrgEntity];
					attribute<int32>                    einddatum      := ../meta/einddatum[nr_OrgEntity];
					attribute<string>                   pand_id_geom   := ../pand_id_geom[nr_OrgEntity];
					attribute<unique>                   unique_rel     := rlookup(identificatie, unique/identificatie);
					attribute<bool>                     IS_INACTIEF    := ../meta/IS_INACTIEF[nr_OrgEntity];
				
					unit<uint32> unique_base  := unique(actueel/identificatie);
					unit<uint32> unique      := TiledUnit(1000000[unique_base])
					,	DialogType  = "Map"
					,	DialogData  = "geometry_mm"
					,	FreeData    = "False"
					{
						attribute<uint32>                   count                   := pcount(../unique_rel);
						attribute<string>                   identificatie           := unique_base/values[mapping(., unique_base)];
						attribute<geometries/rdc_mm>        geometry_mm	(polygon)   := rjoin(identificatie, ../identificatie, ../geometry_mm);
						attribute<geometries/rdc>           geometry (polygon)      := rjoin(identificatie, ../identificatie, ../geometry);
						attribute<jaar>                     bouwjaar                := last(../bouwjaar, ../unique_rel);
						attribute<m2>                       oppervlakte             := last(../oppervlakte, ../unique_rel);
						attribute<string>                   status                  := last(../status, ../unique_rel);
						attribute<string>                   pand_id_geom            := last(../pand_id_geom, ../unique_rel);
						
						container META
						{
							attribute<string>               STATUS       (..)       := last(.../STATUS, .../unique_rel);
							attribute<int32>                BEGINDATUM   (..)       := last(.../BEGINDATUM, .../unique_rel);
							attribute<int32>                EINDDATUM    (..)       := last(.../EINDDATUM, .../unique_rel);
							attribute<bool>                 IS_INACTIEF  (..)       := last(.../IS_INACTIEF, .../unique_rel);
							attribute<bool>                 IS_CORRECTIE (..)       := last(.../IS_CORRECTIE, .../unique_rel);
						}
					}
				}
			}
		}
		// container results:= 
			// ='datum_selectie(vbos, prikeind, '
			// + (geometries/selectie_extent/isActive 
					// ?  'True,  src/GerelateerdPandInSelectieExtent'
					// :  'False'
				// )
			// + ')'

		// {
			// unit<uint32> selectie
			// {
				// attribute<geometries/rdc_mm> geometry_mm_raw_or_centroid := MakeDefined(domain/geometry_mm, domain/centroid_mm)[selectie/nr_OrgEntity]; // Op snapshot moment willen we alleen punt geometrien hebben voor vbo's
				// attribute<int32> X:= PointCol(geometry_mm_raw_or_centroid);
				// attribute<int32> Y:= PointRow(geometry_mm_raw_or_centroid);
				// attribute<geometries/rdc_mm> geometry_mm:= 
					   // X >=  -8000000i &&  X <= 300000000i
					// && Y >= 289000000i &&  Y <= 629000000i
					// ?	geometry_mm_raw_or_centroid
					// :	point(0i/0i, 0i/0i, geometries/rdc_mm);
				/////////Op snapshot moment willen we alleen geometrien in NL (https://nl.wikipedia.org/wiki/Rijksdriehoeksco%C3%B6rdinaten), dit ten behoeve van gemiddelde bepalingen (denk aan coordinaten voor geocode)

				// attribute<string> identificatie       := domain/identificatie[selectie/nr_OrgEntity];
				// attribute<int32>  oppervlakte         := domain/oppervlakte[selectie/nr_OrgEntity];
				// attribute<string> nummeraanduiding_id := domain/nummeraanduiding_id[selectie/nr_OrgEntity];
				// attribute<unique> unique_rel          := rlookup(identificatie,unique/identificatie);

			// container gebruiksdoelen :=
				// for_each_nedv(
					// typeringen/vbo_gebruiksdoel/Label_ti
					// , 'domain/gebruiksdoelen/' + typeringen/vbo_gebruiksdoel/Label_ti + '[selectie/nr_OrgEntity]'
					// , selectie
					// , bool
				// );
			// }

			// unit<uint32> unique_base := unique(selectie/identificatie);
			// unit<uint32> unique      := TiledUnit(1000000[unique_base])
			// ,	StorageName = "= SnapshotDir + '/vbo.fss'"
			// ,	DialogType  = "Map"
			// ,	DialogData  = "geometry_mm"
			// ,	FreeData    = "False"
			// {
				// attribute<uint32> count := pcount(selectie/unique_rel), DisableStorage = "True";

				// attribute<geometries/rdc_mm>   geometry_mm         := rjoin(identificatie, selectie/identificatie, selectie/geometry_mm);
				// attribute<string>              identificatie       := unique_base/values[mapping(unique, unique_base)];
				// attribute<int32>               oppervlakte         := last(selectie/oppervlakte, selectie/unique_rel);
				// attribute<string>              nummeraanduiding_id := last(selectie/nummeraanduiding_id, selectie/unique_rel);

				// attribute<pand/results/unique> pand_rel            := point_in_polygon(geometry_mm, pand/results/unique/geometry_mm);
				// attribute<string>              pand_id_geom        := pand/results/unique/identificatie[pand_rel];

				// container gebruiksdoelen:=
					// for_each_nedv(
						// typeringen/vbo_gebruiksdoel/Label_ti
						// , 'last(selectie/gebruiksdoelen/' + typeringen/vbo_gebruiksdoel/Label_ti + ', selectie/unique_rel)'
						// , unique
						// , bool
					// );

				// container meta := meta_template(selectie, unique);

				// unit<uint32> gerelateerdPand := Subset(isDefined(rlookup(src/gerelateerdPand/parent_rel,selectie/nr_OrgEntity))) // is een 1->0..n relatie
				// {
					// attribute<string> pand_id      := src/gerelateerdPand/pand_id[nr_OrgEntity];
					// attribute<string> vbo_id       := src/gerelateerdPand/vbo_id[nr_OrgEntity];
					// attribute<uint32> nr_OrgEntity : DisableStorage = "True";
				// }

				// unit<uint32> nevenadres:= Subset(isDefined(rlookup(src/nevenadres/parent_rel,selectie/nr_OrgEntity))) // is een 1->0..n relatie
				// {
					// attribute<string> nummeraanduiding_id := src/nevenadres/nummeraanduiding_id[nr_OrgEntity];
					// attribute<string> vbo_id              := src/nevenadres/vbo_id[nr_OrgEntity];
					// attribute<uint32> nr_OrgEntity        : DisableStorage = "True";
				// }
			// }
		// }
	
	}
/*


	// unit<uint32> gesloopte_panden := Subset(panden_met_vbo/sloop_begindatum_tussen_12_20/meta/STATUS == 'Pand gesloopt' || panden_met_vbo/sloop_begindatum_tussen_12_20/meta/STATUS == 'Sloopvergunning verleend')
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<uint32>		ID			:= id(.);
		// attribute<geometries/rdc_mm> 	geometry_mm (polygon) 	:= panden_met_vbo/sloop_begindatum_tussen_12_17/geometry_mm[nr_OrgEntity];
		// attribute<geometries/rdc> 	geometry (polygon) 	:= panden_met_vbo/sloop_begindatum_tussen_12_17/geometry[nr_OrgEntity];
		// attribute<string>            	identificatie		:= panden_met_vbo/sloop_begindatum_tussen_12_17/identificatie[nr_OrgEntity];
		// attribute<jaar>     		bouwjaar             	:= panden_met_vbo/sloop_begindatum_tussen_12_17/bouwjaar[nr_OrgEntity];
		// attribute<gesloopte_panden>      	pand_vbo_rel(vbos) 	:= point_in_polygon(vbos/geometry, geometry);
		// attribute<gesloopte_panden>      	pand_vbo_rel_woon(vbos/gebruiksdoelen/woon/ingetrokken) 	:= point_in_polygon(vbos/gebruiksdoelen/woon/ingetrokken/geometry, geometry);
		// attribute<gesloopte_panden>      	pand_vbo_rel_niet_woon(vbos/gebruiksdoelen/niet_woon/ingetrokken) 	:= point_in_polygon(vbos/gebruiksdoelen/niet_woon/ingetrokken/geometry, geometry);
		// attribute<uint32>		pand_vbo_rel_sloop	:= rlookup(id, pand_vbo_rel);
		// attribute<uint32>		sloop_nieuwbouw_rel	:= rlookup(id, sloop_nieuwbouw_intersect/first_rel);
		
		// attribute<uint32> pand_functie_woon := (count_vbo_wonen >= 1) ? 1[uint32] : 0[uint32];
		// attribute<uint32> pand_functie_anders := (count_vbo_niet_wonen == 0) ? 1[uint32] : 0[uint32];

		// attribute<uint32> count_vbo_wonen := count(vbos/gebruiksdoelen/woon/ingetrokken/geometry, pand_vbo_rel_woon);
		// attribute<uint32> count_vbo_niet_wonen := count(vbos/gebruiksdoelen/niet_woon/ingetrokken/geometry, pand_vbo_rel_niet_woon);

		// container gebruiksdoelen :=
			// for_each_nedv(
				// typeringen/vbo_gebruiksdoel/name
				// , 'rjoin(pand_vbo_rel_sloop, vbos/ID, vbos/gebruiksdoelen_bool/'+typeringen/vbo_gebruiksdoel/name+')'
				// , gesloopte_panden
				// , bool
			// );
	// }
	
	// unit<uint32> ingebruik_panden := Subset(panden_met_vbo/meta/STATUS == 'Pand in gebruik' || panden_met_vbo/meta/STATUS == 'Pand in gebruik (niet ingemeten)' || panden_met_vbo/meta/STATUS == 'Pand buiten gebruik')
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<uint32>		ID			:= id(.);
		// attribute<geometries/rdc_mm> 	geometry_mm (polygon) 	:= panden_met_vbo/geometry_mm[nr_OrgEntity];
		// attribute<geometries/rdc> 	geometry (polygon) 	:= panden_met_vbo/geometry[nr_OrgEntity];
		// attribute<string>            	identificatie		:= panden_met_vbo/identificatie[nr_OrgEntity];
		// attribute<jaar>     		bouwjaar             	:= panden_met_vbo/bouwjaar[nr_OrgEntity];
		// attribute<uint32>		sloop_nieuwbouw_rel	:= rlookup(id, sloop_nieuwbouw_intersect/second_rel);
		
		// container pand_vbo_functie_link
		// {
			// attribute<uint32>		pand_vbo_rel_id (vbos)	:= rlookup(vbos/pand_id, ingebruik_panden/identificatie);
			// attribute<uint32>		pand_vbo_rel_woon (vbos/gebruiksdoelen/woon/actueel/unique)	:= rlookup(vbos/gebruiksdoelen/woon/actueel/unique/pand_id, ingebruik_panden/identificatie);
			// attribute<uint32>		pand_vbo_rel_niet_woon (vbos/gebruiksdoelen/niet_woon/actueel/unique)	:= rlookup(vbos/gebruiksdoelen/niet_woon/actueel/unique/pand_id, ingebruik_panden/identificatie);
			
			// attribute<uint32>		wonen (vbos/gebruiksdoelen/woon/actueel/unique)		:= IsDefined(pand_vbo_rel_woon) ? 1[uint32] : (0/0)[uint32];
			// attribute<uint32>		niet_wonen (vbos/gebruiksdoelen/niet_woon/actueel/unique)	:= IsDefined(pand_vbo_rel_niet_woon)  ? 1[uint32] : (0/0)[uint32];
		// }
	
		// attribute<uint32> pand_functie_woon 		:= (count_vbo_wonen >= 1) ? 1[uint32] : 0[uint32];
		// attribute<uint32> pand_functie_anders 		:= (count_vbo_wonen == 0) ? 1[uint32] : 0[uint32];
	
		// attribute<uint32> count_vbo_wonen 		:= count(pand_vbo_functie_link/wonen[uint32], pand_vbo_functie_link/pand_vbo_rel_woon);
		// attribute<uint32> count_vbo_niet_wonen 		:= count(pand_vbo_functie_link/niet_wonen[uint32], pand_vbo_functie_link/pand_vbo_rel_niet_woon);
	
		// container meta
		// {
			// attribute<string> 	STATUS         		(ingebruik_panden) := panden_met_vbo/meta/STATUS[nr_OrgEntity];
			// attribute<INT32>  	BEGINDATUM    		(ingebruik_panden) := panden_met_vbo/meta/BEGINDATUM[nr_OrgEntity];
			// attribute<INT32>  	EINDDATUM      		(ingebruik_panden) := panden_met_vbo/meta/EINDDATUM[nr_OrgEntity];
			// attribute<INT32>  	DOCUMENTDATUM  	(ingebruik_panden) := panden_met_vbo/meta/DOCUMENTDATUM[nr_OrgEntity];
			// attribute<string> 	DOCUMENTNUMMER 	(ingebruik_panden) := panden_met_vbo/meta/DOCUMENTNUMMER[nr_OrgEntity];
			// attribute<Bool >  	IS_ONDERZOEK   		(ingebruik_panden) := panden_met_vbo/meta/IS_ONDERZOEK[nr_OrgEntity];
			// attribute<Bool >  	IS_CORRECTIE  	 	(ingebruik_panden) := panden_met_vbo/meta/IS_CORRECTIE[nr_OrgEntity];
			// attribute<Bool >  	IS_INACTIEF  		(ingebruik_panden) := panden_met_vbo/meta/IS_INACTIEF[nr_OrgEntity];
		// }	
	// }
	
	// unit<uint32> grijze_panden := Subset(panden_met_vbo/meta/STATUS == 'Bouw gestart' || panden_met_vbo/meta/STATUS == 'Bouwvergunning verleend' || panden_met_vbo/meta/STATUS == 'Niet gerealiseerd pand')
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<geometries/rdc_mm> 	geometry_mm (polygon) 	:= panden_met_vbo/geometry_mm[nr_OrgEntity];
		// attribute<string>            	identificatie		:= panden_met_vbo/identificatie[nr_OrgEntity];
		// attribute<jaar>     		bouwjaar             	:= panden_met_vbo/bouwjaar[nr_OrgEntity];
	// }
	
	// unit<uint32> 		sloop_nieuwbouw_intersect 		:= overlay_polygon(gesloopte_panden/geometry_mm, ingebruik_panden/geometry_mm), 	FreeData = "False";
	
	
	// unit<uint32> SN_nieuwbouw := Subset(IsDefined(ingebruik_panden/sloop_nieuwbouw_rel))
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<uint32>		ID			:= id(.);
		// attribute<geometries/rdc_mm> 	geometry_mm (polygon) 	:= ingebruik_panden/geometry_mm[nr_OrgEntity];
		// attribute<geometries/rdc> 	geometry (polygon) 	:= ingebruik_panden/geometry[nr_OrgEntity];
		// attribute<string>            	identificatie		:= ingebruik_panden/identificatie[nr_OrgEntity];
		// attribute<jaar>     		bouwjaar             	:= ingebruik_panden/bouwjaar[nr_OrgEntity];
		// attribute<uint32>		sloop_nieuwbouw_rel	:= ingebruik_panden/sloop_nieuwbouw_rel[nr_OrgEntity];
		// attribute<SN_nieuwbouw>      	pand_vbo_rel(vbos) 	:= point_in_polygon(vbos/geometry, geometry);
		// attribute<uint32>		pand_vbo_rel_SN		:= rlookup(id, pand_vbo_rel);
		
		// attribute<uint32> 		woon 			:= ingebruik_panden/pand_functie_woon[nr_OrgEntity];
		// attribute<uint32> 		anders 			:= ingebruik_panden/pand_functie_anders[nr_OrgEntity];

		// container gebruiksdoelen :=
			// for_each_nedv(
				// typeringen/vbo_gebruiksdoel/name
				// , 'rjoin(pand_vbo_rel_SN, vbos/ID, vbos/gebruiksdoelen_bool/'+typeringen/vbo_gebruiksdoel/name+')'
				// , SN_nieuwbouw
				// , bool
			// );
	
		// container meta
		// {
			// attribute<string> STATUS         (SN_nieuwbouw) := ingebruik_panden/meta/STATUS[nr_OrgEntity];
			// attribute<INT32>  BEGINDATUM    (SN_nieuwbouw) := ingebruik_panden/meta/BEGINDATUM[nr_OrgEntity];
			// attribute<INT32>  EINDDATUM      (SN_nieuwbouw) := ingebruik_panden/meta/EINDDATUM[nr_OrgEntity];
			// attribute<INT32>  DOCUMENTDATUM  (SN_nieuwbouw) := ingebruik_panden/meta/DOCUMENTDATUM[nr_OrgEntity];
			// attribute<string> DOCUMENTNUMMER (SN_nieuwbouw) := ingebruik_panden/meta/DOCUMENTNUMMER[nr_OrgEntity];
			// attribute<Bool >  IS_ONDERZOEK   (SN_nieuwbouw) := ingebruik_panden/meta/IS_ONDERZOEK[nr_OrgEntity];
			// attribute<Bool >  IS_CORRECTIE   (SN_nieuwbouw) := ingebruik_panden/meta/IS_CORRECTIE[nr_OrgEntity];
			// attribute<Bool >  IS_INACTIEF   (SN_nieuwbouw) := ingebruik_panden/meta/IS_INACTIEF[nr_OrgEntity];
		// }
	// }

	// unit<uint32> SN_sloop := Subset(IsDefined(gesloopte_panden/sloop_nieuwbouw_rel))
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<uint32>		ID			:= id(.);
		// attribute<geometries/rdc_mm> 	geometry_mm (polygon) 	:= gesloopte_panden/geometry_mm[nr_OrgEntity];
		// attribute<geometries/rdc> 	geometry (polygon) 	:= gesloopte_panden/geometry[nr_OrgEntity];
		// attribute<string>            	identificatie		:= gesloopte_panden/identificatie[nr_OrgEntity];
		// attribute<jaar>     		bouwjaar             	:= gesloopte_panden/bouwjaar[nr_OrgEntity];
		// attribute<uint32>		sloop_nieuwbouw_rel	:= gesloopte_panden/sloop_nieuwbouw_rel[nr_OrgEntity];
		// attribute<SN_sloop>      		pand_vbo_rel(vbos) 	:= point_in_polygon(vbos/geometry, geometry);
		// attribute<uint32>		pand_vbo_rel_SN		:= rlookup(id, pand_vbo_rel);

		// attribute<uint32> 		woon 			:= gesloopte_panden/woon[nr_OrgEntity];
		// attribute<uint32> 		anders 			:= gesloopte_panden/anders[nr_OrgEntity];
		
		// container gebruiksdoelen :=
			// for_each_nedv(
				// typeringen/vbo_gebruiksdoel/name
				// , 'rjoin(pand_vbo_rel_SN, vbos/ID, vbos/gebruiksdoelen_bool/'+typeringen/vbo_gebruiksdoel/name+')'
				// , SN_sloop
				// , bool
			// );
		
		// container meta
		// {
			// attribute<string> STATUS         (SN_sloop) := gesloopte_panden/meta/STATUS[nr_OrgEntity];
			// attribute<INT32>  BEGINDATUM    (SN_sloop) := gesloopte_panden/meta/BEGINDATUM[nr_OrgEntity];
			// attribute<INT32>  EINDDATUM      (SN_sloop) := gesloopte_panden/meta/EINDDATUM[nr_OrgEntity];
			// attribute<INT32>  DOCUMENTDATUM  (SN_sloop) := gesloopte_panden/meta/DOCUMENTDATUM[nr_OrgEntity];
			// attribute<string> DOCUMENTNUMMER (SN_sloop) := gesloopte_panden/meta/DOCUMENTNUMMER[nr_OrgEntity];
			// attribute<Bool >  IS_ONDERZOEK   (SN_sloop) := gesloopte_panden/meta/IS_ONDERZOEK[nr_OrgEntity];
			// attribute<Bool >  IS_CORRECTIE   (SN_sloop) := gesloopte_panden/meta/IS_CORRECTIE[nr_OrgEntity];
			// attribute<Bool >  IS_INACTIEF   (SN_sloop) := gesloopte_panden/meta/IS_INACTIEF[nr_OrgEntity];
		// }
	// }
		
	// unit<uint32> intersect_links := sloop_nieuwbouw_intersect
	// ,	DialogType = "Map"
	// ,	DialogData = "geometry_mm"
	// , 	FreeData = "False"
	// {
		// attribute<geometries/rdc_mm>	geometry_mm (polygon) 	:= sloop_nieuwbouw_intersect/geometry[geometries/rdc_mm];
		// attribute<uint32> 		intersect_id  		:= id(sloop_nieuwbouw_intersect);
		// attribute<uint32> 		intersect_sloop_rel 	:= sloop_nieuwbouw_intersect/first_rel;
		// attribute<uint32>		intersect_gebruik_rel 	:= sloop_nieuwbouw_intersect/second_rel;
		
		// attribute<uint32> 		sloop_woon  		:= rjoin(intersect_sloop_rel, gesloopte_panden/id, gesloopte_panden/pand_functie_woon);
		// attribute<uint32> 		sloop_anders  		:= rjoin(intersect_sloop_rel, gesloopte_panden/id, gesloopte_panden/pand_functie_anders);
		// attribute<uint32>		nieuwbouw_woon  	:= rjoin(intersect_gebruik_rel, ingebruik_panden/id, ingebruik_panden/pand_functie_woon);
		// attribute<uint32> 		nieuwbouw_anders  	:= rjoin(intersect_gebruik_rel, ingebruik_panden/id, ingebruik_panden/pand_functie_anders);
		
		// attribute<uint32> 		sloop_woon_count 	:= rjoin(intersect_sloop_rel, gesloopte_panden/id, gesloopte_panden/count_vbo_wonen);
		// attribute<uint32> 		sloop_anders_count  	:= rjoin(intersect_sloop_rel, gesloopte_panden/id, gesloopte_panden/count_vbo_niet_wonen);
		// attribute<uint32>		nieuwbouw_woon_count 	:= rjoin(intersect_gebruik_rel, ingebruik_panden/id, ingebruik_panden/count_vbo_wonen);
		// attribute<uint32> 		nieuwbouw_anders_count 	:= rjoin(intersect_gebruik_rel, ingebruik_panden/id, ingebruik_panden/count_vbo_niet_wonen);
		
		// container panden
		// {
			// attribute<uint32> 		woon_woon (intersect_links) := (sloop_woon == nieuwbouw_woon) ? 1[uint32] : 0[uint32];
			// attribute<uint32> 		woon_anders (intersect_links) := (sloop_woon == 1 && nieuwbouw_anders == 1) ? 1[uint32] : 0[uint32];
			// attribute<uint32> 		anders_woon (intersect_links) := (sloop_anders == 1 && nieuwbouw_woon == 1) ? 1[uint32] : 0[uint32];
			// attribute<uint32> 		anders_anders (intersect_links) := (sloop_anders == 1 && nieuwbouw_anders == 1) ? 1[uint32] : 0[uint32];
		// }
		
		// container vbos
		// {
			// attribute<uint32> 		woon_woon_origineel (intersect_links) 	:= panden/woon_woon ==  1 ? sloop_woon_count : 0[uint32];
			// attribute<uint32> 		woon_woon_nieuw (intersect_links)	:= panden/woon_woon ==  1 ? nieuwbouw_woon_count : 0[uint32];
			
			// attribute<uint32> 		woon_anders_origineel (intersect_links)	:= panden/woon_anders ==  1 ? sloop_woon_count : 0[uint32];
			// attribute<uint32> 		woon_anders_nieuw (intersect_links)	:= panden/woon_anders ==  1 ? nieuwbouw_anders_count : 0[uint32];
			
			// attribute<uint32> 		anders_woon_origineel (intersect_links)	:= panden/anders_woon ==  1 ? sloop_anders_count : 0[uint32];
			// attribute<uint32> 		anders_woon_nieuw (intersect_links)	:= panden/anders_woon ==  1 ? nieuwbouw_woon_count : 0[uint32];
			
			// attribute<uint32> 		anders_anders_origineel (intersect_links) 	:= panden/anders_anders ==  1 ? sloop_anders_count : 0[uint32];
			// attribute<uint32> 		anders_anders_nieuw (intersect_links) 	:= panden/anders_anders ==  1 ? nieuwbouw_anders_count : 0[uint32];
		// }
	// }
	
	// template datum_selectie
	// {
		// unit<uint32>              domain;
		// parameter<eenheden/datum> prik_datum;
		// parameter<bool>           overig_filter_actief;
		// attribute<bool>           overig_filter(domain) := const(true,domain);
		
		// attribute<bool> WasGestart   (domain):= domain/meta/BEGINDATUM <= prik_datum;
		// attribute<bool> WasBeeindigd (domain):= domain/meta/EINDDATUM  <= prik_datum && domain/meta/EINDDATUM > 0i;

		// unit<uint32> selectie:= 
			// = 'Subset(WasGestart && not(WasBeeindigd) && not(domain/Meta/IS_INACTIEF)' +
						// (overig_filter_actief 
							// ? '&& overig_filter' 
							// : '') 
			// + ')'
		// ,	DialogType = "Map"
		// ,	DialogData = "geometry_mm"
		// {
			// container meta
			// {
				// attribute<string>         STATUS         (selectie):= domain/meta/STATUS[nr_OrgEntity];
				// attribute<eenheden/datum> BEGINDATUM     (selectie):= domain/meta/BEGINDATUM[nr_OrgEntity];
				// attribute<eenheden/datum> EINDDATUM      (selectie):= domain/meta/EINDDATUM[nr_OrgEntity];
				// attribute<eenheden/datum> DOCUMENTDATUM  (selectie):= domain/meta/DOCUMENTDATUM[nr_OrgEntity];
				// attribute<string>         DOCUMENTNUMMER (selectie):= domain/meta/DOCUMENTNUMMER[nr_OrgEntity];

				// attribute<bool>           IS_ONDERZOEK   (selectie):= domain/meta/IS_ONDERZOEK[nr_OrgEntity];
				// attribute<bool>           IS_CORRECTIE   (selectie):= domain/meta/IS_CORRECTIE[nr_OrgEntity];
				// attribute<bool>           IS_INACTIEF    (selectie):= domain/meta/IS_INACTIEF[nr_OrgEntity];
			// }
		// }
	// }
	
	// template BepaalInSelectieExtent
	// {
		// unit<uint32> domain;
		// attribute<geometries/rdc_mm> geometry_mm (polygon, domain);

		// attribute<geometries/rdc_mm> lowerbound (domain) := lower_bound(geometry_mm);
		// attribute<geometries/rdc_mm> upperbound (domain) := upper_bound(geometry_mm);

		// attribute<eenheden/mm> x_min (domain) := PointCol(lowerbound);
		// attribute<eenheden/mm> x_max (domain) := PointCol(upperbound);
		// attribute<eenheden/mm> y_min (domain) := PointRow(lowerbound);
		// attribute<eenheden/mm> y_max (domain) := PointRow(upperbound);
		
		// attribute<bool> result (domain) :=
			   // x_max >= geometries/selectie_extent/x_min
			// && x_min <= geometries/selectie_extent/x_max
			// && y_max >= geometries/selectie_extent/y_min
			// && y_min <= geometries/selectie_extent/y_max;
	// }
*/
}
