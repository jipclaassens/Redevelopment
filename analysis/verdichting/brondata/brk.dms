container BRK
{ 
	// unit<uint32> Panden_met_vbo := Analyse/sloop_nieuwbouw_volledige_bag/panden_met_vbo;
	unit<uint32>      RegioUnit_Aggl      := Brondata/RegioIndelingen/gemeente/Agglomeration_uq;
	unit<uint32>      RegioUnit_AMS       := Brondata/RegioIndelingen/Gemeente/Amsterdam;
	
	
	unit<uint32> Perceel_GML 
	:	StorageName     = "='%SourceDataDir%/BRK/'+Parameters/BRK_file_date+'/gml/kadastralekaart_perceel.gml'"
	, 	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	,	DialogData      = "rdc"
	{
		
	}
	
	unit<uint32> Make_Perceel_FSS := Perceel_GML
	,	StorageName     = "='%SourceDataDir%/BRK/'+Parameters/BRK_file_date+'/fss/perceel.fss'"
	{
		attribute<rdc>      geometry    (poly)   := Perceel_GML/geometry;
		attribute<int64>    identificatie        := Perceel_GML/identificatie;
		attribute<string>   beginGeldigheid      := Perceel_GML/beginGeldigheid;
		attribute<string>   TijdstipRegistratie  := Perceel_GML/TijdstipRegistratie;
		attribute<int32>    Volgnummer           := Perceel_GML/Volgnummer;
		attribute<string>   Code                 := Perceel_GML/Code;
		attribute<string>   Waarde               := Perceel_GML/Waarde;
		attribute<string>   Sectie               := Perceel_GML/Sectie;
		attribute<int32>    Perceelnummer        := Perceel_GML/Perceelnummer;
		attribute<float64>  PerceelnummerRotatie := Perceel_GML/PerceelnummerRotatie;
	}
	
	unit<uint32> Perceel
	:	StorageName     = "='%SourceDataDir%/BRK/'+Parameters/BRK_file_date+'/fss/perceel.fss'"
	, 	StorageReadOnly = "true"
	{
		attribute<rdc>      geometry    (poly);
		attribute<int64>    identificatie;
		attribute<string>   beginGeldigheid;
		attribute<string>   TijdstipRegistratie;
		attribute<int32>    Volgnummer;
		attribute<string>   Code;
		attribute<string>   Waarde;
		attribute<string>   Sectie;
		attribute<int32>    Perceelnummer;
		attribute<float64>  PerceelnummerRotatie;
		
		attribute<RegioIndelingen/Corop> COROP_rel := point_in_polygon(centroid_or_mid(geometry), RegioIndelingen/Corop/geometry);
		
		// attribute<bool>     Is_SA := IsDefined(point_in_polygon(centroid_or_mid(geometry), /geometries/selection_polygon/geometry));
		
		// unit<uint32> select := select_with_attr_by_cond(.,Is_SA)
		// {
			// unit<uint32> Cutout_roads := overlay_polygon(geometry[rdc_mm], /Brondata/BRT/NL_minus_wegen_Split/geometry); //rekentijd 1.44u, eventueel omdraaien geeft ander resultaat?
		// }
		
		unit<uint32> Cutout_roads := overlay_polygon(geometry[rdc_mm], /Brondata/BRT/NL_minus_wegen_Split/geometry)
		, StorageName = "='%LocalDataProjDir%/Temp/BRK/BRK_'+Parameters/BRK_file_date+'_minus_BRT_wegen_'+Parameters/BRT_file_date+'.fss'"
		{
			attribute<rdc_mm> geometry (poly);
		}
	}
	
	
	parameter<bool> Generate_AllCOROP := TRUE, ExplicitSuppliers = "=AsList('Perceel_PerCOROP/'+RegioIndelingen/COROP/name+'/Generate',';')";
	container Perceel_PerCOROP := 
		for_each_ne(
			RegioIndelingen/COROP/name
			, 'Perceel_PerCOROP_T('+quote(RegioIndelingen/Corop/name)+')'
		);
	
	unit<uint32> Perceel_minus_Roads_CombinedFromCOROP := ='union_unit('+AsItemList('Perceel_PerCOROP/'+RegioIndelingen/COROP/name+'/Read_Cutout_roads')+')'
	{
		attribute<rdc_mm> geometry (poly) := ='union_data(.,'+AsItemList('Perceel_PerCOROP/'+RegioIndelingen/COROP/name+'/Read_Cutout_roads/geometry')+')';
	}
	
	Template Perceel_PerCOROP_T
	{
		parameter<string> RegioName;
		parameter<RegioIndelingen/COROP>  RegioRel := rlookup(RegioName, RegioIndelingen/COROP/name);
		///
		
		unit<uint32> Perceel_PerCOROP := select_with_attr_by_cond(Perceel, Perceel/COROP_rel == RegioRel);
		unit<uint32> Roads_PerCOROP   := ='Brondata/BRT/Wegen_PerCOROP/'+RegioName+'/NL_minus_wegen_Split';
		
		unit<uint32> Cutout_roads := overlay_polygon(Perceel_PerCOROP/geometry[rdc_mm], Roads_PerCOROP/geometry)
		, StorageName = "='%LocalDataProjDir%/Temp/BRK/PerCorop/'+RegioName+'/BRK_'+Parameters/BRK_file_date+'_minus_BRT_wegen_'+Parameters/BRT_file_date+'.fss'"
		{
			attribute<rdc_mm> geometry (poly);
		}
		unit<uint32> Read_Cutout_roads
		: StorageName = "='%LocalDataProjDir%/Temp/BRK/PerCorop/'+RegioName+'/BRK_'+Parameters/BRK_file_date+'_minus_BRT_wegen_'+Parameters/BRT_file_date+'.fss'"
		, StorageReadOnly = "true"
		{
			attribute<rdc_mm> geometry (poly);
		}
		
		parameter<bool> Generate := TRUE, ExplicitSuppliers = "Cutout_roads/geometry";
	}
	
	unit<uint32> Perceel_oud
	:	StorageName     = "%AltSourceDataDir%/BRK/20210203/fss/perceel.fss"
	,	StorageReadOnly = "True"
	{
		attribute<geometries/rdc>      geometry (poly);
		attribute<geometries/rdc_mm>   geometry_mm (poly) := geometry[geometries/rdc_mm];
		attribute<uint32>              PERCEELNUMMER;
		attribute<uint32>              SECTIE;
		attribute<geometries/rdc>      centroid                          := centroid_or_mid(geometry);
		attribute<NL_grid/domain>      NL_grid_domain_rel                := centroid[NL_grid/domain];
		attribute<.>                   per_grid (NL_grid/domain_10m)     := poly2grid(geometry, NL_grid/domain_10m);
		attribute<RegioUnit_Aggl>      Aggl_rel              := point_in_polygon(centroid, RegioUnit_Aggl/geometry);
		attribute<m2> area := area(geometry, m2);
		
		unit<uint32> inAggl := subset(IsDefined(Aggl_rel))
		, FreeData = "False"
		{
			attribute<geometries/rdc>     geometry (poly)       := ../geometry[nr_OrgEntity];
			attribute<geometries/rdc_mm>  geometry_mm (poly)    := geometry[geometries/rdc_mm];
		}
		
		unit<uint32> Read_inAggl_zonderwegen_SHP
		: StorageName = "%AltSourceDataDir%/BRK/20210203/Perceel_2021_minus_BRTwegenSpoor_20211021.shp"   
		, StorageType = "gdal.vect"
		, StorageReadOnly = "True"
		{
			attribute<geometries/rdc>     geometry (poly);
		}
		
		unit<uint32> Make_inAggl_zonderwegen_FSS := Read_inAggl_zonderwegen_SHP
		, StorageName = "%AltSourceDataDir%/BRK/20210203/Perceel_2021_minus_BRTwegen_20211021.fss"
		{
			attribute<geometries/rdc>     geometry (poly)    := Read_inAggl_zonderwegen_SHP/geometry;
		} 
		
		unit<uint32> inAggl_zonderwegen
		: StorageName = "%AltSourceDataDir%/BRK/20210203/Perceel_2021_minus_BRTwegen_20211021.fss"  
		, StorageReadOnly = "TRUE"
		{
			attribute<geometries/rdc>     geometry (poly);
			attribute<geometries/rdc_mm>  geometry_mm (poly) := geometry[geometries/rdc_mm];
			attribute<RegioUnit_Aggl>     Aggl_rel           := point_in_polygon(centroid_or_mid(geometry), RegioUnit_Aggl/geometry);
			
			container PerAggl :=
				for_each_ne(
					RegioUnit_Aggl/name
					, 'PerAggl_T('+quote(RegioUnit_Aggl/name)+', '+string(id(RegioUnit_Aggl))+'[RegioUnit_Aggl])'
				)
			{
				parameter<String> Generate_PerAggl := 'Ready',
					ExplicitSuppliers = "=AsList('PerAggl/'+RegioUnit_Aggl/name+'/Aggl_sub/single2multi_1/geometry_rd',';')";
			}
			
			Template PerAggl_T
			{
				parameter<string>         Aggl_name;
				parameter<RegioUnit_Aggl> Aggl_rel;
				
				unit<uint32> Aggl_sub := subset(inAggl_zonderwegen/Aggl_rel == Aggl_rel)
				{
					attribute<geometries/rdc>     geometry (poly)       := inAggl_zonderwegen/geometry[nr_OrgEntity];
					attribute<geometries/rdc_mm>  geometry_mm (poly)    := inAggl_zonderwegen/geometry_mm[nr_OrgEntity];
			
					attribute<rdc_mm>             deflate     (poly)    := bg_buffer_polygon(geometry_mm,  -parameters/supersmall_inflate, 8b);

					unit<uint32> single2multi_1 := split_polygon(./deflate)
					, StorageName = "='%LocalDataProjDir%/UnlinkedData/Perceel/Perceel_2021_Aggl_Clean_'+Aggl_name+'.fss'"
					{
						attribute<rdc_mm>            inflate     (poly)                := bg_buffer_polygon(geometry,  parameters/supersmall_inflate, 8b);
						attribute<geometries/rdc>    geometry_rd (poly)                := inflate[geometries/rdc];
					}
					unit<uint32> Read_FSS
					: StorageName = "='%LocalDataProjDir%/UnlinkedData/Perceel/Perceel_2021_Aggl_Clean_'+Aggl_name+'.fss'"
					, StorageReadOnly = "true"
					{
						attribute<geometries/rdc>    geometry_rd (poly);
					}
				}
			}

			parameter<String> Generate_Union := 'Ready',
				ExplicitSuppliers = "Union_Aggl/geometry_rd";

			unit<uint32> Union_Aggl := ='union_unit('+AsList('PerAggl/'+RegioUnit_Aggl/name+'/Aggl_sub/Read_FSS',',')+')'
			, StorageName = "%LocalDataProjDir%/UnlinkedData/Perceel/Perceel_2021_Aggl_Clean.fss"
			{
				attribute<geometries/rdc>    geometry_rd (poly) := ='union_data(.,'+AsList('PerAggl/'+RegioUnit_Aggl/name+'/Aggl_sub/Read_FSS/geometry_rd',',')+')';
			}
			
			unit<uint32> Read_Union_Aggl 
			: StorageName = "%LocalDataProjDir%/UnlinkedData/Perceel/Perceel_2021_Aggl_Clean.fss"
			, StorageReadOnly = "true"
			{
				attribute<geometries/rdc>    geometry_rd (poly);
				attribute<geometries/rdc_mm> geometry_mm (poly)                := geometry_rd[geometries/rdc_mm];
				attribute<string>            Label                             := 'Perceel_'+string(id(.));
				attribute<geometries/rdc>    centroid                          := centroid_or_mid(geometry_rd);
				attribute<NL_grid/domain>    NL_grid_domain_rel                := centroid[NL_grid/domain];
				attribute<.>                 per_grid_10m (NL_grid/domain_10m) := poly2grid(geometry_rd, NL_grid/domain_10m);
				attribute<RegioUnit_Aggl>    Aggl_rel                          := point_in_polygon(centroid, RegioUnit_Aggl/geometry);
				attribute<RegioUnit_Ams>     Ams_rel                           := point_in_polygon(centroid, RegioUnit_Ams/geometry);
				
				unit<uint32> sub := subset(IsDefined(Ams_rel))
				{
					attribute<geometries/rdc>    geometry_rd (poly) := ../geometry_rd[nr_OrgEntity];
					attribute<geometries/rdc_mm> geometry_mm (poly) := ../geometry_mm[nr_OrgEntity];
					attribute<geometries/rdc>    centroid           := ../centroid[nr_OrgEntity];
					attribute<NL_grid/domain>    NL_grid_domain_rel := ../NL_grid_domain_rel[nr_OrgEntity];
					attribute<RegioUnit_Aggl>    Aggl_rel           := ../Aggl_rel[nr_OrgEntity];
				}
			}
		}
	}

}
