container C
{
	unit<uint32> GrondproductieVariabelen0 := = 'union_unit('+AsItemList('ReadData/'+GrondproductieModelVarianten/name+'/Modelvariant')+')'
	{
		attribute<string> name := = 'union_data(.,'+AsItemList('ReadData/'+GrondproductieModelVarianten/name+'/Modelvariant/variabele')+')';
	}
	
	unit<uint32> GrondproductieVariabelen := unique(GrondproductieVariabelen0/name)
	{
		attribute<string> name := values;
		
		attribute<bool> IsControleVar :=
			id(.) == V/BerekeningssystematiekOnbekend ||
			id(.) == V/BronFakton                     ||
			id(.) == V/BoekwaardeOpgevoerd            ||
			id(.) == V/BoekwaardeOpgevoerdOnbekend    ||
			id(.) == V/OnvoorzienVerdeeld             ||
			id(.) == V/Vermenging;
		
		// Dit betreft de variabelen waarvoor de waarden (referentiewaarde of niet) duidelijk (gegeven) zijn. Dit itt tot de onzekere controlevariabelen (zie attribuut hieronder)
		attribute<string> DefaultWaarde :=
			id(.) == V/Intercept            ? '1f' :
			id(.) == V/OmvangPlangebied     ? 'log(1f)':
			id(.) == V/Kaveldichtheid2018   ? 'Grondproductiekosten/ReadData/LocatieVariabelen/Kaveldichtheid' :
			id(.) == V/AndersBouwen         ? 'Grondproductiekosten/ReadData/LocatieVariabelen/AndersBouwen' :
			id(.) == V/Reistijd5kInw        ? 'Grondproductiekosten/ReadData/LocatieVariabelen/Reistijd5kInw' :
			id(.) == V/BoekwaardeOpgevoerd  ? '1f' :
			'0f';
		
		// Dit betreft de variabelen waarbij de te kiezen waarden niet evident zijn
		attribute<bool> IsOnzekereControleVar := id(.) == V/BronFakton;
		
		attribute<string> label := name;
		
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint32> GrondproductieModelVarianten : nrofrows = 3
	{
		attribute<string> name :
		[
			'BouwWoonrijp',
			'Bovenwijks',
			'PlanProces'
		];
		attribute<string> label := name;
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	//Omvat onzekerheid uitgedrukt ahv standaardfout: statistische onzekerheid
	unit<uint8> Onzekerheid1: NrOfRows = 3
	{
		attribute<string> name: ['Low', 'Nominaal', 'High'];
		attribute<string> CalcStr := union_data(., 'CoefficientStr+'+quote('-')+'+StderrorStr', 'CoefficientStr', 'CoefficientStr+'+quote('+')+'+StderrorStr');
	}
	
	//Omvat onzekerheid o.b.v. keuzen tav de controlevariabelen (referentie of niet)
	unit<uint8> Onzekerheid2: NrOfRows = 2
	{
		attribute<string> name: ['Low', 'High'];
	}
	
	unit<uint32> Onzekerheid := combine(Onzekerheid1, Onzekerheid2)
	{
		attribute<string> Onzekerheid1_name := Onzekerheid1/name[Nr_1];
		attribute<string> Onzekerheid2_name := Onzekerheid2/name[Nr_2];
		attribute<string> name := Onzekerheid1_name+'_'+Onzekerheid2_name;
	}
	
	unit<uint32> Combi := combine(GrondproductieModelVarianten, Onzekerheid)
	{
		attribute<string> GrondproductieModelVarianten_name := GrondproductieModelVarianten/name[Nr_1];
		attribute<string> Onzekerheid_name := Onzekerheid/name[Nr_2];
		attribute<string> name := GrondproductieModelVarianten_name+'/'+Onzekerheid_name;
		attribute<string> Label := GrondproductieModelVarianten_name+'_'+Onzekerheid_name;
	}
	
	// unit<uint32> Extent: NrOfRows = 3
	// {
		// attribute<string> name: ['BinnenBBG', 'BuitenBBG', 'Totaal'];
		// attribute<string> CalcStr: ['BBG', '!BBG', 'BBG || !BBG'];
	// }
	
	// unit<uint32> Indicator: NrOfRows = 7
	// {
		// attribute<string> name: ['mean', 'sd', 'min', 'rth_element_20', 'rth_element_50', 'rth_element_80', 'max'];
		// attribute<string> Label := name, DialogType = "LabelText";
	// }
	
	// unit<uint32> ExtentxIndicator := combine(Extent, Indicator)
	// {
		// attribute<string> Extent_name := Extent/name[Nr_1];
		// attribute<string> Indicator_name := Indicator/name[Nr_2];
		// attribute<string> name := Extent_name+'_'+Indicator_name;
	// }
}