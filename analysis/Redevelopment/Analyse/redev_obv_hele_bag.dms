container Redev_obv_hele_bag :  using = "units;classifications/bag;geography"
// container Redev_obv_hele_bag :  using = "units;classifications/bag;classifications/redev;classifications/tijd;geography"
{
	// unit<uint32>      Perceel             := /SourceData/BRK/Perceel/Perceel_minus_wegen;
	// unit<uint32>      RegioUnit_Gem_oud       := /SourceData/RegioIndelingen/Gemeente_oud;
	// unit<uint32>      RegioUnit_Wijk23        := /SourceData/RegioIndelingen/impl/CBS/Y2023/Wijk;
	unit<uint32>      RegioUnit_Wijk12        := /SourceData/RegioIndelingen/impl/CBS/Y2012/Wijk;
	// unit<uint32>      RegioUnit_Provincie12   := /SourceData/RegioIndelingen/impl/CBS/Y2012/Provincie; 
	 
	#include<PrepBAG.dms>
	
	container PrepDomains := 
		for_each_ne(
			AdditionalClassifications/MutatieTypen/name
			, 'PrepDomains_T('+quote(AdditionalClassifications/MutatieTypen/name)+')'
		)
	{
		container Onveranderd
		{
			unit<uint32> domain := PrepBAG/BAG_Tabel/Onveranderd_Woon/uq;
		}
		
		container Onveranderd_NW
		{
			unit<uint32> domain := PrepBAG/BAG_Tabel/Onveranderd_NietWoon/uq;
		}
		
		container TC
		{
			unit<uint32> domain := union_unit(T/domain, Cplus/domain)
			{
				attribute<rdc>         vbo_geometry             := union_data(., T/domain/vbo_geometry, Cplus/domain/vbo_geometry);
				attribute<int32>       MutatieMaand             := union_data(., T/domain/MutatieMaand, Cplus/domain/MutatieMaand);
				attribute<int32>       vbo_oppervlakte          := union_data(., T/domain/vbo_oppervlakte, Cplus/domain/vbo_oppervlakte);
				attribute<string>      label                    := string(pand_bag_nr);
				attribute<rdc>         pand_geometry     (poly) := union_data(., T/domain/pand_geometry, Cplus/domain/pand_geometry);
				attribute<jaar>        pand_bouwjaar            := union_data(., T/domain/pand_bouwjaar, Cplus/domain/pand_bouwjaar);
				attribute<uint64>      pand_bag_nr              := union_data(., T/domain/pand_bag_nr, Cplus/domain/pand_bag_nr);
				attribute<uint64>      vbo_bag_nr               := union_data(., T/domain/vbo_bag_nr, Cplus/domain/vbo_bag_nr);
			}
		}
		container OC
		{
			unit<uint32> domain := union_unit(O/domain, Cmin/domain)
			{
				attribute<rdc>         vbo_geometry             := union_data(., O/domain/vbo_geometry, Cmin/domain/vbo_geometry);
				attribute<int32>       MutatieMaand             := union_data(., O/domain/MutatieMaand, Cmin/domain/MutatieMaand);
				attribute<int32>       vbo_oppervlakte          := union_data(., O/domain/vbo_oppervlakte, Cmin/domain/vbo_oppervlakte);
				attribute<string>      label                    := string(pand_bag_nr);
				attribute<rdc>         pand_geometry     (poly) := union_data(., O/domain/pand_geometry, Cmin/domain/pand_geometry);
				attribute<jaar>        pand_bouwjaar            := union_data(., O/domain/pand_bouwjaar, Cmin/domain/pand_bouwjaar);
				attribute<uint64>      pand_bag_nr              := union_data(., O/domain/pand_bag_nr, Cmin/domain/pand_bag_nr);
				attribute<uint64>      vbo_bag_nr               := union_data(., O/domain/vbo_bag_nr, Cmin/domain/vbo_bag_nr);
			}
		}
	}
		
	#include<AdditionalOperations.dms>
	
	container FinalDomains
	{
		// unit<uint32> SN_Sites                       := AdditionalOperations/SN/Result;
		unit<uint32> SN_Sloop_Objecten              := AdditionalOperations/SN/Result/Sloop_Objecten;
		unit<uint32> SN_Sloop_nw_Objecten           := AdditionalOperations/SN/Result/Sloop_NW_Objecten;
		unit<uint32> SN_Nieuwbouw_Objecten          := AdditionalOperations/SN/Result/Nieuwbouw_Objecten;
		
		// unit<uint32> Nieuwbouw_OpOnbebouwd_Sites    := AdditionalOperations/Nieuwbouw_Panden_OpOnbebouwd/result;
		unit<uint32> Nieuwbouw_Objecten             := AdditionalOperations/Nieuwbouw/Result;
		
		// unit<uint32> Toevoeging_Sites               := AdditionalOperations/Clustering/TC/CleanUp; 
		unit<uint32> Toevoeging_Objecten            := PrepDomains/TC/domain; 
		
		// unit<uint32> Onttrekking_Sites              := AdditionalOperations/Clustering/OC/CleanUp;
		unit<uint32> Onttrekking_Objecten           := PrepDomains/OC/domain;
		
		// unit<uint32> Transformatie_Sites            := AdditionalOperations/Clustering/TMplus/CleanUp;
		unit<uint32> Transformatie_Plus_Objecten         := PrepDomains/TMplus/domain;
		unit<uint32> Transformatie_Min_Objecten     := PrepDomains/TMmin/domain;
		
		// unit<uint32> Sloop_Sites                    := AdditionalOperations/Clustering/S/CleanUp;
		unit<uint32> Sloop_Objecten                 := AdditionalOperations/Sloop/Result;
		
		// unit<uint32> Onveranderd_Sites              := AdditionalOperations/Clustering/Onveranderd/CleanUp;
		unit<uint32> Onveranderd_Objecten           := PrepDomains/Onveranderd/domain;
	}
	
/*
 	unit<uint32> PerObject_Export := ='union_unit('+AsItemList('FinalDomains/'+AdditionalClassifications/Redev_ObjectTypes/name+'_Objecten')+')'
	, StorageName = "='%LocalDataProjDir%/Temp/PerObject_Export_'+/Parameters/BAG_Selection_Area+'_'+Parameters/BAG_file_date+'.fss'"
	, using = "AdditionalClassifications"
	{
		attribute<rdc>              geometry                        := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/vbo_geometry')+')';
		attribute<uint64>           vbo_bag_nr                      := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/vbo_bag_nr')+')';
		// attribute<string>           site_id                         := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/site_id')+')';
		attribute<Redev_ObjectTypes>type_class                      := ='rlookup(union_data(., '+AsList('const('+quote(Redev_ObjectTypes/name)+',FinalDomains/'+Redev_ObjectTypes/name+'_Objecten)',',')+'), Redev_ObjectTypes/name)';
		attribute<upoint>           fdom_id                         := ='union_data(., '+AsList('point_yx(const('+string(id(Redev_ObjectTypes))+',FinalDomains/'+Redev_ObjectTypes/name+'_Objecten), id(FinalDomains/'+Redev_ObjectTypes/name+'_Objecten))',',')+')';
		attribute<int32>            MutatieMaand                    := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/MutatieMaand')+')';
		attribute<int32>            vbo_oppervlakte                 := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/vbo_oppervlakte')+')';
		attribute<jaar>             pand_bouwjaar                   := ='union_data(., '+AsItemList('FinalDomains/'+Redev_ObjectTypes/name+'_Objecten/pand_bouwjaar')+')';
		// attribute<UrbanisationK>    UrbanisationK_rel               := Analyse/DetermineUrbanisationK/Urbanisation[point_in_polygon(geometry, RegioUnit_gem_oud/geometry)];
		
	}
 */	
 
	// unit<uint32> PerSite_Export := ='union_unit('+AsItemList('FinalDomains/'+AdditionalClassifications/Redev_SiteTypes/name+'_Sites')+')'
	// , StorageName = "%LocalDataProjDir%/Temp/PerSite_Export.fss"
	// , using = "AdditionalClassifications"
	// {
		// attribute<rdc>              geometry (poly)                 := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/geometry')+')';
		// attribute<string>           site_id                         := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/site_id')+')';
		// attribute<Redev_SiteTypes>  type_class                      := ='rlookup(union_data(., '+AsList('const('+quote(Redev_SiteTypes/name)+',FinalDomains/'+Redev_SiteTypes/name+'_Sites)',',')+'), Redev_SiteTypes/name)';
		// attribute<upoint>           fdom_id                         := ='union_data(., '+AsList('point_yx(const('+string(id(Redev_SiteTypes))+',FinalDomains/'+Redev_SiteTypes/name+'_Sites), id(FinalDomains/'+Redev_SiteTypes/name+'_Sites))',',')+')';
		// attribute<int32>            MutatieMaand                    := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/MutatieMaand')+')';
		// attribute<m2>               site_oppervlakte                := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/area')+')';
		// attribute<jaar>             avg_bouwjaar                    := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/avg_bouwjaar')+')';
		// attribute<jaar>             sd_bouwjaar                     := ='union_data(., '+AsItemList('FinalDomains/'+Redev_SiteTypes/name+'_Sites/sd_bouwjaar')+')';
	// }

	unit<uint32> Read_PerObject_Export
	// : StorageName = "= propvalue(PerObject_Export, 'StorageName')"
	: StorageName = "='%LocalDataProjDir%/Temp/PerObject_Export_'+/Parameters/BAG_Selection_Area+'_'+Parameters/BAG_file_date+'.fss'"
	, StorageReadOnly = "true"
	, using = "AdditionalClassifications;classifications/tijd"
	{
		attribute<rdc>              geometry;
		attribute<uint64>           vbo_bag_nr;
		// attribute<string>           site_id;
		attribute<Redev_ObjectTypes>type_class;
		attribute<upoint>           fdom_id;
		attribute<int32>            MutatieMaand;
		attribute<int32>            MutatieJaar := MutatieMaand / 100i;
		attribute<jaren>            Jaar_rel := rlookup(uint32(MutatieJaar), jaren/value);
		attribute<int32>            vbo_oppervlakte;
		attribute<int32>            vbo_oppervlakte_edit := vbo_oppervlakte > 9900i ? null_i : vbo_oppervlakte;
		attribute<jaar>             pand_bouwjaar;
		// attribute<UrbanisationK>    UrbanisationK_rel; 
		attribute<UrbanisationK>    UrbanisationK_rel               := Analyse/DetermineUrbanisationK/Wijken/UrbanisationK_rel[Wijk12_rel];
		// attribute<m2>               site_oppervlakte     := rjoin(site_id, Read_PerSite_Export/site_id, Read_PerSite_Export/site_oppervlakte);
		// attribute<bool>             IsWithinUrbanContour := IsDefined(point_in_polygon(geometry, /SourceData/begenzing_bebouwd_gebied/Bevolkingskern_2011/shapes/geometry));
		
		attribute<RegioUnit_Wijk12>   Wijk12_rel             := point_in_polygon(geometry, RegioUnit_Wijk12/geometry);
		attribute<RegioUnit_Wijk23>   Wijk23_rel             := point_in_polygon(geometry, RegioUnit_Wijk23/geometry);
		attribute<string>             WK_CODE_2012         := RegioUnit_Wijk12/WK_CODE[Wijk12_rel];
		attribute<string>             WK_CODE_2023         := RegioUnit_Wijk23/WK_CODE[Wijk23_rel];
		
		// attribute<NL_grid/domain>   per_grid := geometry[NL_grid/domain];
		
		// unit<uint8> DensK : nrofrows = 6
		// {
			// attribute<string> name : ['B_dens','B_grey','B_green','N_dens','N_grey','N_green'];
			// attribute<string> label := name;
		// }
		
		// container GridAnalysis :=
			// for_each_ne(
				// Redev_ObjectTypes/name
				// , 'GridAnalysis_T('+quote(Redev_ObjectTypes/name)+')'
			// )
		// {
			// container Transform :=
				// for_each_nedv(
					// Redev_ObjectTypes/name
					// , replace('union_data(DensK, '+AsList('GridAnalysis/@OT@/Total/'+DensK/name,',')+')','@OT@', Redev_ObjectTypes/name)
					// , DensK
					// , uint32
				// );
		// }
		
/* 		Template GridAnalysis_T
		{
			parameter<string> RedevType;
			///
			container PerGrid
			{
				attribute<uint32>  totaal   (NL_grid/domain)  := ='sum(type_class == Redev_ObjectTypes/V/'+RedevType+' ? 1 : 0, per_grid)';
				attribute<uint32>  B_dens   (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_in_bbg/dens[uint32] * totaal;
				attribute<uint32>  B_grey   (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_in_bbg/grey[uint32] * totaal;
				attribute<uint32>  B_green  (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_in_bbg/green[uint32] * totaal;
				attribute<uint32>  N_dens   (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_buiten_bbg/dens[uint32] * totaal;
				attribute<uint32>  N_grey   (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_buiten_bbg/grey[uint32] * totaal;
				attribute<uint32>  N_green  (NL_grid/domain)  := SourceData/zones/gg_zones_bbg2000_begr2000/gg_3K_buiten_bbg/green[uint32] * totaal;
			}
			
			container Total
			{
				parameter<uint32>  totaal     := sum(PerGrid/totaal);
				parameter<uint32>  B_dens     := sum(PerGrid/B_dens);
				parameter<uint32>  B_grey     := sum(PerGrid/B_grey);
				parameter<uint32>  B_green    := sum(PerGrid/B_green);
				parameter<uint32>  N_dens     := sum(PerGrid/N_dens);
				parameter<uint32>  N_grey     := sum(PerGrid/N_grey);
				parameter<uint32>  N_green    := sum(PerGrid/N_green);
			}
		}
 */		
		container Per_VerslagMaand := 
			for_each_ne(
				Verslagmaanden/label
				, 'Per_VerslagMaand_T('+quote(Verslagmaanden/name)+'[int32])'
			);

		container Count_PerRedevType_PerVerslagMaand :=
			for_each_nedv(
				Redev_ObjectTypes/name
				, replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/Totalen_PerRedevType/@OT@', ',')+')', '@OT@', Redev_ObjectTypes/name)
				, Verslagmaanden
				, uint32
			)
		{
			attribute<string> Label (Verslagmaanden) := Verslagmaanden/label;
		}
		
		// container Count_Urban_PerRedevType_PerVerslagMaand :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/Count_Urban_PerRedevType/@OT@', ',')+')', '@OT@', Redev_ObjectTypes/name)
				// , Verslagmaanden
				// , uint32
			// );
		// container Count_PeriUrban_PerRedevType_PerVerslagMaand :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/Count_PeriUrban_PerRedevType/@OT@', ',')+')', '@OT@', Redev_ObjectTypes/name)
				// , Verslagmaanden
				// , uint32
			// );
		// container Count_Peripheral_PerRedevType_PerVerslagMaand :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/Count_Peripheral_PerRedevType/@OT@', ',')+')', '@OT@', Redev_ObjectTypes/name)
				// , Verslagmaanden
				// , int32
			// );
		
		// container AvgObjectSize_PerRedevType_PerVerslagMaand :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/AvgObjectSize_PerRedevType/@OT@', ',')+')', '@OT@', Redev_ObjectTypes/name)
				// , Verslagmaanden
				// , int32
			// );
		
		container AvgObjectSize_PerRedevType :=
			for_each_nedv(
				Redev_ObjectTypes/name
				, 'mean(type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' ? vbo_oppervlakte_edit : null_i)'
				, void
				, int32
			);
			
		// container AvgSiteSize_PerRedevType :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , 'mean(type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' ? site_oppervlakte : null_f)'
				// , void
				// , m2
			// );
			
		container Count_PerUrbanK_PerRedevType :=
			for_each_nedv(
				Redev_ObjectTypes/name
				, replace('union_data(UrbanisationK, '+AsList('sum_uint32(type_class == Redev_ObjectTypes/v/@OT@ && UrbanisationK_rel == UrbanisationK/v/'+UrbanisationK/label+')', ',')+')', '@OT@', Redev_ObjectTypes/name)
				, UrbanisationK
				, uint32   
			)
		{
			attribute<string> Label (UrbanisationK) := UrbanisationK/label;
		}
			
		// container Count_BegrBebGeb_PerRedevType :=
			// for_each_nedv(
				// Redev_ObjectTypes/name
				// , 'sum(type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' ? IsWithinUrbanContour[uint32] : 0)'
				// , void
				// , uint32
			// );
			
		Template Per_VerslagMaand_T
		{
			parameter<int32> VerslagMaand;
			///
			container Totalen_PerRedevType := 
				for_each_nedv(
					Redev_ObjectTypes/name
					, 'sum_uint32((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+')'
					, void
					, uint32
				);
			container Count_Urban_PerRedevType := 
				for_each_nedv(
					Redev_ObjectTypes/name
					, 'sum_uint32((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' && UrbanisationK_rel == UrbanisationK/v/urban)'
					, void
					, uint32
				);
			container Count_PeriUrban_PerRedevType := 
				for_each_nedv(
					Redev_ObjectTypes/name
					, 'sum_uint32((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' && UrbanisationK_rel == UrbanisationK/v/PeriUrban)'
					, void
					, uint32
				);
			container Count_Peripheral_PerRedevType := 
				for_each_nedv(
					Redev_ObjectTypes/name
					, 'sum_uint32((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' && UrbanisationK_rel == UrbanisationK/v/Peripheral)'
					, void
					, int32
				);
			container AvgObjectSize_PerRedevType := 
				for_each_nedv(
					Redev_ObjectTypes/name
					, 'mean((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_ObjectTypes/v/'+Redev_ObjectTypes/name+' ? vbo_oppervlakte_edit : null_i)'
					, void
					, int32
				);
		}
	}
	
	parameter<string> Export_Date := '20250423'; //today?
	
	unit<uint32> Analyse_PerWijk := RegioUnit_Wijk12
	, using = "AdditionalClassifications"
	, StorageName = "='%LocalDataProjDir%/Output/Analyse_PerWijk_'+Export_Date+'.csv'"
	, StorageType = "gdalwrite.vect"
	{
		attribute<string>                WK_CODE                 := CODE;
		attribute<km2>                   Total_area              := area(geometry, m2)[km2];
		attribute<km2>                   WegSpoor_area           := /SourceData/BRT/Wijken_x_WegSpoor/area_per_wijk;
		attribute<km2>                   Water_area              := /SourceData/BRT/Wijken_x_Water/area_per_wijk;
		attribute<km2>                   PandFootprint_2012      := sum(/SourceData/BAG/VolledigeBAG/Panden/pand/Stand_per_Jaar/y2012/select/footprint, point_in_polygon(centroid_or_mid(/SourceData/BAG/VolledigeBAG/Panden/pand/Stand_per_Jaar/y2012/select/geometry), geometry))[km2];
		attribute<uint32>                OAD                     := RegioUnit_Wijk12/OAD;
		attribute<float32>               P_HUURCORP              := RegioUnit_Wijk12/P_HUURCORP;
		// attribute<float32>                Landprice               := RegioUnit_Wijk12/Landprice;
		attribute<jaar>                  modus_buildingyear_2012 := /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/uq_pand_nr/modus_bouwjaar;
		attribute<float32>               mean_UAI_2012           := mean(Analyse/UrbanAttractivityIndex/Read_Tiff, per_NL_grid_domain);
		// attribute<float32>                building_year_uniformity  := , Descr = "Pearson's chi-square om de mate van uniformiteit te bepalen", URL = "https://en.wikipedia.org/wiki/Pearson%27s_chi-squared_test"
		
		attribute<uint32>                count_woon_y2012         := sum_uint32(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsWonen && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/Wijk12_rel);
		attribute<uint32>                count_nietwoon_y2012     := sum_uint32(NOT(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsWonen) && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/Wijk12_rel);
		attribute<uint32>                count_woon_y2025         := sum_uint32(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/VBO_IsWonen && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/Wijk12_rel);
		attribute<uint32>                count_nietwoon_y2025     := sum_uint32(NOT(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/VBO_IsWonen) && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2025/select/Wijk12_rel);
		     
		attribute<uint32>                count_SN_Sloop           := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_SN_Sloop_nw        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop_nw, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_SN_Nieuwbouw       := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Nieuwbouw, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_Nieuwbouw          := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Nieuwbouw, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_Toevoeging         := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Toevoeging, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_Onttrekking        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onttrekking, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_Transformatie_Plus     := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/transformatie_plus, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_Transformatie_Min     := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Transformatie_Min, Read_PerObject_Export/wijk12_rel);
		
		attribute<uint32>                saldo_SN                 := sub_or_null(count_SN_Nieuwbouw, count_SN_Sloop);
		attribute<uint32>                saldo_Toevoeging         := sub_or_null(count_Toevoeging, count_Onttrekking);
		attribute<uint32>                saldo_Transformatie      := sub_or_null(count_Transformatie_Plus, count_Transformatie_Min);
		attribute<uint32>                saldo_Nieuwbouw          := count_Nieuwbouw;
		
		
		// attribute<uint32>                count_Sloop              := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Sloop, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Onveranderd        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onveranderd, Read_PerObject_Export/wijk12_rel);
		// attribute<string>                dom_process_plus         := ='Redev_ObjectTypes/Plus/name[argmax_uint8('+Aslist('count_'+Redev_ObjectTypes/Plus/name+'', ',')+')]';
		attribute<Redev_ObjectTypes/Plus> dom_process_plus         := ='argmax_uint8('+Aslist('count_'+Redev_ObjectTypes/Plus/name+'', ',')+')[Redev_ObjectTypes/Plus]';
		attribute<ObjectTypes_Saldi>      dom_process_saldo        := ='argmax_ifdefined_uint8('+Aslist('saldo_'+ObjectTypes_Saldi/name+' > 10 ? saldo_'+ObjectTypes_Saldi/name+' : null_u', ',')+')[ObjectTypes_Saldi]';
		
		attribute<ObjectTypes_Saldi_HML>  ObjectTypes_Saldi_HML_rel := switch(
																			 case(dom_process_saldo == ObjectTypes_Saldi/v/SN && saldo_SN > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/SN_High], ObjectTypes_Saldi_HML/V/SN_High)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/SN && saldo_SN > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/SN_Medium], ObjectTypes_Saldi_HML/V/SN_Medium)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/SN && saldo_SN > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/SN_Low], ObjectTypes_Saldi_HML/V/SN_Low)
																			
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Nieuwbouw && saldo_Nieuwbouw > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Nieuwbouw_High], ObjectTypes_Saldi_HML/V/Nieuwbouw_High)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Nieuwbouw && saldo_Nieuwbouw > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Nieuwbouw_Medium], ObjectTypes_Saldi_HML/V/Nieuwbouw_Medium)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Nieuwbouw && saldo_Nieuwbouw > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Nieuwbouw_Low], ObjectTypes_Saldi_HML/V/Nieuwbouw_Low)
																			
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Toevoeging && saldo_Toevoeging > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Toevoeging_High], ObjectTypes_Saldi_HML/V/Toevoeging_High)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Toevoeging && saldo_Toevoeging > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Toevoeging_Medium], ObjectTypes_Saldi_HML/V/Toevoeging_Medium)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Toevoeging && saldo_Toevoeging > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Toevoeging_Low], ObjectTypes_Saldi_HML/V/Toevoeging_Low)
																			
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Transformatie && saldo_Transformatie > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Transformatie_High], ObjectTypes_Saldi_HML/V/Transformatie_High)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Transformatie && saldo_Transformatie > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Transformatie_Medium], ObjectTypes_Saldi_HML/V/Transformatie_Medium)
																			,case(dom_process_saldo == ObjectTypes_Saldi/v/Transformatie && saldo_Transformatie > ObjectTypes_Saldi_HML/LB[ObjectTypes_Saldi_HML/V/Transformatie_Low], ObjectTypes_Saldi_HML/V/Transformatie_Low)
																			
																			, null_u
																		);
		
		// attribute<RegioUnit_Provincie12> provincie_rel                         := RegioUnit_Wijk12/provincie_rel;
		attribute<km2>                   opp_BeschermdeStadDorpgezichten2020   := RegioUnit_Wijk12/opp_BeschermdeStadDorpgezichten[km2];
		// attribute<float32>               P_groei_woon_y2012_24_prov            := (sum(count_woon_y2024, provincie_rel)[provincie_rel][float32] - sum(count_woon_y2012, provincie_rel)[provincie_rel][float32]) / sum(count_woon_y2012, provincie_rel)[provincie_rel][float32] * 100f;
		
		attribute<float32>                P_woning_groei := (float32(count_woon_y2025) - float32(count_woon_y2012)) / float32(count_woon_y2012) * 100f;
		
		container Sums: DisableStorage = "True"
		{
			parameter<uint32>                count_woon_y2012         := sum_uint32(../count_woon_y2012);
			// parameter<uint32>                count_woon_y2024         := sum_uint32(../count_woon_y2024);
			parameter<uint32>                count_SN_Sloop           := sum_uint32(../count_SN_Sloop);
			// parameter<uint32>                count_SN_Sloop_nw        := sum_uint32(../count_SN_Sloop_nw);
			parameter<uint32>                count_SN_Nieuwbouw       := sum_uint32(../count_SN_Nieuwbouw);
			parameter<uint32>                count_Nieuwbouw          := sum_uint32(../count_Nieuwbouw);
			parameter<uint32>                count_Toevoeging         := sum_uint32(../count_Toevoeging);
			parameter<uint32>                count_Onttrekking        := sum_uint32(../count_Onttrekking);
			// parameter<uint32>                count_TransformatieP     := sum_uint32(../count_TransformatieP);
			// parameter<uint32>                count_TransformatieM     := sum_uint32(../count_TransformatieM);
			// parameter<uint32>                count_Sloop              := sum_uint32(../count_Sloop);
			// parameter<uint32>                count_Onveranderd        := sum_uint32(../count_Onveranderd);
			// parameter<uint32>                count_total_process      := sum_uint32(../count_total_process);
			// parameter<uint32>                count_positive           := count_SN_Nieuwbouw + count_Nieuwbouw + count_Toevoeging + count_TransformatieP;
			// parameter<uint32>                count_negative           := count_SN_Sloop + count_Sloop + count_Onttrekking + count_TransformatieM;
		}
	}
	
/* 	unit<uint32> Analyse_PerWijk_x_Jaar := combine(RegioUnit_Wijk12, /classifications/Tijd/jaren)
	, using = "AdditionalClassifications"
	{
		attribute<string>                 Jaar_name               := Tijd/jaren12_24/name[second_rel];
		attribute<Tijd/jaren12_24>        Jaar_rel                := second_rel;
		attribute<string>                 WK_CODE                 := RegioUnit_Wijk12/CODE[first_rel];
		attribute<km2>                    area                    := area(RegioUnit_Wijk12/geometry, m2)[km2][first_rel];
		attribute<uint32>                 OAD                     := RegioUnit_Wijk12/OAD[first_rel];
		attribute<float32>                P_HUURCORP              := RegioUnit_Wijk12/P_HUURCORP[first_rel];
		attribute<float32>                Landprice               := RegioUnit_Wijk12/Landprice[first_rel];
		attribute<jaar>                   modus_buildingyear      := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+',Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/'+Tijd/jaren12_24/name+'/select/uq_pand_nr/modus_bouwjaar[first_rel])',',')+
																		',null_s)';
		attribute<float32>                mean_UAI                := mean(Analyse/UrbanAttractivityIndex/Read_Tiff, RegioUnit_Wijk12/per_NL_grid_domain)[first_rel];
		// attribute<float32>                building_year_uniformity  := , Descr = "Pearson's chi-square om de mate van uniformiteit te bepalen", URL = "https://en.wikipedia.org/wiki/Pearson%27s_chi-squared_test"
		
		attribute<uint32>                count_woon_y2012         := sum_uint32(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsWonen && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2012/select/Wijk12_rel)[first_rel];
		attribute<uint32>                count_woon_y2024         := sum_uint32(Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2024/select/VBO_IsWonen && Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2024/select/VBO_IsVoorraad, /Analyse/Redev_obv_hele_bag/PrepBAG/BAG_Tabel/Per1Jan/Y2024/select/Wijk12_rel)[first_rel];
		
		attribute<uint32>                count_SN_Sloop           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_SN_Sloop_nw           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop_nw, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_SN_Nieuwbouw           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Nieuwbouw, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Nieuwbouw           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Nieuwbouw, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Toevoeging           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Toevoeging, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Onttrekking           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onttrekking, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Transformatie_Plus           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/transformatie_plus, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Transformatie_Min           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Transformatie_Min, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Sloop           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Sloop, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';
		attribute<uint32>                count_Onveranderd           := ='switch('
																		+AsList('case(Jaar_name == '+quote(Tijd/jaren12_24/name)+', sum_uint32(Read_PerObject_Export/jaar_rel == '+string(id(Tijd/jaren12_24))+'[Tijd/jaren12_24] && Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onveranderd, Read_PerObject_Export/wijk12_rel)[first_rel])',',')+
																		',null_u)';


		// attribute<uint32>                count_SN_Sloop           := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_SN_Sloop_nw        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Sloop_nw, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_SN_Nieuwbouw       := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/SN_Nieuwbouw, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Nieuwbouw          := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Nieuwbouw, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Toevoeging         := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Toevoeging, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Onttrekking        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onttrekking, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_TransformatieP     := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/transformatie_plus, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_TransformatieM     := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Transformatie_Min, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Sloop              := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Sloop, Read_PerObject_Export/wijk12_rel);
		// attribute<uint32>                count_Onveranderd        := sum_uint32(Read_PerObject_Export/type_class == Redev_ObjectTypes/V/Onveranderd, Read_PerObject_Export/wijk12_rel);
		attribute<uint32>                count_total_process      := ='add('+AsList('count_'+Redev_ObjectTypes/name,',')+')';
		
		attribute<RegioUnit_Provincie12> provincie_rel                     := RegioUnit_Wijk12/provincie_rel[first_rel];
		attribute<km2>                   opp_BeschermdeStadDorpgezichten   := RegioUnit_Wijk12/opp_BeschermdeStadDorpgezichten[km2][first_rel];
		attribute<float32>               share_BeschermdeStadDorpgezichten := RegioUnit_Wijk12/share_opp_BeschermdeStadDorpsgezichten[first_rel];
		attribute<float32>               P_groei_woon_y2012_24_prov        := (sum(count_woon_y2024, provincie_rel)[provincie_rel][float32] - sum(count_woon_y2012, provincie_rel)[provincie_rel][float32]) / sum(count_woon_y2012, provincie_rel)[provincie_rel][float32] * 100f;
		
		unit<uint32> Sums := Tijd/jaren12_24
		{
			attribute<uint32>                count_SN_Sloop           := sum_uint32(../count_SN_Sloop, ../jaar_rel);
			attribute<uint32>                count_SN_Sloop_nw        := sum_uint32(../count_SN_Sloop_nw, ../jaar_rel);
			attribute<uint32>                count_SN_Nieuwbouw       := sum_uint32(../count_SN_Nieuwbouw, ../jaar_rel);
			attribute<uint32>                count_Nieuwbouw          := sum_uint32(../count_Nieuwbouw, ../jaar_rel);
			attribute<uint32>                count_Toevoeging         := sum_uint32(../count_Toevoeging, ../jaar_rel);
			attribute<uint32>                count_Onttrekking        := sum_uint32(../count_Onttrekking, ../jaar_rel);
			attribute<uint32>                count_TransformatieP     := sum_uint32(../count_Transformatie_Plus, ../jaar_rel);
			attribute<uint32>                count_TransformatieM     := sum_uint32(../count_Transformatie_Min, ../jaar_rel);
			attribute<uint32>                count_Sloop              := sum_uint32(../count_Sloop, ../jaar_rel);
			attribute<uint32>                count_Onveranderd        := sum_uint32(../count_Onveranderd, ../jaar_rel);
			attribute<uint32>                count_total_process      := sum_uint32(../count_total_process, ../jaar_rel);
			attribute<uint32>                count_positive           := count_SN_Nieuwbouw + count_Nieuwbouw + count_Toevoeging + count_TransformatieP;
			attribute<uint32>                count_negative           := count_SN_Sloop + count_Sloop + count_Onttrekking + count_TransformatieM;
		}
	}
 */		
		// % restricties opp van regio area (opzoek naar 2012 versie?)
		// hoeveelheid beschikbare ruimte (landbouw zonder restrictie)
		// nabijheid stadskern
		// gemiddelde gebouw ouderdom categorie
		// mate eenvormigheid (zie Dani 2015 urban expansion verhaal)
		// land value
		
		// Explain the share (or amount) of a development type per region with:
		// -	Amount (or share) of land availability (agriculture without restrictions)
			// -	average address density
		// -	modus building age category (schuiven met de klasse grenzen)
		// -	level of building uniformity in region (same building year, building types, size, etc) entrophy measure, obv bouwjaar categorien. 
		// -	amount (or share) of open space
		// -	amount (or share) of business areas
			// -	average urban attractivity index 
			// -	versplinterd eigendom/corporatie bezit
		// -	whether it is located in the urban fringe.
			// -	Land value
			// -	Residential demand (growth in period?) in NVM-regio?
		// -	Geen area
			// -	Percentage beschermd stadsgezicht/dorpsgezicht
		// -	Leegstand?
		// -	OV bereikbaarheid? Centroid afstand tot stations?
	
	
	// unit<uint32> AMS 
	// : StorageName = "%LocalDataProjDir%/Temp/Amsterdam.shp"
	// , StorageType = "gdal.vect"
	// , DialogData = "rdc";
	
	// unit<uint32> PerSite_Amsterdam := select_with_attr_by_cond(Read_PerSite_Export, IsDefined(Read_PerSite_Export/Amsterdam_rel))
	// {
	
	// }
	
/* 	unit<uint32> Read_PerSite_Export
	: StorageName = "%LocalDataProjDir%/Temp/PerSite_Export.fss"
	, StorageReadOnly = "true"
	, using = "AdditionalClassifications"
	{
		attribute<rdc>              geometry (poly);
		attribute<string>           site_id;
		attribute<Redev_SiteTypes>  type_class;
		attribute<upoint>           fdom_id;
		attribute<int32>            MutatieMaand;
		attribute<m2>               site_oppervlakte;
		attribute<jaar>             avg_bouwjaar;
		attribute<jaar>             sd_bouwjaar;
		
		attribute<AMS>              Amsterdam_rel := point_in_polygon(centroid_or_mid(geometry), AMS/geometry);
		
  		container Per_VerslagMaand := 
			for_each_ne(
				Verslagmaanden/label
				, 'Per_VerslagMaand_T('+quote(Verslagmaanden/name)+'[int32])'
			);
			
		container Count_PerRedevType_PerVerslagMaand :=
			for_each_nedv(
				Redev_SiteTypes/name
				, replace('union_data(Verslagmaanden, '+AsList('Per_VerslagMaand/'+Verslagmaanden/label+'/Totalen_PerRedevType/@OT@', ',')+')', '@OT@', Redev_SiteTypes/name)
				, Verslagmaanden
				, int32
			)
		{
			attribute<string> Label (Verslagmaanden) := Verslagmaanden/label;
		}
		
		container AvgSize_PerRedevType :=
			for_each_nedv(
				Redev_SiteTypes/name
				, 'mean(type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+' ? site_oppervlakte : null_f)'
				, void
				, m2
			);
		
		container AvgBouwjaar_PerRedevType :=
			for_each_nedv(
				Redev_SiteTypes/name
				, 'mean(type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+' ? avg_bouwjaar : null_s)'
				, void
				, jaar
			);
		
		container SDBouwjaar_PerRedevType :=
			for_each_nedv(
				Redev_SiteTypes/name
				, 'sd(type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+' ? avg_bouwjaar : null_s)'
				, void
				, jaar
			);
		
		container Count_PerRedevType :=
			for_each_nedv(
				Redev_SiteTypes/name
				, 'sum_uint32(type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+')'
				, void
				, uint32
			);
		
		Template Per_VerslagMaand_T
		{
			parameter<int32> VerslagMaand;
			///
			container Totalen_PerRedevType := 
				for_each_nedv(
					Redev_SiteTypes/name
					, 'sum_uint32((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+')'
					, void
					, int32
				);
			container Avg_Size_PerRedevType := 
				for_each_nedv(
					Redev_SiteTypes/name
					, 'mean((MutatieMaand * 100i + 1i) == '+string(VerslagMaand)+'[int32] && type_class == Redev_SiteTypes/v/'+Redev_SiteTypes/name+' ? site_oppervlakte : null_f)'
					, void
					, m2
				);
		}
	}
 */	
	#include<AdditionalClassifications.dms>
	
	Template PrepDomains_T
	{
		parameter<string> name;
		// /
		unit<uint32> domain     := ='select_with_org_rel(PrepBAG/FinalMutationTable/MutatieTypen_rel == AdditionalClassifications/MutatieTypen/v/'+name+')'
		, DialogType = "map"
		, DialogData = "vbo_geometry"
		{
			attribute<rdc>         vbo_geometry                                := org_rel -> geometry;
			attribute<int32>       MutatieMaand                                := org_rel -> MutatieMaand;
			attribute<int32>       vbo_oppervlakte                             := org_rel -> vbo_oppervlakte;
			attribute<string>      label                                       := string(vbo_bag_nr);
			attribute<rdc>         pand_geometry  (poly)                       := org_rel -> pand_geometry;
			attribute<jaar>        pand_bouwjaar                               := org_rel -> pand_bouwjaar;
			attribute<uint64>      vbo_bag_nr                                  := org_rel -> vbo_bag_nr;
			attribute<uint64>      pand_bag_nr                                 := org_rel -> pand_bag_nr;
			
			container impl
			: Descr = "tbv identificatie van afwijkende pand geometrieeen. Buiten NL, of zeer groot, of dunne slivers."
			{
				attribute<rdc>       NW                         (..) := lower_bound(pand_geometry);
				attribute<rdc>       SE                         (..) := upper_bound(pand_geometry);
				attribute<float32>   X_ext                      (..) := sub_or_null(PointCol(SE),PointCol(NW));
				attribute<float32>   Y_ext                      (..) := sub_or_null(PointRow(SE),PointRow(NW));
 
				attribute<float32>   lower_x                    (..) := pointCol(NW);
				attribute<float32>   upper_x                    (..) := pointCol(SE);
				attribute<float32>   lower_y                    (..) := pointRow(NW);
				attribute<float32>   upper_y                    (..) := pointRow(SE);
				attribute<m2>        area                       (..) := area(pand_geometry, m2);
				
				attribute<bool>      pand_selection_condition   (..) := ='X_ext < 1000f && Y_ext < 1000f' //panden met een grotere x/y range dan 1km eruit
																						'&& lower_x < 300000f && lower_x > 0f'
																						'&& upper_x < 300000f && upper_x > 0f'
																						'&& lower_y < 620000f && lower_y > 300000f'
																						'&& upper_y < 620000f && upper_y > 300000f' //binnen NL
																						'&& area < 50000[m2]';
			}
			
			unit<uint32>           zonder_afwijkende_pand_geometrieen          := select_with_attr_by_cond(., impl/pand_selection_condition), DialogType = "map", DialogData = "vbo_geometry";

			// unit<uint32>           overlay_metPercelen                         := bg_overlay_polygon(perceel/geometry, zonder_afwijkende_pand_geometrieen/pand_geometry) 
			// {
				// attribute<m2> area_percelen := area(perceel/geometry, m2)[first_rel];
				// attribute<m2> area_panden   := area(zonder_afwijkende_pand_geometrieen/pand_geometry, m2)[second_rel];
				
				// attribute<float32> share_pand_op_perceel := area_panden / area_percelen;
			// }
		} 
	}
}


