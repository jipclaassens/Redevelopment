container RegionalAvgCharacteristics 
{  
	container Impl
	{
		container MakeNationalAvgCharacteristics := 
			for_each_nedv(
				HouseCharacteristics/name,
				replace(
					'union_data('
						'WP4,'+
						AsItemList(
							replace(
								'mean(/Brondata/NVM/Types/@TW@/Subset/Nl_rel ? /Brondata/NVM/Types/@TW@/Subset/@VT@[float32] : (0/0)[float32])',
								'@TW@', WP4/name
							)
						)+
					')',
					'@VT@', HouseCharacteristics/name
				),
				WP4, float32
			), StorageName = "%LocalDataProjDir%/UnlinkedData/Vastgoed/NVM_Nationalekarakteristieken.fss";
	
		container CalcRegionalAvgCharacteristics := 
			for_each_ne(
				HousetypeHouseChar/name
				, 'CalcRegionalAvgCharacteristics_T(' +quote(HousetypeHouseChar/name)+ ',' +quote(HousetypeHouseChar/WP)+ ',' +quote(HousetypeHouseChar/HouseChar)+ ',' +quote(HousetypeHouseChar/ValueType)+ ',''WP2'')'
			);
	
		Template CalcRegionalAvgCharacteristics_T
		{
			//
			parameter<string> HousetypeHouseChar;
			parameter<string> WP;
			parameter<string> HouseChar;
			parameter<string> ValueType;
			parameter<string> WP_type_str;
			//
			parameter<string> distance_decay_type := 'rev_dist_scaled';
			
			unit<uint32> NVM_Data := ='/Brondata/NVM/Types/'+WP+'/Subset' 
			{
				attribute<float32> Sum_attribute_ha    (NL_grid/domain) := ='sum('+HouseChar+'[float32], NL_grid_domain_rel)';
				attribute<float32> Count_attribute_ha  (NL_grid/domain) := ='count('+HouseChar+', NL_grid_domain_rel)[float32]';
				attribute<float32> Potential_sum       (NL_grid/domain) := ='potential(Sum_attribute_ha, /geometries/potentialen/pot5000m/potrange/'+distance_decay_type+')'; 
				attribute<float32> Potential_count     (NL_grid/domain) := ='potential(Count_attribute_ha, /geometries/potentialen/pot5000m/potrange/'+distance_decay_type+')';
				
				attribute<float32> Potential (NL_grid/domain) := Potential_sum / Potential_count; 
			} 
		}
		
		container MakeRegionalAvgCharacteristics := 
			for_each_nedvn(
				HousetypeHouseChar/name
				, 'value(CalcRegionalAvgCharacteristics/'+HousetypeHouseChar/name+'/NVM_Data/Potential,'+HousetypeHouseChar/ValueType+')'
				, NL_grid/domain
				, HousetypeHouseChar
				, HousetypeHouseChar/ValueType
			),	StorageName = "%LocalDataProjDir%/UnlinkedData/Vastgoed/NVM_Regiokarakteristieken.fss"
		{
			parameter<String> Generate := 'Ready', ExplicitSuppliers = "=AsList(HousetypeHouseChar/name, ';')";
		}
	}

	container NationalAvgCharacteristics :=
		for_each_ndv(
			HouseCharacteristics/name
			, WP4
			, float32
		), StorageName = "%LocalDataProjDir%/UnlinkedData/Vastgoed/NVM_Nationalekarakteristieken/WP4.fss",  StorageReadOnly = "True" 
	{
		attribute<float32> d_maintgoodNewHouses      (WP4) := const(1f,WP4);
		attribute<float32> d_centralheatingNewHouses (WP4) := const(1f,WP4);
		attribute<float32> d_isol_complNewHouses     (WP4) := const(1f,WP4);
		attribute<float32> d_privparkNewHouses       (WP4) := id(WP4) = WP4/V/twee_onder_1_kap || id(WP4) = WP4/V/vrijstaand ? 1f :	d_privpark;
		
		attribute<float32> opp_Woning_log (WP4) := log(size);
	}

		
	container RegionalAvgCharacteristics := 
		for_each_ndvna(
			HousetypeHouseChar/name
			, NL_grid/domain
			, HousetypeHouseChar
			, HousetypeHouseChar/ValueType
			, '%LocalDataProjDir%/UnlinkedData/Vastgoed/NVM_Regiokarakteristieken/WP4/'+HousetypeHouseChar/name+'.tif'

		)
	{
		attribute<float32> vrijstaand_d_privparkNewHouses       (NL_grid/domain) := const(1f, NL_grid/domain);
		attribute<float32> twee_onder_1_kap_d_privparkNewHouses (NL_grid/domain) := vrijstaand_d_privparkNewHouses;
		attribute<float32> rijtjeswoning_d_privparkNewHouses    (NL_grid/domain) := rijtjeswoning_d_privpark[float32];
		attribute<float32> appartement_d_privparkNewHouses      (NL_grid/domain) := appartement_d_privpark[float32];
	}






/*
	container Impl
	{
		container MakeNationalAvgCharacteristics := 
			for_each_nedv(
				HouseCharacteristics/name,
				replace(
					'union_data('
						'WP4,'+
						AsItemList(
							replace(
								'mean(Brondata/NVM/Types/@TW4@/Subset/Nl_rel ? Brondata/NVM/Types/@TW4@/Subset/@VT@[float32] : (0/0)[float32])',
								'@TW4@', WP4/name
							)
						)+
					')',
					'@VT@', HouseCharacteristics/name
				),
				WP4, float32
			), StorageName = "%LocalDataDir%/Verdichting/Vastgoed/NVM_Nationalekarakteristieken_WP4.fss";
	
		container MakeRegionalAvgCharacteristics := 
			for_each_ne(
				HousetypeHouseChar/name
				, 'MakeRegionalAvgCharacteristics_T(' +quote(HousetypeHouseChar/name)+ ',' +quote(HousetypeHouseChar/WP)+ ',' +quote(HousetypeHouseChar/HouseChar)+ ')'
			);
	
		container Generate_RegionalAvgCharacteristics: =
			for_each_nedv(
				HousetypeHouseChar/name
				, 'MakeRegionalAvgCharacteristics/'+HousetypeHouseChar/name+'/NVM_Data/Potential'
				, NL_grid/domain
				, float32
			);
	
		Template MakeRegionalAvgCharacteristics_T
		{
			//
			parameter<string> HousetypeHouseChar;
			parameter<string> WP;
			parameter<string> HouseChar;
			//
			parameter<string> distance_decay_type := 'rev_dist_scaled';
			
			unit<uint32> NVM_Data := ='Brondata/NVM/Types/'+WP+'/Subset' 
			{
				attribute<float32> Sum_attribute_ha    (NL_grid/domain) := ='sum('+HouseChar+'[float32], NL_grid_domain_rel)';
				attribute<float32> Count_attribute_ha  (NL_grid/domain) := ='count('+HouseChar+', NL_grid_domain_rel)[float32]';
				attribute<float32> Potential_sum      (NL_grid/domain) := ='potential(Sum_attribute_ha, geometries/potentialen/pot5000m_25m/potrange/'+distance_decay_type+')'; 
				attribute<float32> Potential_count    (NL_grid/domain) := ='potential(Count_attribute_ha, geometries/potentialen/pot5000m_25m/potrange/'+distance_decay_type+')';
				
				attribute<float32> Potential (NL_grid/domain) := Potential_sum / Potential_count, StorageName = "='%LocalDataDir%/Verdichting/Vastgoed/NVM_Regiokarakteristieken_WP4/' +HouseTypeHouseChar+ '.fss'";
			}
		}
	}
	
	container NationalAvgCharacteristics: StorageName = "%LocalDataDir%/Verdichting/Vastgoed/NVM_Nationalekarakteristieken_WP4.fss", StorageReadOnly = "True" 
	{
		attribute<float32> size             (WP4);
		attribute<float32> lotsize          (WP4);
		attribute<float32> nrooms           (WP4);
		attribute<float32> nbadk            (WP4);
		attribute<float32> d_maintgood      (WP4);
		attribute<float32> d_kk             (WP4); 
		attribute<float32> d_centralheating (WP4);
		attribute<float32> d_erfpacht       (WP4);
		attribute<float32> d_isol_compl     (WP4);
		attribute<float32> d_privpark       (WP4);
		attribute<float32> d_highrise       (WP4);
		
		attribute<float32> d_maintgoodNewHouses      (WP4) := const(1f,WP4);
		attribute<float32> d_centralheatingNewHouses (WP4) := const(1f,WP4);
		attribute<float32> d_isol_complNewHouses     (WP4) := const(1f,WP4);
		attribute<float32> d_privparkNewHouses       (WP4) := id(WP4) = WP4/V/twee_onder_1_kap || id(WP4) = WP4/V/vrijstaand ? 1f :	d_privpark;
	}
	
	container RegionalAvgCharacteristics := 
		for_each_ndva(
			HousetypeHouseChar/name
			, NL_grid/domain
			, float32
			,'%LocalDataDir%/Verdichting/Vastgoed/NVM_Regiokarakteristieken_WP4.fss'
		), StorageReadOnly = "True"
	{
		attribute<float32> vrijstaand_d_privparkNewHouses       (NL_grid/domain) := const(1f, NL_grid/domain);
		attribute<float32> twee_onder_1_kap_d_privparkNewHouses (NL_grid/domain) := vrijstaand_d_privparkNewHouses;
		attribute<float32> rijtjeswoning_d_privparkNewHouses    (NL_grid/domain) := rijtjeswoning_d_privpark;
		attribute<float32> appartement_d_privparkNewHouses      (NL_grid/domain) := appartement_d_privpark;
	}
*/
	container Overige_vars
	{
		container impl
		{
			attribute<float32> DistTo_Airports_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/DistTo_AirportsMain5_2019.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> DistTo_Airports (NL_grid/domain) := DistTo_Airports_src == 0f ? 1f : (DistTo_Airports_src / 1000f) < 1f ? 1f : DistTo_Airports_src / 1000f;
			
			attribute<float32> DistTo_HighwayAccessExit_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/DistTo_highway_acces_exit_2018.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> DistTo_HighwayAccessExit (NL_grid/domain) := DistTo_HighwayAccessExit_src == 0f ? 1f : (DistTo_HighwayAccessExit_src / 1000f) < 1f ? 1f : DistTo_HighwayAccessExit_src / 1000f;

			attribute<float32> DistTo_Trainstations_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/DistTo_Trainstation_2001.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> DistTo_Trainstations (NL_grid/domain) := DistTo_Trainstations_src == 0f ? 1f : (DistTo_Trainstations_src / 1000f) < 1f ? 1f : DistTo_Trainstations_src / 1000f;
			
			attribute<float32> DistTo_Trainstations_2019 (NL_grid/domain) := /Brondata/Spatial_data/NWB/Treinstations/DistTo_km;
			
			attribute<float32> DistTo_Seaport_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/DistTo_Zeehavens2018.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> DistTo_Seaport (NL_grid/domain) := DistTo_Seaport_src == 0f ? 1f : (DistTo_Seaport_src / 1000f) < 1f ? 1f : DistTo_Seaport_src / 1000f;
			
			attribute<float32> DistTo_Urban_Contour_2000_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/DistTo_Urban_Contour_2000.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> DistTo_Urban_Contour_2000 (NL_grid/domain) := DistTo_Urban_Contour_2000_src == 0f ? 1f : (DistTo_Urban_Contour_2000_src / 1000f) < 1f ? 1f : DistTo_Urban_Contour_2000_src / 1000f;
			
			attribute<float32> LU_Share_Residential_2000 (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/LU_share_residential_2000.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			
			attribute<float32> LU_Diversity_index_2000_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/LU_simpson_diversity_index_2000.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> LU_Diversity_index_2000 (NL_grid/domain) := LU_Diversity_index_2000_src / 100f;
			
			attribute<float32> UAI_2002_src (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/UAI_2002.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> UAI_2002 (NL_grid/domain) := UAI_2002_src / 100f;
			
			attribute<float32> UAI_5000m_dcsq (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/UAI_5000m.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";

			attribute<float32> UAI_2021 (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/UAI_2021.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";

			attribute<float32> Reistijd_100k_inw_2017_NL (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/Reistijd100kInw.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> Reistijd_100k_inw_2017_NL_edit0 (NL_grid/domain) := (Reistijd_100k_inw_2017_NL / 60f) < 1f ? 1f : (Reistijd_100k_inw_2017_NL / 60f) > 120f ? 120f : (Reistijd_100k_inw_2017_NL / 60f);
			attribute<float32> Reistijd_100k_inw_2017_NL_edit (NL_grid/domain)  := MakeDefined(Reistijd_100k_inw_2017_NL_edit0, 120f) , StorageName = "%Redev_DataDir%/SpatialData/Reistijd_100k_inw_2017_NL_edit.fss";
			
			attribute<float32> Reistijd_100k_inw_2020_DE_BE (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/Reistijd100kInw_2020_500m_DE_BE.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> Reistijd_100k_inw_2020_DE_BE_edit0 (NL_grid/domain) := (Reistijd_100k_inw_2020_DE_BE / 60f) < 1f ? 1f : (Reistijd_100k_inw_2020_DE_BE / 60f) > 120f ? 120f : (Reistijd_100k_inw_2020_DE_BE / 60f);
			attribute<float32> Reistijd_100k_inw_2020_DE_BE_edit (NL_grid/domain)  := MakeDefined(Reistijd_100k_inw_2020_DE_BE_edit0, 120f) , StorageName = "%Redev_DataDir%/SpatialData/Reistijd_100k_inw_2020_DE_BE_edit.fss";

			attribute<float32> Reistijd_500k_inw_2020_DE_BE (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/Reistijd500kInw_2020_500m_DE_BE.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> Reistijd_500k_inw_2020_DE_BE_edit0 (NL_grid/domain) := (Reistijd_500k_inw_2020_DE_BE / 60f) < 1f ? 1f : (Reistijd_500k_inw_2020_DE_BE / 60f) > 120f ? 120f : (Reistijd_500k_inw_2020_DE_BE / 60f);
			attribute<float32> Reistijd_500k_inw_2020_DE_BE_edit (NL_grid/domain)  := MakeDefined(Reistijd_500k_inw_2020_DE_BE_edit0, 120f) , StorageName = "%Redev_DataDir%/SpatialData/Reistijd_500k_inw_2020_DE_BE_edit.fss";
			
			attribute<float32> Reistijd_500k_inw_2020_NL (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/Reistijd500kInw_2020_500m_NL.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> Reistijd_500k_inw_2020_NL_edit0 (NL_grid/domain) := (Reistijd_500k_inw_2020_NL / 60f) < 1f ? 1f : (Reistijd_500k_inw_2020_NL / 60f) > 120f ? 120f : (Reistijd_500k_inw_2020_NL / 60f);
			attribute<float32> Reistijd_500k_inw_2020_NL_edit (NL_grid/domain)  := MakeDefined(Reistijd_500k_inw_2020_NL_edit0, 120f) , StorageName = "%Redev_DataDir%/SpatialData/Reistijd_500k_inw_2020_NL_edit.fss";

			attribute<float32> Reistijd_1000k_inw_2020_DE_BE (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/Reistijd1000kInw_2020_500m_DE_BE.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			attribute<float32> Reistijd_1000k_inw_2020_DE_BE_edit0 (NL_grid/domain) := (Reistijd_1000k_inw_2020_DE_BE / 60f) < 1f ? 1f : (Reistijd_1000k_inw_2020_DE_BE / 60f) > 120f ? 120f : (Reistijd_1000k_inw_2020_DE_BE / 60f);
			attribute<float32> Reistijd_1000k_inw_2020_DE_BE_edit (NL_grid/domain)  := MakeDefined(Reistijd_1000k_inw_2020_DE_BE_edit0, 120f) , StorageName = "%Redev_DataDir%/SpatialData/Reistijd_1000k_inw_2020_DE_BE_edit.fss";
			
			attribute<uint32> Reistijd_stations_2006 (NL_grid/domain)
			:	StorageName     = "%Redev_DataDir%/SpatialData/reistijd_minuten_station_2006.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			
			attribute<uint32> bbg2015_groen_buff_src (NL_grid/domain_10m)
			:	StorageName     = "%Redev_DataDir%/SpatialData/bbg2015_groen_buff.tif"
			,	StorageType     = "gdal.grid"
			,	StorageReadOnly = "True";
			
			attribute<float32> Reistijd_stations_edit0 (NL_grid/domain) := Reistijd_stations_2006 == 0 ? (0/0)[float32] : (Reistijd_stations_2006 > 15 ? 15 : Reistijd_stations_2006)[float32];
			attribute<float32> Reistijd_stations_edit  (NL_grid/domain) := MakeDefined(Reistijd_stations_edit0, 15f), StorageName = "%Redev_DataDir%/SpatialData/Reistijd_stations_edit.fss";
		}

		attribute<float32> Reistijd_100k_inw_2017_NL_edit (NL_grid/domain)     : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_100k_inw_2017_NL_edit.fss", StorageReadOnly = "true";
		attribute<float32> Reistijd_100k_inw_2020_DE_BE_edit (NL_grid/domain)  : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_100k_inw_2020_DE_BE_edit.fss", StorageReadOnly = "true";
		attribute<float32> Reistijd_500k_inw_2020_DE_BE_edit (NL_grid/domain)  : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_500k_inw_2020_DE_BE_edit.fss", StorageReadOnly = "true";
		attribute<float32> Reistijd_500k_inw_2020_NL_edit (NL_grid/domain)     : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_500k_inw_2020_NL_edit.fss", StorageReadOnly = "true";
		attribute<float32> Reistijd_1000k_inw_2020_DE_BE_edit (NL_grid/domain) : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_1000k_inw_2020_DE_BE_edit.fss", StorageReadOnly = "true";
		attribute<float32> Reistijd_stations_edit (NL_grid/domain)             : StorageName = "%Redev_DataDir%/SpatialData/Reistijd_stations_edit.fss", StorageReadOnly = "true";
	
		attribute<float32> bbg2015_groen_100mbuff_100m (NL_grid/domain)  := sum(impl/bbg2015_groen_buff_src[float32], NL_grid/domain_10m/grid_100m_rel) >= 50f ? 1f : 0f;
	}
	
}