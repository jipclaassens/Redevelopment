container sloop_nieuwbouw_cbs:  using = "eenheden;typeringen"
{
	unit<uint32>	Vbo			            := /BronData/BAG/Volledige_BAG/VBO/Src;
	unit<uint32>	Pand		            := /BronData/BAG/Volledige_BAG/Pand/Src;
	
	unit<uint32> panden := pand
	,  DialogType = "Map"
	,  DialogData = "geom_mm"
	,  FreeData = "False"
	{
		attribute<geometries/rdc_mm>    geom_mm (polygon) := geometry_mm;
		attribute<geometries/rdc>       geometry(polygon) := geom_mm[geometries/rdc];

		attribute<string>               id                := identificatie;

		attribute<string>               STATUS            := pand/meta/STATUS;
		attribute<pand_status>          pand_status_rel   := rlookup(STATUS, pand_status/label);

		attribute<INT32>                BEGINDATUM        := pand/meta/BEGINDATUM;
		attribute<INT32>                EINDDATUM         := pand/meta/EINDDATUM;
		
		attribute<string>               id_begin          := id + "_" + string(BEGINDATUM);
		attribute<string>               id_eind           := id + "_" + string(EINDDATUM);
		attribute<bool>                 voorraad          := STATUS == 'Pand in gebruik' || STATUS == 'Pand in gebruik (niet ingemeten)';
		
		attribute<string>               vorige_status     := rjoin(id_begin, id_eind, status);
		
		attribute<string>               vorig_status_status      := vorige_status + "_" + status;
		unit<uint32>                    vorig_status_status_uq   := unique(vorig_status_status);
		attribute<uint32>               vorig_status_rel         := rlookup(vorig_status_status, vorig_status_status_uq/values);
		attribute<uint32>               count_status_rel (vorig_status_status_uq)         := pcount(vorig_status_rel);

		// attribute<bool>                 PM_0              := vorige_status == status;
		attribute<bool>                 PM_1              := vorige_status != 'Bouwvergunning verleend' && vorige_status != 'Bouw gestart';
		attribute<bool>                 PM_2              := vorige_status == 'Bouwvergunning verleend' && (status == 'Bouwvergunning verleend' || status == 'Bouw gestart' || status == 'Pand in gebruik' || status == 'Pand in gebruik (niet ingemeten)');
		attribute<bool>                 PM_3              := vorige_status == 'Bouw gestart' && (status == 'Bouw gestart' || status == 'Pand in gebruik' || status == 'Pand in gebruik (niet ingemeten)');
		attribute<bool>                 PM_4              := vorige_status == '' && voorraad == True;
		attribute<bool>                 PM_5              := status != 'Sloopvergunning verleend' && status != 'Pand gesloopt';
		attribute<bool>                 PM_6              := status == 'Sloopvergunning verleend' || status == 'Pand gesloopt';
	
		unit<uint32> periode  := Subset(panden/BEGINDATUM >= 20120101[int32] && panden/BEGINDATUM < 20170101[int32])
		, 	DialogType = "Map"
		, 	DialogData = "geom_mm"
		, 	FreeData = "False"
		{
			attribute<geometries/rdc_mm>        geom_mm (polygon)    := panden/geometry_mm[nr_OrgEntity];
			attribute<geometries/rdc>           geometry(polygon)    := geom_mm[geometries/rdc];
	
			attribute<bool>                     is_PM1               := panden/PM_1[nr_OrgEntity];
			attribute<bool>                     is_PM2               := panden/PM_2[nr_OrgEntity];
			attribute<bool>                     is_PM3               := panden/PM_3[nr_OrgEntity];
			attribute<bool>                     is_PM4               := panden/PM_4[nr_OrgEntity];
			attribute<bool>                     is_PM5               := panden/PM_5[nr_OrgEntity];
			attribute<bool>                     is_PM6               := panden/PM_6[nr_OrgEntity];
			
			container CBS_tabel
			{
				parameter<uint32>               PM1                  := sum(is_PM1 ? 1 : 0);
				parameter<uint32>               PM2                  := sum(is_PM2 ? 1 : 0);
				parameter<uint32>               PM3                  := sum(is_PM3 ? 1 : 0);
				parameter<uint32>               PM4                  := sum(is_PM4 ? 1 : 0);
				parameter<uint32>               PM5                  := sum(is_PM5 ? 1 : 0);
				parameter<uint32>               PM6                  := sum(is_PM6 ? 1 : 0);
			}
		}
	}

	unit<uint32> vbos := vbo
	, 	DialogType = "Map"
	, 	DialogData = "geom_mm"
	, 	FreeData = "False"
	{
		attribute<geometries/rdc_mm>        geom_mm           := geometry_mm;
		attribute<geometries/rdc>           geometry          := geom_mm[geometries/rdc];

		attribute<string>                   id                := identificatie;

		attribute<bool>                     woon              := gebruiksdoelen/woon;
		attribute<string>                   gdoel             := gebruiksdoel;
		
		attribute<string>                   STATUS            := vbo/meta/STATUS;
		attribute<vbo_status>               vbo_status_rel    := rlookup(STATUS, vbo_status/label);
		
		attribute<INT32>                    BEGINDATUM        := vbo/meta/BEGINDATUM;
		attribute<INT32>                    EINDDATUM         := vbo/meta/EINDDATUM;
		attribute<string>                   id_begin          := id + "_" + string(BEGINDATUM);
		attribute<string>                   id_eind           := id + "_" + string(EINDDATUM);
		
		attribute<bool>                     voorraad          := (STATUS == 'Verblijfsobject buiten gebruik' || STATUS == 'Verblijfsobject in gebruik' || STATUS == 'Verblijfsobject in gebruik (niet ingemeten)');
		attribute<string>                   vorige_status     := rjoin(id_begin, id_eind, status);
		attribute<string>                   volgend_status    := MakeDefined(rjoin(id_eind, id_begin, status),"");
		attribute<string>                   vorige_gdoel      := rjoin(id_begin, id_eind, gdoel);

		attribute<string>                   vorig_status_status      := vorige_status + "_" + status;
		unit<uint32>                        vorig_status_status_uq   := unique(vorig_status_status);
		attribute<uint32>                   vorig_status_rel         := rlookup(vorig_status_status, vorig_status_status_uq/values);
		attribute<uint32>                   count_status_rel (vorig_status_status_uq)         := pcount(vorig_status_rel);
		
		
		// attribute<bool>                     DM_0              := vorige_gdoel == gdoel;
		attribute<bool>                     DM_1              := vorige_gdoel != 'woon' && gdoel == 'woon';
		attribute<bool>                     DM_2              := vorige_gdoel == 'woon' && gdoel != 'woon';
		
		// attribute<bool>                     VM_0              := vorige_status == status;
		// attribute<bool>                     VM_1              := IsNull(vorige_status) && voorraad == True;
		// attribute<bool>                     VM_2              := vorige_status == 'Verblijfsobject gevormd' && voorraad == True;
		// attribute<bool>                     VM_3              := (vorige_status == 'Verblijfsobject buiten gebruik' || vorige_status == 'Verblijfsobject in gebruik' || vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)') && status == 'Verblijfsobject ingetrokken';
		// attribute<bool>                     VM_4              := (vorige_status == 'Verblijfsobject buiten gebruik' || vorige_status == 'Verblijfsobject in gebruik' || vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)') && (status == 'Verblijfsobject gevormd' || status == 'Niet gerealiseerd verblijfsobject');
		// attribute<bool>                     VM_5              := (vorige_status == 'Verblijfsobject ingetrokken' || vorige_status == 'Niet gerealiseerd verblijfsobject') && voorraad == True;
		
		attribute<uint32>                     Vtoev          := 
			switch(
				 case(vorige_status == 'Verblijfsobject gevormd' && status == 'Verblijfsobject buiten gebruik' && woon == True, 0)
				,case(vorige_status == 'Verblijfsobject gevormd' && status == 'Verblijfsobject in gebruik' && woon == True, 1)
				,case(vorige_status == 'Verblijfsobject gevormd' && status == 'Verblijfsobject in gebruik (niet ingemeten)' && woon == True, 2)
				,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Verblijfsobject buiten gebruik' && woon == True, 3)
				,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Verblijfsobject in gebruik' && woon == True, 4)
				,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Verblijfsobject in gebruik (niet ingemeten)' && woon == True, 5)
				,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Verblijfsobject buiten gebruik' && woon == True, 6)
				,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Verblijfsobject in gebruik' && woon == True, 7)
				,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Verblijfsobject in gebruik (niet ingemeten)' && woon == True, 8)
				,case(vorige_status == '' && status == 'Verblijfsobject buiten gebruik' && woon == True, 9)
				,case(vorige_status == '' && status == 'Verblijfsobject in gebruik' && woon == True, 10)
				,case(vorige_status == '' && status == 'Verblijfsobject in gebruik (niet ingemeten)' && woon == True, 11)
				, (0/0)
				);

		attribute<uint32>                     Vont          := 
			switch(
				 case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Niet gerealiseerd verblijfsobject' && woon == True, 0)
				,case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Verblijfsobject gevormd' && woon == True, 1)
				,case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Verblijfsobject ingetrokken' && woon == True, 2)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Niet gerealiseerd verblijfsobject' && woon == True, 3)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Verblijfsobject gevormd' && woon == True, 4)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Verblijfsobject ingetrokken' && woon == True, 5)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Niet gerealiseerd verblijfsobject' && woon == True, 6)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Verblijfsobject gevormd' && woon == True, 7)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Verblijfsobject ingetrokken' && woon == True, 8)
				, (0/0)
				);

		attribute<uint32>                     NVonv          := 
			switch(
				  case(vorige_status == 'Verblijfsobject gevormd' && status == 'Niet gerealiseerd verblijfsobject', 0)
				 ,case(vorige_status == 'Verblijfsobject gevormd' && status == 'Verblijfsobject ingetrokken', 1)
				 ,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Verblijfsobject gevormd', 2)
				 ,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Verblijfsobject ingetrokken', 3)
				 ,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Verblijfsobject gevormd', 4)
				 ,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Niet gerealiseerd verblijfsobject', 5)
				 ,case(vorige_status == '' && status == 'Niet gerealiseerd verblijfsobject', 6)
				 ,case(vorige_status == '' && status == 'Verblijfsobject gevormd', 7)
				 ,case(vorige_status == '' && status == 'Verblijfsobject ingetrokken', 8)
				 ,case(vorige_status == 'Verblijfsobject gevormd' && status == 'Verblijfsobject gevormd', 9)
				 ,case(vorige_status == 'Niet gerealiseerd verblijfsobject' && status == 'Niet gerealiseerd verblijfsobject', 10)
				 ,case(vorige_status == 'Verblijfsobject ingetrokken' && status == 'Verblijfsobject ingetrokken', 11)
				, (0/0)
				);

		attribute<uint32>                     Vonv          := 
			switch(
				 case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Verblijfsobject in gebruik', 0)
				,case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Verblijfsobject in gebruik (niet ingemeten)', 1)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Verblijfsobject buiten gebruik', 2)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Verblijfsobject in gebruik (niet ingemeten)', 3)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Verblijfsobject buiten gebruik', 4)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Verblijfsobject in gebruik', 5)
				,case(vorige_status == 'Verblijfsobject buiten gebruik' && status == 'Verblijfsobject buiten gebruik', 6)
				,case(vorige_status == 'Verblijfsobject in gebruik' && status == 'Verblijfsobject in gebruik', 7)
				,case(vorige_status == 'Verblijfsobject in gebruik (niet ingemeten)' && status == 'Verblijfsobject in gebruik (niet ingemeten)', 8)
				, (0/0)
				);
				
				
		attribute<bool>                     totaal_toev          := IsDefined(Vtoev) || (IsDefined(Vonv) && DM_1 == True);
		attribute<bool>                     totaal_ont           := IsDefined(Vont)  || (IsDefined(Vonv) && DM_2 == True);
		
		// attribute<bool>                     transformatie_toev   := (IsDefined(Vonv) && DM_1 == True);		
		// attribute<bool>                     transformatie_ont    := (IsDefined(Vonv) && DM_2 == True);		

		attribute<bool>                     toev_overig1         := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/toev_overig1);
		attribute<bool>                     toev_overig2         := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/toev_overig2);
		attribute<bool>                     toev_overig3         := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/toev_overig3);
		attribute<bool>                     nieuwbouw1           := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/nieuwbouw1);
		attribute<bool>                     nieuwbouw2           := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/nieuwbouw2);
		// attribute<bool>                     nieuwbouw3           := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/nieuwbouw3);
		attribute<bool>                     ont_overig1          := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/ont_overig1);
		attribute<bool>                     ont_overig2          := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/ont_overig2);
		attribute<bool>                     sloop                := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/sloop);
		attribute<bool>                     corr_ont             := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/corr_ont);
		attribute<bool>                     corr_toev            := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/corr_toev);
		
		
		attribute<bool>                     VM1                  := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/VM1);
		attribute<bool>                     VM2                  := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/VM2);
		attribute<bool>                     VM3                  := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/VM3);
		attribute<bool>                     VM4                  := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/VM4);
		attribute<bool>                     VM5                  := rjoin(id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/vbo_id_begin, sloop_nieuwbouw_cbs/gerelateerdPand/VM5);
		
		unit<uint32> periode  := Subset(vbos/BEGINDATUM >= 20120101[int32] && vbos/BEGINDATUM < 20170101[int32])
		, 	DialogType = "Map"
		, 	DialogData = "geom_mm"
		, 	FreeData = "False"
		{
			attribute<geometries/rdc_mm>        geom_mm           := vbos/geom_mm[nr_OrgEntity];
			attribute<geometries/rdc>           geometry          := geom_mm[geometries/rdc];
			
			// attribute<vbo_status>               vbo_status_rel    := vbos/vbo_status_rel[nr_OrgEntity];
			// attribute<INT32>                    BEGINDATUM        := vbos/BEGINDATUM[nr_OrgEntity];
			// attribute<INT32>                    EINDDATUM         := vbos/EINDDATUM[nr_OrgEntity];
			// attribute<bool>                     voorraad          := vbos/voorraad[nr_OrgEntity];
			
			// attribute<string>                   vorige_status     := vbos/vorige_status[nr_OrgEntity];
			
			// attribute<bool>                     is_transformatie_toev:= vbos/transformatie_toev[nr_OrgEntity];
			// attribute<bool>                     is_transformatie_ont := vbos/transformatie_ont[nr_OrgEntity];
			
			attribute<bool>                     is_toev_overig1      := vbos/toev_overig1[nr_OrgEntity];
			attribute<bool>                     is_toev_overig2      := vbos/toev_overig2[nr_OrgEntity];
			attribute<bool>                     is_toev_overig3      := vbos/toev_overig3[nr_OrgEntity];
			attribute<bool>                     is_nieuwbouw1        := vbos/nieuwbouw1[nr_OrgEntity];
			attribute<bool>                     is_nieuwbouw2        := vbos/nieuwbouw2[nr_OrgEntity];
			// attribute<bool>                     is_nieuwbouw3        := vbos/nieuwbouw3[nr_OrgEntity];
			attribute<bool>                     is_ont_overig1       := vbos/ont_overig1[nr_OrgEntity];
			attribute<bool>                     is_ont_overig2       := vbos/ont_overig2[nr_OrgEntity];
			attribute<bool>                     is_sloop             := vbos/sloop[nr_OrgEntity];
			attribute<bool>                     is_corr_ont          := vbos/corr_ont[nr_OrgEntity];
			attribute<bool>                     is_corr_toev         := vbos/corr_toev[nr_OrgEntity];
			
			attribute<bool>                     is_toegevoegd        := vbos/totaal_toev[nr_OrgEntity];
			attribute<bool>                     is_onttrokken        := vbos/totaal_ont[nr_OrgEntity];
			
			attribute<bool>                     is_VM1               := vbos/VM1[nr_OrgEntity];
			attribute<bool>                     is_VM2               := vbos/VM2[nr_OrgEntity];
			attribute<bool>                     is_VM3               := vbos/VM3[nr_OrgEntity];
			attribute<bool>                     is_VM4               := vbos/VM4[nr_OrgEntity];
			attribute<bool>                     is_VM5               := vbos/VM5[nr_OrgEntity];
			
		
			container cbs_tabel
			{
				parameter<uint32>               toev                 := sum(is_toegevoegd ? 1 : 0);
				parameter<uint32>               ont                  := sum(is_onttrokken ? 1 : 0);
				
				parameter<uint32>               nieuwbouw            := nieuwbouw1 + nieuwbouw2;
				parameter<uint32>               toev_overig          := toev_overig1 + toev_overig2 + toev_overig3;
				parameter<uint32>               corr_toev            := sum(is_corr_toev ? 1 : 0);
				
				parameter<uint32>               sloop                := sum(is_sloop ? 1 : 0);
				parameter<uint32>               ont_overig           := ont_overig1 + ont_overig2;
				parameter<uint32>               corr_ont             := sum(is_corr_ont ? 1 : 0);
				
				parameter<uint32>               ont_overig1          := sum(is_ont_overig1 ? 1 : 0);
				parameter<uint32>               ont_overig2          := sum(is_ont_overig2 ? 1 : 0);
				parameter<uint32>               nieuwbouw1           := sum(is_nieuwbouw1 ? 1 : 0);
				parameter<uint32>               nieuwbouw2           := sum(is_nieuwbouw2 ? 1 : 0);
				// parameter<uint32>               nieuwbouw3           := sum(is_nieuwbouw3 ? 1 : 0);
				parameter<uint32>               toev_overig1         := sum(is_toev_overig1 ? 1 : 0);
				parameter<uint32>               toev_overig2         := sum(is_toev_overig2 ? 1 : 0);
				parameter<uint32>               toev_overig3         := sum(is_toev_overig3 ? 1 : 0);
				
				parameter<uint32>               VM1                  := sum(is_VM1 ? 1 : 0);
				parameter<uint32>               VM2                  := sum(is_VM2 ? 1 : 0);
				parameter<uint32>               VM3                  := sum(is_VM3 ? 1 : 0);
				parameter<uint32>               VM4                  := sum(is_VM4 ? 1 : 0);
				parameter<uint32>               VM5                  := sum(is_VM5 ? 1 : 0);

				// parameter<uint32>               transformatie_toev   := sum(is_transformatie_toev ? 1 : 0);
				// parameter<uint32>               transformatie_ont    := sum(is_transformatie_ont ? 1 : 0);
				
				// parameter<uint32>               tot_toev          := nieuwbouw + toev_overig + corr_toev;
				// parameter<uint32>               tot_ont           := sloop + ont_overig +  + corr_ont;
				
				// parameter<int32>                netto                := totaal_toev[int32] - totaal_ont[int32];
			}
			
		}
	}
	
	unit<uint32> gerelateerdPand:= Subset(isDefined(rlookup(vbo/gerelateerdPand/vbo_id, vbos/id))) // is een 1->0..n relatie
	, FreeData = "False"
	{
		attribute<string>               pand_id           := vbo/gerelateerdPand/pand_id[nr_OrgEntity];
		unit<uint32>                    pand_id_uq        := unique(pand_id);
		attribute<string>               pand_id_begin     := vbo/gerelateerdPand/pand_id_begin[nr_OrgEntity];
		
		attribute<uint32>               parent_rel        := vbo/gerelateerdPand/parent_rel[nr_OrgEntity];
		
		attribute<string>               vbo_id            := vbo/gerelateerdPand/vbo_id[nr_OrgEntity];
		attribute<string>               vbo_id_begin      := vbo/gerelateerdPand/vbo_id_begin[nr_OrgEntity];
		
		attribute<int32>                vbo_begin         := rjoin(vbo_id_begin, vbos/id_begin, vbos/BEGINDATUM);
		attribute<int32>                pand_begin        := rjoin(pand_id_begin, panden/id_begin, panden/BEGINDATUM);
		
		attribute<string>               vbo_vorig_status  := rjoin(vbo_id_begin, vbos/id_begin, vbos/vorige_status);
		attribute<string>               vbo_status        := rjoin(vbo_id_begin, vbos/id_begin, vbos/status);
		attribute<string>               pand_vorig_status := rjoin(pand_id_begin, panden/id_begin, panden/vorige_status);
		attribute<string>               pand_status       := rjoin(pand_id_begin, panden/id_begin, panden/status);
		
		attribute<bool>                 woon              := rjoin(vbo_id_begin, vbos/id_begin, vbos/woon);
		
		attribute<bool>                 nieuwbouw1        := (Vtoev == 0 || Vtoev == 1 || Vtoev == 2)   && mutatie_klassen/PM_2 == True;
		attribute<bool>                 nieuwbouw2        := (Vtoev == 0 || Vtoev == 1 || Vtoev == 2)   && mutatie_klassen/PM_3 == True;
		// attribute<bool>                 nieuwbouw3        := (Vtoev == 0 || Vtoev == 1 || Vtoev == 2)   && mutatie_klassen/PM_4 == True;
		
		attribute<bool>                 toev_overig1      := (Vtoev == 9 || Vtoev == 10 || Vtoev == 11);
		attribute<bool>                 toev_overig2      := (Vtoev == 0 || Vtoev == 1  || Vtoev == 2)  && mutatie_klassen/PM_1 == True;
		attribute<bool>                 toev_overig3      := IsDefined(Vonv) && mutatie_klassen/DM_1 == True;
		
		attribute<bool>                 ont_overig1       := (Vont == 2  || Vont == 5   || Vont == 8)   && mutatie_klassen/PM_5 == True;
		attribute<bool>                 ont_overig2       := IsDefined(Vonv) && mutatie_klassen/DM_2 == True;
		
		attribute<bool>                 sloop             :=  (Vont == 2 || Vont == 5 || Vont == 8)      && mutatie_klassen/PM_6 == True;
		attribute<bool>                 corr_ont          :=  (Vont == 0 || Vont == 1 || Vont == 3 || Vont == 4 || Vont == 6 || Vont == 7);
		attribute<bool>                 corr_toev         :=  Vtoev == 3 || Vtoev == 4 || Vtoev == 5 || Vtoev == 6 || Vtoev == 7 || Vtoev == 8;
		
		attribute<uint32>               Vtoev             := rjoin(vbo_id_begin, vbos/id_begin, vbos/Vtoev);
		attribute<uint32>               Vont              := rjoin(vbo_id_begin, vbos/id_begin, vbos/Vont);
		attribute<uint32>               NVonv             := rjoin(vbo_id_begin, vbos/id_begin, vbos/NVonv);
		attribute<uint32>               Vonv              := rjoin(vbo_id_begin, vbos/id_begin, vbos/Vonv);
		
		attribute<bool>                 VM1               := Vtoev == 9 || Vtoev == 10 || Vtoev == 11;
		attribute<bool>                 VM2               := Vtoev == 0 || Vtoev == 1  || Vtoev == 2;
		attribute<bool>                 VM3               := Vont == 2  || Vont == 5   || Vont == 8;
		attribute<bool>                 VM4               := Vont == 0  || Vont == 1   || Vont == 3  || Vont == 4  || Vont == 6  || Vont == 7;
		attribute<bool>                 VM5               := Vtoev == 3 || Vtoev == 4  || Vtoev == 5 || Vtoev == 6 || Vtoev == 7 || Vtoev == 8;
		  
		attribute<bool>               PM1               := rjoin(pand_id_begin, panden/id_begin, panden/PM_1);
		attribute<bool>               PM2               := rjoin(pand_id_begin, panden/id_begin, panden/PM_2);
		attribute<bool>               PM3               := rjoin(pand_id_begin, panden/id_begin, panden/PM_3);
		attribute<bool>               PM4               := rjoin(pand_id_begin, panden/id_begin, panden/PM_4);
		attribute<bool>               PM5               := rjoin(pand_id_begin, panden/id_begin, panden/PM_5);
		attribute<bool>               PM6               := rjoin(pand_id_begin, panden/id_begin, panden/PM_6);
		
		
		unit<uint32>   mutatie_klassen := gerelateerdPand
		{
			// attribute<bool>             DM_0              := rjoin(vbo_id_begin, vbos/id_begin, vbos/DM_0);
			attribute<bool>             DM_1              := rjoin(vbo_id_begin, vbos/id_begin, vbos/DM_1);
			attribute<bool>             DM_2              := rjoin(vbo_id_begin, vbos/id_begin, vbos/DM_2);
			
			// attribute<bool>             VM_0              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_0);
			// attribute<bool>             VM_1              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_1);
			// attribute<bool>             VM_2              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_2);
			// attribute<bool>             VM_3              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_3);
			// attribute<bool>             VM_4              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_4);
			// attribute<bool>             VM_5              := rjoin(vbo_id_begin, vbos/id_begin, vbos/VM_5);
			
			// attribute<bool>             PM_0              := rjoin(pand_id_begin, panden/id_begin, panden/PM_0);
			attribute<bool>             PM_1              := rjoin(pand_id_begin, panden/id_begin, panden/PM_1);
			attribute<bool>             PM_2              := rjoin(pand_id_begin, panden/id_begin, panden/PM_2);
			attribute<bool>             PM_3              := rjoin(pand_id_begin, panden/id_begin, panden/PM_3);
			attribute<bool>             PM_4              := rjoin(pand_id_begin, panden/id_begin, panden/PM_4);
			attribute<bool>             PM_5              := rjoin(pand_id_begin, panden/id_begin, panden/PM_5);
			attribute<bool>             PM_6              := rjoin(pand_id_begin, panden/id_begin, panden/PM_6);
		}
		
		unit<uint32>                   extra_nieuwbouw   := Subset((gerelateerdPand/vbo_vorig_status == 'Verblijfsobject gevormd' || gerelateerdPand/vbo_status == 'Verblijfsobject gevormd') && gerelateerdPand/vbo_begin >= 20120101[int32] && gerelateerdPand/vbo_begin <= 20170101[int32] && gerelateerdPand/woon ==  True)
		{
			attribute<string>               pand_id           := gerelateerdPand/pand_id[nr_OrgEntity];
			attribute<string>               vbo_id            := gerelateerdPand/vbo_id[nr_OrgEntity];

			attribute<int32>                vbo_begin         := gerelateerdPand/vbo_begin[nr_OrgEntity];
			attribute<int32>                pand_begin        := gerelateerdPand/pand_begin[nr_OrgEntity];
			
			attribute<string>               vbo_vorig_status  := gerelateerdPand/vbo_vorig_status[nr_OrgEntity];
			attribute<string>               vbo_status        := gerelateerdPand/vbo_status[nr_OrgEntity];
			attribute<string>               pand_vorig_status := gerelateerdPand/pand_vorig_status[nr_OrgEntity];
			attribute<string>               pand_status       := gerelateerdPand/pand_status[nr_OrgEntity];
			
			attribute<bool>                 toev_overig1      := gerelateerdPand/toev_overig1[nr_OrgEntity];
			attribute<bool>                 toev_overig2      := gerelateerdPand/toev_overig2[nr_OrgEntity];
			attribute<bool>                 nieuwbouw1        := gerelateerdPand/nieuwbouw1[nr_OrgEntity];
			attribute<bool>                 nieuwbouw2        := gerelateerdPand/nieuwbouw2[nr_OrgEntity];
		}
	}
}
