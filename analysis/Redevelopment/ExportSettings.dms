container ExportSettings
{
	container GitImpl
	{
		parameter<string> PD               := expand(., '%projDir%');
		parameter<string> DOS_PD           := replace(PD, '/', '\\');

		parameter<string> SwitchDriveCmd   := substr(DOS_PD, 0, 2);
		parameter<string> CdCmd            := 'cd '+DOS_PD;
		parameter<string> DescrCmd         := 'git describe --all > git.txt';
		parameter<string> StatusCmd        := 'git status >> git.txt';
		parameter<string> HashCmd          := 'git rev-parse HEAD >> git.txt';
		parameter<string> TagCmd           := 'git ls-remote --tags >> git.txt';
		parameter<string> RevisionInfoCmds := SwitchDriveCmd + ' && ' + CdCmd + ' && ' + DescrCmd + ' && ' + StatusCmd + ' && ' + HashCmd + ' && ' + TagCmd;
		parameter<uint32> WriterCode       := exec_ec(Expand(., '%env:ComSpec%'), '/c ' + RevisionInfoCmds, PD);
	}
	
	container MetaInfo 
	{
		parameter<string> FileName : ='%storageBaseName%.xml';
		parameter<string> FileType : ='xml'; // default is 'ini' but ini files cannot be used well to store multi-line properties such as error messages of inproperly configured properties
		
		container Contents
		{
			container Software
			{
				parameter<string> GeoDMSVersion := string(GeoDmsMajorVersionNumber()) + '.' +  string(GeoDmsMinorVersionNumber())  +'.'  +  string(GeoDmsPatchNumber());
			}
			container Config
			{
				parameter<string> FullName := '=PropValue(this, '+Quote('FullName')+')';
				parameter<string> Expr     := '=PropValue(this, '+Quote('Expr'    )+')';
				parameter<string> ProjDir  := expand(., '%projDir%');
			}
			container Environment
			{
				parameter<string> Processor    := expand(., '%env:PROCESSOR_IDENTIFIER%');
				parameter<string> User         := expand(., '%env:USERNAME%');
				parameter<string> ComputerName := expand(., '%env:COMPUTERNAME%');
				parameter<string> Date         := expand(., '%env:DATE%');
				parameter<string> Time         := expand(., '%env:TIME%');
			}
			container Git
			{
				parameter<string> RevisionInfo : Storagename = "=(GitImpl/WriterCode==0) ? '%projDir%/git.txt' : 'Error '+String(GitImpl/WriterCode)+' while producing %projDir%/git.txt'", StorageType = "str";
			}
			container Parameters
			{
				parameter<string>  BAG_Selection_Area          := string(/Parameters/BAG_Selection_Area);
				parameter<string>  big_inflate_size_meters     := string(/Parameters/big_inflate_m);
				parameter<string>  bouwjaar_truncation_expr    := string(/Parameters/bouwjaar_truncation_expr);
				parameter<string>  highrise_threshold          := string(/Parameters/highrise_threshold);
				parameter<string>  minimum_site_area           := string(/Parameters/minimum_site_area);
				parameter<string>  minimum_SN_area_share       := string(/Parameters/minimum_SN_area_share);
				parameter<string>  BRT_file_date               := string(/Parameters/BRT_file_date);
				parameter<string>  BRK_file_date               := string(/Parameters/BRK_file_date);
				parameter<string>  BAG_file_date               := string(/Parameters/BAG_file_date);
			}
		}
	}
}
