container BRT
{ 
	// unit<uint32>      RegioUnit_Aggl      := Brondata/RegioIndelingen/gemeenten/j2020/Agglomeration_uq;
	
	unit<uint32> ReadFSS 
	:	StorageName     = "%SourceDataDir%/BRT/20210201/fss/poly.fss"
	,	StorageReadOnly = "True"
	,	DialogType = "Map"
	,	DialogData = "geometry_rd"
	{
		attribute<geometries/rdc>   geometry_rd (poly);
		attribute<bool>             IsGebouw;
		attribute<bool>             IsSnelweg;
		attribute<bool>             IsTerrein;
		attribute<bool>             IsWater;
		attribute<bool>             IsWeg;
		attribute<int32>            TDNCode;
		attribute<int32>            Visualisat;
		attribute<string>           label                                             := rjoin(Visualisat, typeringen/brt/visualisatiecodes/code, typeringen/brt/visualisatiecodes/label);
		attribute<typeringen/brt/visualisatiecodes/label_uq>   label_uq_rel           := rlookup(label, typeringen/brt/visualisatiecodes/label_uq/values);
		attribute<typeringen/brt/visualisatiecodes>            visualisatiecodes_rel  := rlookup(visualisat, typeringen/brt/visualisatiecodes/code);
		attribute<int32>                                       Subcode                := rjoin(visualisatiecodes_rel, id(typeringen/brt/visualisatiecodes), typeringen/brt/visualisatiecodes/subcode);
		attribute<int32>                                       Groepcode              := rjoin(visualisatiecodes_rel, id(typeringen/brt/visualisatiecodes), typeringen/brt/visualisatiecodes/Groepcode);
		attribute<string>                                      Groep                  := rjoin(visualisatiecodes_rel, id(typeringen/brt/visualisatiecodes), typeringen/brt/visualisatiecodes/groep);
		attribute<int32>                                       Wegvlak_groep          := rjoin(visualisatiecodes_rel, id(typeringen/brt/visualisatiecodes), typeringen/brt/visualisatiecodes/Wegvlak_groep);
		// attribute<typeringen/BBG>                              bbg_code               := rjoin(visualisatiecodes_rel, id(typeringen/brt/visualisatiecodes), typeringen/brt/visualisatiecodes/bbg_code);
		attribute<m2>                                          area                  := area(geometry_rd, m2);
		
		unit<uint32> Wegen := subset(
			ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/Weg_vlak_autosnelweg
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/Weg_vlak_hoofdweg 
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/Weg_vlak_regionale_weg 
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/Weg_vlak_lokale_weg 
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/Weg_vlak_straat 
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_voetgangers  
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_fietsers  
			
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_autosnelweg_boven_weg   
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_autosnelweg_in_tunnel   
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_fiets_in_tunnel   
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_hoofdweg_in_tunnel    
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_lokale_weg_in_tunnel    
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_regionale_weg_in_tunnel     
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_straat_in_tunnel     
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/weg_vlak_voetganger_in_tunnel     
			
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/spoor_vlak_brug       
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/spoor_vlak_in_tunnel       
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/spoor_vlak_onder_metro       
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/spoor_vlak_onder_weg       
			|| ReadFSS/label_uq_rel == typeringen/BRT/visualisatiecodes/label_uq/V/spoor_vlak_spoorbaanlichaam        
		)
		{
			attribute<geometries/rdc>                             geometry (poly)    := ReadFSS/geometry_rd[nr_OrgEntity];
			attribute<typeringen/brt/visualisatiecodes>           visualisatiecodes_rel := ReadFSS/visualisatiecodes_rel[nr_OrgEntity];
			
			attribute<RegioUnit_Aggl>                             Aggl_rel              := point_in_polygon(centroid_or_mid(geometry), RegioUnit_Aggl/geometry);
			
			unit<uint32> inAggl := subset(IsDefined(Aggl_rel))
			, FreeData = "False"
			{
				attribute<geometries/rdc>     geometry (poly)       := ../geometry[nr_OrgEntity];
				attribute<geometries/rdc_mm>  geometry_mm (poly)    := geometry[geometries/rdc_mm];
				attribute<RegioUnit_Aggl>     Aggl_rel              :=../Aggl_rel[nr_OrgEntity];
				
				container PerAggl :=
					for_each_ne(
						RegioUnit_Aggl/name
						, 'PerAggl_T('+quote(RegioUnit_Aggl/name)+', '+string(id(RegioUnit_Aggl))+'[RegioUnit_Aggl])'
					);
				
				Template PerAggl_T
				{
					parameter<string>         Aggl_name;
					parameter<RegioUnit_Aggl> Aggl_rel;
					
					unit<uint32> Aggl_sub := subset(inAggl/Aggl_rel == Aggl_rel)
					{
						attribute<geometries/rdc>     geometry (poly)       := inAggl/geometry[nr_OrgEntity];
						attribute<geometries/rdc_mm>  geometry_mm (poly)    := inAggl/geometry_mm[nr_OrgEntity];
				
						parameter<geometries/rdc_mm>  union (poly)           := union_polygon(geometry_mm);
						
						// unit<uint32> unioned_unit_1 : nrofrows = 1
						// {
							// attribute<geometries/rdc_mm> geometry_mm (poly) := union_data(., ../union);
						// }
						
						// unit<uint32> single2multi_1 := split_polygon(unioned_unit_1/geometry_mm)
						// {
							// attribute<geometries/rdc>     geometry_rd (poly)       := geometry[geometries/rdc];
						// }
					}
				}

				
				
				// parameter<geometries/rdc_mm>  union (poly)           := union_polygon(geometry_mm);
				
				// unit<uint32> unioned_unit_1 : nrofrows = 1
				// {
					// attribute<geometries/rdc_mm> geometry_mm (poly) := union_data(., ../union);
				// }
				
				// unit<uint32> single2multi_1 := split_polygon(unioned_unit_1/geometry_mm)
				// {
					// attribute<geometries/rdc>     geometry_rd (poly)       := geometry[geometries/rdc];
				// }
			}

		}
		
		unit<uint32> visuat_uq := unique(Visualisat)
		{
			attribute<int32>  values;
			attribute<string> label   := rjoin(values, ../Visualisat, ../label);
		}
		
		
		// unit<uint32> LU := subset(ReadFSS/Groep != 'REGISTRATIEFGEBIED_VLAK' 
									// && !(ReadFSS/BBG_Code == 8[typeringen/BBG]  && ReadFSS/area > 1000000[m2])    // grote bedrijfsterreinen, bijv Binckhorst
									// && !(ReadFSS/BBG_Code == 20[typeringen/BBG] && ReadFSS/area > 10000000[m2])  // grote kassengebieden, bijv onder Den Haag
									// && !(ReadFSS/BBG_Code == 12[typeringen/BBG] && ReadFSS/area > 10000000[m2])  // grote delfstoffen gebieden, bijv haven Rotterdam
								// )
		// ,	DialogType = "Map"
		// ,	DialogData = "geometry_rd"
		// {
			// attribute<geometries/rdc>                             geometry_rd (poly)    := ReadFSS/geometry_rd[nr_OrgEntity];
			// attribute<typeringen/brt/visualisatiecodes>           visualisatiecodes_rel := ReadFSS/visualisatiecodes_rel[nr_OrgEntity];
			// attribute<int32>                                      Wegvlak_groep         := ReadFSS/Wegvlak_groep[nr_OrgEntity];
			// attribute<typeringen/BBG>                             bbg_code              := ReadFSS/BBG_code[nr_OrgEntity];
			
			// attribute<m2>                                         area                  := area(geometry_rd, m2);
			
			// attribute<geometries/rdc>                             centroid              := centroid(geometry_rd);
			// attribute<CBS/begrenzing_bebouwd_gebied/Bevolkingskern_2011/shapes>   BegBebGeb_rel  := point_in_polygon(centroid, CBS/begrenzing_bebouwd_gebied/Bevolkingskern_2011/shapes/Geometry);
			// attribute<.>                per_grid_10m (NL_grid/domain_10m) := poly2grid(geometry_rd, NL_grid/domain_10m);
			
		// }
		
		container MaakLosseCat :=
			for_each_ne(
				typeringen/BRT/visualisatiecodes/label_uq/name
				, 'BRT_groepen(' +string(id(typeringen/BRT/visualisatiecodes/label_uq))+ ')'
			);
			
		Template BRT_groepen
		{
			///
			parameter<typeringen/BRT/visualisatiecodes/label_uq> label_rel;
			///
		
			unit<uint32> vlak := subset(ReadFSS/label_uq_rel == label_rel)
			,	DialogType = "Map"
			,	DialogData = "geometry_rd"
			{
				attribute<geometries/rdc>                             geometry_rd (poly)    := ReadFSS/geometry_rd[nr_OrgEntity];
				attribute<typeringen/brt/visualisatiecodes>           Visualisatiecodes_rel := ReadFSS/Visualisatiecodes_rel[nr_OrgEntity];
				attribute<int32>                                      Visualisat            := ReadFSS/Visualisat[nr_OrgEntity];
				attribute<m2>                                         area                  := area(geometry_rd, m2);
				
				
				container DistanceTo
				{
					unit<uint32>      segments                := arc2segm(../geometry_rd);
					unit<uint32>      pointset                := dyna_point(segments/point, segments/nextpoint, value(100, m)), DialogType = "Map", DialogData = "point"
					{
						attribute<NL_grid/domain> grid_rel  := point[NL_grid/domain];
					}
					attribute<m>      DistTo (NL_grid/domain) := GridDist(resistance, pointset/grid_rel, const(0, pointset, m));
					attribute<m>      resistance (NL_grid/domain)	:= const(100,NL_grid/domain,m);
				}

			}
		}
	}
}
